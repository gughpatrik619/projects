%!PS-Adobe-3.1 EPSF-3.0
%ADO_DSC_Encoding: Windows Cyrillic
%%Title: Car parking set.eps
%%Creator: Adobe Illustrator(R) 16.0
%%For: Виталий Викторович
%%CreationDate: 4/1/2019
%%BoundingBox: 0 0 1130 800
%%HiResBoundingBox: 0 0 1130 800
%%CropBox: 0 0 1130 800
%%LanguageLevel: 2
%%DocumentData: Clean7Bit
%ADOBeginClientInjection: DocumentHeader "AI11EPS"
%%AI8_CreatorVersion: 16.0.0%AI9_PrintingDataBegin%ADO_BuildNumber: Adobe Illustrator(R) 16.0.0 x682 R agm 4.6676 ct 5.2591%ADO_ContainsXMP: MainFirst
%ADOEndClientInjection: DocumentHeader "AI11EPS"
%%Pages: 1
%%DocumentNeededResources: 
%%DocumentSuppliedResources: procset Adobe_AGM_Image 1.0 0
%%+ procset Adobe_CoolType_Utility_T42 1.0 0
%%+ procset Adobe_CoolType_Utility_MAKEOCF 1.23 0
%%+ procset Adobe_CoolType_Core 2.31 0
%%+ procset Adobe_AGM_Core 2.0 0
%%+ procset Adobe_AGM_Utils 1.0 0
%%DocumentFonts: 
%%DocumentNeededFonts: 
%%DocumentNeededFeatures: 
%%DocumentSuppliedFeatures: 
%%DocumentCustomColors: 
%%CMYKCustomColor: 
%%RGBCustomColor: 
%%EndComments
         
                                                                                                                                                                                                                                                         
                                                                                                                                                                                                                                                         
                                                                                                                                                                                                                                                         
                                                                                                                                                                                                                                                         
                                                                                                                                                                                                                                                         
                                                                                                                                                                                                                                                         
%%BeginDefaults
%%ViewingOrientation: 1 0 0 1
%%EndDefaults
%%BeginProlog
%%BeginResource: procset Adobe_AGM_Utils 1.0 0
%%Version: 1.0 0
%%Copyright: Copyright(C)2000-2006 Adobe Systems, Inc. All Rights Reserved.
systemdict/setpacking known
{currentpacking	true setpacking}if
userdict/Adobe_AGM_Utils 75 dict dup begin put
/bdf
{bind def}bind def
/nd{null def}bdf
/xdf
{exch def}bdf
/ldf 
{load def}bdf
/ddf
{put}bdf	
/xddf
{3 -1 roll put}bdf	
/xpt
{exch put}bdf
/ndf
{
	exch dup where{
		pop pop pop
	}{
		xdf
	}ifelse
}def
/cdndf
{
	exch dup currentdict exch known{
		pop pop
	}{
		exch def
	}ifelse
}def
/gx
{get exec}bdf
/ps_level
	/languagelevel where{
		pop systemdict/languagelevel gx
	}{
		1
	}ifelse
def
/level2 
	ps_level 2 ge
def
/level3 
	ps_level 3 ge
def
/ps_version
	{version cvr}stopped{-1}if
def
/set_gvm
{currentglobal exch setglobal}bdf
/reset_gvm
{setglobal}bdf
/makereadonlyarray
{
	/packedarray where{pop packedarray
	}{
		array astore readonly}ifelse
}bdf
/map_reserved_ink_name
{
	dup type/stringtype eq{
		dup/Red eq{
			pop(_Red_)
		}{
			dup/Green eq{
				pop(_Green_)
			}{
				dup/Blue eq{
					pop(_Blue_)
				}{
					dup()cvn eq{
						pop(Process)
					}if
				}ifelse
			}ifelse
		}ifelse
	}if
}bdf
/AGMUTIL_GSTATE 22 dict def
/get_gstate
{
	AGMUTIL_GSTATE begin
	/AGMUTIL_GSTATE_clr_spc currentcolorspace def
	/AGMUTIL_GSTATE_clr_indx 0 def
	/AGMUTIL_GSTATE_clr_comps 12 array def
	mark currentcolor counttomark
		{AGMUTIL_GSTATE_clr_comps AGMUTIL_GSTATE_clr_indx 3 -1 roll put
		/AGMUTIL_GSTATE_clr_indx AGMUTIL_GSTATE_clr_indx 1 add def}repeat pop
	/AGMUTIL_GSTATE_fnt rootfont def
	/AGMUTIL_GSTATE_lw currentlinewidth def
	/AGMUTIL_GSTATE_lc currentlinecap def
	/AGMUTIL_GSTATE_lj currentlinejoin def
	/AGMUTIL_GSTATE_ml currentmiterlimit def
	currentdash/AGMUTIL_GSTATE_do xdf/AGMUTIL_GSTATE_da xdf
	/AGMUTIL_GSTATE_sa currentstrokeadjust def
	/AGMUTIL_GSTATE_clr_rnd currentcolorrendering def
	/AGMUTIL_GSTATE_op currentoverprint def
	/AGMUTIL_GSTATE_bg currentblackgeneration cvlit def
	/AGMUTIL_GSTATE_ucr currentundercolorremoval cvlit def
	currentcolortransfer cvlit/AGMUTIL_GSTATE_gy_xfer xdf cvlit/AGMUTIL_GSTATE_b_xfer xdf
		cvlit/AGMUTIL_GSTATE_g_xfer xdf cvlit/AGMUTIL_GSTATE_r_xfer xdf
	/AGMUTIL_GSTATE_ht currenthalftone def
	/AGMUTIL_GSTATE_flt currentflat def
	end
}def
/set_gstate
{
	AGMUTIL_GSTATE begin
	AGMUTIL_GSTATE_clr_spc setcolorspace
	AGMUTIL_GSTATE_clr_indx{AGMUTIL_GSTATE_clr_comps AGMUTIL_GSTATE_clr_indx 1 sub get
	/AGMUTIL_GSTATE_clr_indx AGMUTIL_GSTATE_clr_indx 1 sub def}repeat setcolor
	AGMUTIL_GSTATE_fnt setfont
	AGMUTIL_GSTATE_lw setlinewidth
	AGMUTIL_GSTATE_lc setlinecap
	AGMUTIL_GSTATE_lj setlinejoin
	AGMUTIL_GSTATE_ml setmiterlimit
	AGMUTIL_GSTATE_da AGMUTIL_GSTATE_do setdash
	AGMUTIL_GSTATE_sa setstrokeadjust
	AGMUTIL_GSTATE_clr_rnd setcolorrendering
	AGMUTIL_GSTATE_op setoverprint
	AGMUTIL_GSTATE_bg cvx setblackgeneration
	AGMUTIL_GSTATE_ucr cvx setundercolorremoval
	AGMUTIL_GSTATE_r_xfer cvx AGMUTIL_GSTATE_g_xfer cvx AGMUTIL_GSTATE_b_xfer cvx
		AGMUTIL_GSTATE_gy_xfer cvx setcolortransfer
	AGMUTIL_GSTATE_ht/HalftoneType get dup 9 eq exch 100 eq or
		{
		currenthalftone/HalftoneType get AGMUTIL_GSTATE_ht/HalftoneType get ne
			{
			 mark AGMUTIL_GSTATE_ht{sethalftone}stopped cleartomark
			}if
		}{
		AGMUTIL_GSTATE_ht sethalftone
		}ifelse
	AGMUTIL_GSTATE_flt setflat
	end
}def
/get_gstate_and_matrix
{
	AGMUTIL_GSTATE begin
	/AGMUTIL_GSTATE_ctm matrix currentmatrix def
	end
	get_gstate
}def
/set_gstate_and_matrix
{
	set_gstate
	AGMUTIL_GSTATE begin
	AGMUTIL_GSTATE_ctm setmatrix
	end
}def
/AGMUTIL_str256 256 string def
/AGMUTIL_src256 256 string def
/AGMUTIL_dst64 64 string def
/AGMUTIL_srcLen nd
/AGMUTIL_ndx nd
/AGMUTIL_cpd nd
/capture_cpd{
	//Adobe_AGM_Utils/AGMUTIL_cpd currentpagedevice ddf
}def
/thold_halftone
{
	level3
		{sethalftone currenthalftone}
		{
			dup/HalftoneType get 3 eq
			{
				sethalftone currenthalftone
			}{
				begin
				Width Height mul{
					Thresholds read{pop}if
				}repeat
				end
				currenthalftone
			}ifelse
		}ifelse
}def 
/rdcmntline
{
	currentfile AGMUTIL_str256 readline pop
	(%)anchorsearch{pop}if
}bdf
/filter_cmyk
{	
	dup type/filetype ne{
		exch()/SubFileDecode filter
	}{
		exch pop
	}
	ifelse
	[
	exch
	{
		AGMUTIL_src256 readstring pop
		dup length/AGMUTIL_srcLen exch def
		/AGMUTIL_ndx 0 def
		AGMCORE_plate_ndx 4 AGMUTIL_srcLen 1 sub{
			1 index exch get
			AGMUTIL_dst64 AGMUTIL_ndx 3 -1 roll put
			/AGMUTIL_ndx AGMUTIL_ndx 1 add def
		}for
		pop
		AGMUTIL_dst64 0 AGMUTIL_ndx getinterval
	}
	bind
	/exec cvx
	]cvx
}bdf
/filter_indexed_devn
{
	cvi Names length mul names_index add Lookup exch get
}bdf
/filter_devn
{	
	4 dict begin
	/srcStr xdf
	/dstStr xdf
	dup type/filetype ne{
		0()/SubFileDecode filter
	}if
	[
	exch
		[
			/devicen_colorspace_dict/AGMCORE_gget cvx/begin cvx
			currentdict/srcStr get/readstring cvx/pop cvx
			/dup cvx/length cvx 0/gt cvx[
				Adobe_AGM_Utils/AGMUTIL_ndx 0/ddf cvx
				names_index Names length currentdict/srcStr get length 1 sub{
					1/index cvx/exch cvx/get cvx
					currentdict/dstStr get/AGMUTIL_ndx/load cvx 3 -1/roll cvx/put cvx
					Adobe_AGM_Utils/AGMUTIL_ndx/AGMUTIL_ndx/load cvx 1/add cvx/ddf cvx
				}for
				currentdict/dstStr get 0/AGMUTIL_ndx/load cvx/getinterval cvx
			]cvx/if cvx
			/end cvx
		]cvx
		bind
		/exec cvx
	]cvx
	end
}bdf
/AGMUTIL_imagefile nd
/read_image_file
{
	AGMUTIL_imagefile 0 setfileposition
	10 dict begin
	/imageDict xdf
	/imbufLen Width BitsPerComponent mul 7 add 8 idiv def
	/imbufIdx 0 def
	/origDataSource imageDict/DataSource get def
	/origMultipleDataSources imageDict/MultipleDataSources get def
	/origDecode imageDict/Decode get def
	/dstDataStr imageDict/Width get colorSpaceElemCnt mul string def
	imageDict/MultipleDataSources known{MultipleDataSources}{false}ifelse
	{
		/imbufCnt imageDict/DataSource get length def
		/imbufs imbufCnt array def
		0 1 imbufCnt 1 sub{
			/imbufIdx xdf
			imbufs imbufIdx imbufLen string put
			imageDict/DataSource get imbufIdx[AGMUTIL_imagefile imbufs imbufIdx get/readstring cvx/pop cvx]cvx put
		}for
		DeviceN_PS2{
			imageDict begin
		 	/DataSource[DataSource/devn_sep_datasource cvx]cvx def
			/MultipleDataSources false def
			/Decode[0 1]def
			end
		}if
	}{
		/imbuf imbufLen string def
		Indexed_DeviceN level3 not and DeviceN_NoneName or{
			/srcDataStrs[imageDict begin
				currentdict/MultipleDataSources known{MultipleDataSources{DataSource length}{1}ifelse}{1}ifelse
				{
					Width Decode length 2 div mul cvi string
				}repeat
				end]def		
			imageDict begin
		 	/DataSource[AGMUTIL_imagefile Decode BitsPerComponent false 1/filter_indexed_devn load dstDataStr srcDataStrs devn_alt_datasource/exec cvx]cvx def
			/Decode[0 1]def
			end
		}{
			imageDict/DataSource[1 string dup 0 AGMUTIL_imagefile Decode length 2 idiv string/readstring cvx/pop cvx names_index/get cvx/put cvx]cvx put
			imageDict/Decode[0 1]put
		}ifelse
	}ifelse
	imageDict exch
	load exec
	imageDict/DataSource origDataSource put
	imageDict/MultipleDataSources origMultipleDataSources put
	imageDict/Decode origDecode put	
	end
}bdf
/write_image_file
{
	begin
	{(AGMUTIL_imagefile)(w+)file}stopped{
		false
	}{
		Adobe_AGM_Utils/AGMUTIL_imagefile xddf 
		2 dict begin
		/imbufLen Width BitsPerComponent mul 7 add 8 idiv def
		MultipleDataSources{DataSource 0 get}{DataSource}ifelse type/filetype eq{
			/imbuf imbufLen string def
		}if
		1 1 Height MultipleDataSources not{Decode length 2 idiv mul}if{
			pop
			MultipleDataSources{
			 	0 1 DataSource length 1 sub{
					DataSource type dup
					/arraytype eq{
						pop DataSource exch gx
					}{
						/filetype eq{
							DataSource exch get imbuf readstring pop
						}{
							DataSource exch get
						}ifelse
					}ifelse
					AGMUTIL_imagefile exch writestring
				}for
			}{
				DataSource type dup
				/arraytype eq{
					pop DataSource exec
				}{
					/filetype eq{
						DataSource imbuf readstring pop
					}{
						DataSource
					}ifelse
				}ifelse
				AGMUTIL_imagefile exch writestring
			}ifelse
		}for
		end
		true
	}ifelse
	end
}bdf
/close_image_file
{
	AGMUTIL_imagefile closefile(AGMUTIL_imagefile)deletefile
}def
statusdict/product known userdict/AGMP_current_show known not and{
	/pstr statusdict/product get def
	pstr(HP LaserJet 2200)eq 	
	pstr(HP LaserJet 4000 Series)eq or
	pstr(HP LaserJet 4050 Series )eq or
	pstr(HP LaserJet 8000 Series)eq or
	pstr(HP LaserJet 8100 Series)eq or
	pstr(HP LaserJet 8150 Series)eq or
	pstr(HP LaserJet 5000 Series)eq or
	pstr(HP LaserJet 5100 Series)eq or
	pstr(HP Color LaserJet 4500)eq or
	pstr(HP Color LaserJet 4600)eq or
	pstr(HP LaserJet 5Si)eq or
	pstr(HP LaserJet 1200 Series)eq or
	pstr(HP LaserJet 1300 Series)eq or
	pstr(HP LaserJet 4100 Series)eq or 
	{
 		userdict/AGMP_current_show/show load put
		userdict/show{
		 currentcolorspace 0 get
		 /Pattern eq
		 {false charpath f}
		 {AGMP_current_show}ifelse
		}put
	}if
	currentdict/pstr undef
}if
/consumeimagedata
{
	begin
	AGMIMG_init_common
	currentdict/MultipleDataSources known not
		{/MultipleDataSources false def}if
	MultipleDataSources
		{
		DataSource 0 get type
		dup/filetype eq
			{
			1 dict begin
			/flushbuffer Width cvi string def
			1 1 Height cvi
				{
				pop
				0 1 DataSource length 1 sub
					{
					DataSource exch get
					flushbuffer readstring pop pop
					}for
				}for
			end
			}if
		dup/arraytype eq exch/packedarraytype eq or DataSource 0 get xcheck and
			{
			Width Height mul cvi
				{
				0 1 DataSource length 1 sub
					{dup DataSource exch gx length exch 0 ne{pop}if}for
				dup 0 eq
					{pop exit}if
				sub dup 0 le
					{exit}if
				}loop
			pop
			}if		
		}
		{
		/DataSource load type 
		dup/filetype eq
			{
			1 dict begin
			/flushbuffer Width Decode length 2 idiv mul cvi string def
			1 1 Height{pop DataSource flushbuffer readstring pop pop}for
			end
			}if
		dup/arraytype eq exch/packedarraytype eq or/DataSource load xcheck and
			{
				Height Width BitsPerComponent mul 8 BitsPerComponent sub add 8 idiv Decode length 2 idiv mul mul
					{
					DataSource length dup 0 eq
						{pop exit}if
					sub dup 0 le
						{exit}if
					}loop
				pop
			}if
		}ifelse
	end
}bdf
/addprocs
{
	 2{/exec load}repeat
	 3 1 roll
	 [5 1 roll]bind cvx
}def
/modify_halftone_xfer
{
	currenthalftone dup length dict copy begin
	 currentdict 2 index known{
	 	1 index load dup length dict copy begin
		currentdict/TransferFunction known{
			/TransferFunction load
		}{
			currenttransfer
		}ifelse
		 addprocs/TransferFunction xdf 
		 currentdict end def
		currentdict end sethalftone
	}{
		currentdict/TransferFunction known{
			/TransferFunction load 
		}{
			currenttransfer
		}ifelse
		addprocs/TransferFunction xdf
		currentdict end sethalftone		
		pop
	}ifelse
}def
/clonearray
{
	dup xcheck exch
	dup length array exch
	Adobe_AGM_Core/AGMCORE_tmp -1 ddf 
	{
	Adobe_AGM_Core/AGMCORE_tmp 2 copy get 1 add ddf 
	dup type/dicttype eq
		{
			Adobe_AGM_Core/AGMCORE_tmp get
			exch
			clonedict
			Adobe_AGM_Core/AGMCORE_tmp 4 -1 roll ddf 
		}if
	dup type/arraytype eq
		{
			Adobe_AGM_Core/AGMCORE_tmp get exch
			clonearray
			Adobe_AGM_Core/AGMCORE_tmp 4 -1 roll ddf 
		}if
	exch dup
	Adobe_AGM_Core/AGMCORE_tmp get 4 -1 roll put
	}forall
	exch{cvx}if
}bdf
/clonedict
{
	dup length dict
	begin
	{
		dup type/dicttype eq
			{clonedict}if
		dup type/arraytype eq
			{clonearray}if
		def
	}forall
	currentdict
	end
}bdf
/DeviceN_PS2
{
	/currentcolorspace AGMCORE_gget 0 get/DeviceN eq level3 not and
}bdf
/Indexed_DeviceN
{
	/indexed_colorspace_dict AGMCORE_gget dup null ne{
		dup/CSDBase known{
			/CSDBase get/CSD get_res/Names known 
		}{
			pop false
		}ifelse
	}{
		pop false
	}ifelse
}bdf
/DeviceN_NoneName
{	
	/Names where{
		pop
		false Names
		{
			(None)eq or
		}forall
	}{
		false
	}ifelse
}bdf
/DeviceN_PS2_inRip_seps
{
	/AGMCORE_in_rip_sep where
	{
		pop dup type dup/arraytype eq exch/packedarraytype eq or
		{
			dup 0 get/DeviceN eq level3 not and AGMCORE_in_rip_sep and
			{
				/currentcolorspace exch AGMCORE_gput
				false
			}{
				true
			}ifelse
		}{
			true
		}ifelse
	}{
		true
	}ifelse
}bdf
/base_colorspace_type
{
	dup type/arraytype eq{0 get}if
}bdf
/currentdistillerparams where{pop currentdistillerparams/CoreDistVersion get 5000 lt}{true}ifelse
{
	/pdfmark_5{cleartomark}bind def
}{
	/pdfmark_5{pdfmark}bind def
}ifelse
/ReadBypdfmark_5
{
	currentfile exch 0 exch/SubFileDecode filter
	/currentdistillerparams where 
	{pop currentdistillerparams/CoreDistVersion get 5000 lt}{true}ifelse
	{flushfile cleartomark}
	{/PUT pdfmark}ifelse 	
}bdf
/ReadBypdfmark_5_string
{
	2 dict begin
	/makerString exch def string/tmpString exch def
	{
		currentfile tmpString readline not{pop exit}if
		makerString anchorsearch
		{
			pop pop cleartomark exit
		}{
			3 copy/PUT pdfmark_5 pop 2 copy(\n)/PUT pdfmark_5
		}ifelse
	}loop
	end
}bdf
/xpdfm
{
	{
		dup 0 get/Label eq
		{
			aload length[exch 1 add 1 roll/PAGELABEL
		}{
			aload pop
			[{ThisPage}<<5 -2 roll>>/PUT
		}ifelse
		pdfmark_5
	}forall
}bdf
/lmt{
	dup 2 index le{exch}if pop dup 2 index ge{exch}if pop
}bdf
/int{
	dup 2 index sub 3 index 5 index sub div 6 -2 roll sub mul exch pop add exch pop
}bdf
/ds{
	Adobe_AGM_Utils begin
}bdf
/dt{
	currentdict Adobe_AGM_Utils eq{
		end
	}if
}bdf
systemdict/setpacking known
{setpacking}if
%%EndResource
%%BeginResource: procset Adobe_AGM_Core 2.0 0
%%Version: 2.0 0
%%Copyright: Copyright(C)1997-2007 Adobe Systems, Inc. All Rights Reserved.
systemdict/setpacking known
{
	currentpacking
	true setpacking
}if
userdict/Adobe_AGM_Core 209 dict dup begin put
/Adobe_AGM_Core_Id/Adobe_AGM_Core_2.0_0 def
/AGMCORE_str256 256 string def
/AGMCORE_save nd
/AGMCORE_graphicsave nd
/AGMCORE_c 0 def
/AGMCORE_m 0 def
/AGMCORE_y 0 def
/AGMCORE_k 0 def
/AGMCORE_cmykbuf 4 array def
/AGMCORE_screen[currentscreen]cvx def
/AGMCORE_tmp 0 def
/AGMCORE_&setgray nd
/AGMCORE_&setcolor nd
/AGMCORE_&setcolorspace nd
/AGMCORE_&setcmykcolor nd
/AGMCORE_cyan_plate nd
/AGMCORE_magenta_plate nd
/AGMCORE_yellow_plate nd
/AGMCORE_black_plate nd
/AGMCORE_plate_ndx nd
/AGMCORE_get_ink_data nd
/AGMCORE_is_cmyk_sep nd
/AGMCORE_host_sep nd
/AGMCORE_avoid_L2_sep_space nd
/AGMCORE_distilling nd
/AGMCORE_composite_job nd
/AGMCORE_producing_seps nd
/AGMCORE_ps_level -1 def
/AGMCORE_ps_version -1 def
/AGMCORE_environ_ok nd
/AGMCORE_CSD_cache 0 dict def
/AGMCORE_currentoverprint false def
/AGMCORE_deltaX nd
/AGMCORE_deltaY nd
/AGMCORE_name nd
/AGMCORE_sep_special nd
/AGMCORE_err_strings 4 dict def
/AGMCORE_cur_err nd
/AGMCORE_current_spot_alias false def
/AGMCORE_inverting false def
/AGMCORE_feature_dictCount nd
/AGMCORE_feature_opCount nd
/AGMCORE_feature_ctm nd
/AGMCORE_ConvertToProcess false def
/AGMCORE_Default_CTM matrix def
/AGMCORE_Default_PageSize nd
/AGMCORE_Default_flatness nd
/AGMCORE_currentbg nd
/AGMCORE_currentucr nd
/AGMCORE_pattern_paint_type 0 def
/knockout_unitsq nd
currentglobal true setglobal
[/CSA/Gradient/Procedure]
{
	/Generic/Category findresource dup length dict copy/Category defineresource pop
}forall
setglobal
/AGMCORE_key_known
{
	where{
		/Adobe_AGM_Core_Id known
	}{
		false
	}ifelse
}ndf
/flushinput
{
	save
	2 dict begin
	/CompareBuffer 3 -1 roll def
	/readbuffer 256 string def
	mark
	{
	currentfile readbuffer{readline}stopped
		{cleartomark mark}
		{
		not
			{pop exit}
		if
		CompareBuffer eq
			{exit}
		if
		}ifelse
	}loop
	cleartomark
	end
	restore
}bdf
/getspotfunction
{
	AGMCORE_screen exch pop exch pop
	dup type/dicttype eq{
		dup/HalftoneType get 1 eq{
			/SpotFunction get
		}{
			dup/HalftoneType get 2 eq{
				/GraySpotFunction get
			}{
				pop
				{
					abs exch abs 2 copy add 1 gt{
						1 sub dup mul exch 1 sub dup mul add 1 sub
					}{
						dup mul exch dup mul add 1 exch sub
					}ifelse
				}bind
			}ifelse
		}ifelse
	}if
}def
/np
{newpath}bdf
/clp_npth
{clip np}def
/eoclp_npth
{eoclip np}def
/npth_clp
{np clip}def
/graphic_setup
{
	/AGMCORE_graphicsave save store
	concat
	0 setgray
	0 setlinecap
	0 setlinejoin
	1 setlinewidth
	[]0 setdash
	10 setmiterlimit
	np
	false setoverprint
	false setstrokeadjust
	//Adobe_AGM_Core/spot_alias gx
	/Adobe_AGM_Image where{
		pop
		Adobe_AGM_Image/spot_alias 2 copy known{
			gx
		}{
			pop pop
		}ifelse
	}if
	/sep_colorspace_dict null AGMCORE_gput
	100 dict begin
	/dictstackcount countdictstack def
	/showpage{}def
	mark
}def
/graphic_cleanup
{
	cleartomark
	dictstackcount 1 countdictstack 1 sub{end}for
	end
	AGMCORE_graphicsave restore
}def
/compose_error_msg
{
	grestoreall initgraphics	
	/Helvetica findfont 10 scalefont setfont
	/AGMCORE_deltaY 100 def
	/AGMCORE_deltaX 310 def
	clippath pathbbox np pop pop 36 add exch 36 add exch moveto
	0 AGMCORE_deltaY rlineto AGMCORE_deltaX 0 rlineto
	0 AGMCORE_deltaY neg rlineto AGMCORE_deltaX neg 0 rlineto closepath
	0 AGMCORE_&setgray
	gsave 1 AGMCORE_&setgray fill grestore 
	1 setlinewidth gsave stroke grestore
	currentpoint AGMCORE_deltaY 15 sub add exch 8 add exch moveto
	/AGMCORE_deltaY 12 def
	/AGMCORE_tmp 0 def
	AGMCORE_err_strings exch get
		{
		dup 32 eq
			{
			pop
			AGMCORE_str256 0 AGMCORE_tmp getinterval
			stringwidth pop currentpoint pop add AGMCORE_deltaX 28 add gt
				{
				currentpoint AGMCORE_deltaY sub exch pop
				clippath pathbbox pop pop pop 44 add exch moveto
				}if
			AGMCORE_str256 0 AGMCORE_tmp getinterval show( )show
			0 1 AGMCORE_str256 length 1 sub
				{
				AGMCORE_str256 exch 0 put
				}for
			/AGMCORE_tmp 0 def
			}{
				AGMCORE_str256 exch AGMCORE_tmp xpt
				/AGMCORE_tmp AGMCORE_tmp 1 add def
			}ifelse
		}forall
}bdf
/AGMCORE_CMYKDeviceNColorspaces[
	[/Separation/None/DeviceCMYK{0 0 0}]
	[/Separation(Black)/DeviceCMYK{0 0 0 4 -1 roll}bind]
	[/Separation(Yellow)/DeviceCMYK{0 0 3 -1 roll 0}bind]
	[/DeviceN[(Yellow)(Black)]/DeviceCMYK{0 0 4 2 roll}bind]
	[/Separation(Magenta)/DeviceCMYK{0 exch 0 0}bind]
	[/DeviceN[(Magenta)(Black)]/DeviceCMYK{0 3 1 roll 0 exch}bind]
	[/DeviceN[(Magenta)(Yellow)]/DeviceCMYK{0 3 1 roll 0}bind]
	[/DeviceN[(Magenta)(Yellow)(Black)]/DeviceCMYK{0 4 1 roll}bind]
	[/Separation(Cyan)/DeviceCMYK{0 0 0}]
	[/DeviceN[(Cyan)(Black)]/DeviceCMYK{0 0 3 -1 roll}bind]
	[/DeviceN[(Cyan)(Yellow)]/DeviceCMYK{0 exch 0}bind]
	[/DeviceN[(Cyan)(Yellow)(Black)]/DeviceCMYK{0 3 1 roll}bind]
	[/DeviceN[(Cyan)(Magenta)]/DeviceCMYK{0 0}]
	[/DeviceN[(Cyan)(Magenta)(Black)]/DeviceCMYK{0 exch}bind]
	[/DeviceN[(Cyan)(Magenta)(Yellow)]/DeviceCMYK{0}]
	[/DeviceCMYK]
]def
/ds{
	Adobe_AGM_Core begin
	/currentdistillerparams where
		{
		pop currentdistillerparams/CoreDistVersion get 5000 lt
			{<</DetectBlends false>>setdistillerparams}if
		}if	
	/AGMCORE_ps_version xdf
	/AGMCORE_ps_level xdf
	errordict/AGM_handleerror known not{
		errordict/AGM_handleerror errordict/handleerror get put
		errordict/handleerror{
			Adobe_AGM_Core begin
			$error/newerror get AGMCORE_cur_err null ne and{
				$error/newerror false put
				AGMCORE_cur_err compose_error_msg
			}if
			$error/newerror true put
			end
			errordict/AGM_handleerror get exec
			}bind put
		}if
	/AGMCORE_environ_ok 
		ps_level AGMCORE_ps_level ge
		ps_version AGMCORE_ps_version ge and 
		AGMCORE_ps_level -1 eq or
	def
	AGMCORE_environ_ok not
		{/AGMCORE_cur_err/AGMCORE_bad_environ def}if
	/AGMCORE_&setgray systemdict/setgray get def
	level2{
		/AGMCORE_&setcolor systemdict/setcolor get def
		/AGMCORE_&setcolorspace systemdict/setcolorspace get def
	}if
	/AGMCORE_currentbg currentblackgeneration def
	/AGMCORE_currentucr currentundercolorremoval def
	/AGMCORE_Default_flatness currentflat def
	/AGMCORE_distilling
		/product where{
			pop systemdict/setdistillerparams known product(Adobe PostScript Parser)ne and
		}{
			false
		}ifelse
	def
	/AGMCORE_GSTATE AGMCORE_key_known not{
		/AGMCORE_GSTATE 21 dict def
		/AGMCORE_tmpmatrix matrix def
		/AGMCORE_gstack 32 array def
		/AGMCORE_gstackptr 0 def
		/AGMCORE_gstacksaveptr 0 def
		/AGMCORE_gstackframekeys 14 def
		/AGMCORE_&gsave/gsave ldf
		/AGMCORE_&grestore/grestore ldf
		/AGMCORE_&grestoreall/grestoreall ldf
		/AGMCORE_&save/save ldf
		/AGMCORE_&setoverprint/setoverprint ldf
		/AGMCORE_gdictcopy{
			begin
			{def}forall
			end
		}def
		/AGMCORE_gput{
			AGMCORE_gstack AGMCORE_gstackptr get
			3 1 roll
			put
		}def
		/AGMCORE_gget{
			AGMCORE_gstack AGMCORE_gstackptr get
			exch
			get
		}def
		/gsave{
			AGMCORE_&gsave
			AGMCORE_gstack AGMCORE_gstackptr get
			AGMCORE_gstackptr 1 add
			dup 32 ge{limitcheck}if
			/AGMCORE_gstackptr exch store
			AGMCORE_gstack AGMCORE_gstackptr get
			AGMCORE_gdictcopy
		}def
		/grestore{
			AGMCORE_&grestore
			AGMCORE_gstackptr 1 sub
			dup AGMCORE_gstacksaveptr lt{1 add}if
			dup AGMCORE_gstack exch get dup/AGMCORE_currentoverprint known
				{/AGMCORE_currentoverprint get setoverprint}{pop}ifelse
			/AGMCORE_gstackptr exch store
		}def
		/grestoreall{
			AGMCORE_&grestoreall
			/AGMCORE_gstackptr AGMCORE_gstacksaveptr store 
		}def
		/save{
			AGMCORE_&save
			AGMCORE_gstack AGMCORE_gstackptr get
			AGMCORE_gstackptr 1 add
			dup 32 ge{limitcheck}if
			/AGMCORE_gstackptr exch store
			/AGMCORE_gstacksaveptr AGMCORE_gstackptr store
			AGMCORE_gstack AGMCORE_gstackptr get
			AGMCORE_gdictcopy
		}def
		/setoverprint{
			dup/AGMCORE_currentoverprint exch AGMCORE_gput AGMCORE_&setoverprint
		}def	
		0 1 AGMCORE_gstack length 1 sub{
				AGMCORE_gstack exch AGMCORE_gstackframekeys dict put
		}for
	}if
	level3/AGMCORE_&sysshfill AGMCORE_key_known not and
	{
		/AGMCORE_&sysshfill systemdict/shfill get def
		/AGMCORE_&sysmakepattern systemdict/makepattern get def
		/AGMCORE_&usrmakepattern/makepattern load def
	}if
	/currentcmykcolor[0 0 0 0]AGMCORE_gput
	/currentstrokeadjust false AGMCORE_gput
	/currentcolorspace[/DeviceGray]AGMCORE_gput
	/sep_tint 0 AGMCORE_gput
	/devicen_tints[0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0]AGMCORE_gput
	/sep_colorspace_dict null AGMCORE_gput
	/devicen_colorspace_dict null AGMCORE_gput
	/indexed_colorspace_dict null AGMCORE_gput
	/currentcolor_intent()AGMCORE_gput
	/customcolor_tint 1 AGMCORE_gput
	/absolute_colorimetric_crd null AGMCORE_gput
	/relative_colorimetric_crd null AGMCORE_gput
	/saturation_crd null AGMCORE_gput
	/perceptual_crd null AGMCORE_gput
	currentcolortransfer cvlit/AGMCore_gray_xfer xdf cvlit/AGMCore_b_xfer xdf
		 cvlit/AGMCore_g_xfer xdf cvlit/AGMCore_r_xfer xdf
	<<
	/MaxPatternItem currentsystemparams/MaxPatternCache get
	>>
	setuserparams
	end
}def
/ps
{
	/setcmykcolor where{
		pop
		Adobe_AGM_Core/AGMCORE_&setcmykcolor/setcmykcolor load put
	}if
	Adobe_AGM_Core begin
	/setcmykcolor
	{
		4 copy AGMCORE_cmykbuf astore/currentcmykcolor exch AGMCORE_gput
		1 sub 4 1 roll
		3{
			3 index add neg dup 0 lt{
				pop 0
			}if
			3 1 roll
		}repeat
		setrgbcolor pop
	}ndf
	/currentcmykcolor
	{
		/currentcmykcolor AGMCORE_gget aload pop
	}ndf
	/setoverprint
	{pop}ndf
	/currentoverprint
	{false}ndf
	/AGMCORE_cyan_plate 1 0 0 0 test_cmyk_color_plate def
	/AGMCORE_magenta_plate 0 1 0 0 test_cmyk_color_plate def
	/AGMCORE_yellow_plate 0 0 1 0 test_cmyk_color_plate def
	/AGMCORE_black_plate 0 0 0 1 test_cmyk_color_plate def
	/AGMCORE_plate_ndx 
		AGMCORE_cyan_plate{
			0
		}{
			AGMCORE_magenta_plate{
				1
			}{
				AGMCORE_yellow_plate{
					2
				}{
					AGMCORE_black_plate{
						3
					}{
						4
					}ifelse
				}ifelse
			}ifelse
		}ifelse
		def
	/AGMCORE_have_reported_unsupported_color_space false def
	/AGMCORE_report_unsupported_color_space
	{
		AGMCORE_have_reported_unsupported_color_space false eq
		{
			(Warning: Job contains content that cannot be separated with on-host methods. This content appears on the black plate, and knocks out all other plates.)==
			Adobe_AGM_Core/AGMCORE_have_reported_unsupported_color_space true ddf
		}if
	}def
	/AGMCORE_composite_job
		AGMCORE_cyan_plate AGMCORE_magenta_plate and AGMCORE_yellow_plate and AGMCORE_black_plate and def
	/AGMCORE_in_rip_sep
		/AGMCORE_in_rip_sep where{
			pop AGMCORE_in_rip_sep
		}{
			AGMCORE_distilling 
			{
				false
			}{
				userdict/Adobe_AGM_OnHost_Seps known{
					false
				}{
					level2{
						currentpagedevice/Separations 2 copy known{
							get
						}{
							pop pop false
						}ifelse
					}{
						false
					}ifelse
				}ifelse
			}ifelse
		}ifelse
	def
	/AGMCORE_producing_seps AGMCORE_composite_job not AGMCORE_in_rip_sep or def
	/AGMCORE_host_sep AGMCORE_producing_seps AGMCORE_in_rip_sep not and def
	/AGM_preserve_spots 
		/AGM_preserve_spots where{
			pop AGM_preserve_spots
		}{
			AGMCORE_distilling AGMCORE_producing_seps or
		}ifelse
	def
	/AGM_is_distiller_preserving_spotimages
	{
		currentdistillerparams/PreserveOverprintSettings known
		{
			currentdistillerparams/PreserveOverprintSettings get
				{
					currentdistillerparams/ColorConversionStrategy known
					{
						currentdistillerparams/ColorConversionStrategy get
						/sRGB ne
					}{
						true
					}ifelse
				}{
					false
				}ifelse
		}{
			false
		}ifelse
	}def
	/convert_spot_to_process where{pop}{
		/convert_spot_to_process
		{
			//Adobe_AGM_Core begin
			dup map_alias{
				/Name get exch pop
			}if
			dup dup(None)eq exch(All)eq or
				{
				pop false
				}{
				AGMCORE_host_sep
				{
					gsave
					1 0 0 0 setcmykcolor currentgray 1 exch sub
					0 1 0 0 setcmykcolor currentgray 1 exch sub
					0 0 1 0 setcmykcolor currentgray 1 exch sub
					0 0 0 1 setcmykcolor currentgray 1 exch sub
					add add add 0 eq
					{
						pop false
					}{
						false setoverprint
						current_spot_alias false set_spot_alias
						1 1 1 1 6 -1 roll findcmykcustomcolor 1 setcustomcolor
						set_spot_alias
						currentgray 1 ne
					}ifelse
					grestore
				}{
					AGMCORE_distilling
					{
						pop AGM_is_distiller_preserving_spotimages not
					}{
						//Adobe_AGM_Core/AGMCORE_name xddf
						false
						//Adobe_AGM_Core/AGMCORE_pattern_paint_type get 0 eq
						AGMUTIL_cpd/OverrideSeparations known and
						{
							AGMUTIL_cpd/OverrideSeparations get
							{
								/HqnSpots/ProcSet resourcestatus
								{
									pop pop pop true
								}if
							}if
						}if					
						{
							AGMCORE_name/HqnSpots/ProcSet findresource/TestSpot gx not
						}{
							gsave
							[/Separation AGMCORE_name/DeviceGray{}]AGMCORE_&setcolorspace
							false
							AGMUTIL_cpd/SeparationColorNames 2 copy known
							{
								get
								{AGMCORE_name eq or}forall
								not
							}{
								pop pop pop true
							}ifelse
							grestore
						}ifelse
					}ifelse
				}ifelse
			}ifelse
			end
		}def
	}ifelse
	/convert_to_process where{pop}{
		/convert_to_process
		{
			dup length 0 eq
				{
				pop false
				}{
				AGMCORE_host_sep
				{
				dup true exch
					{
					dup(Cyan)eq exch
					dup(Magenta)eq 3 -1 roll or exch
					dup(Yellow)eq 3 -1 roll or exch
					dup(Black)eq 3 -1 roll or
						{pop}
						{convert_spot_to_process and}ifelse
					}
				forall
					{
					true exch
						{
						dup(Cyan)eq exch
						dup(Magenta)eq 3 -1 roll or exch
						dup(Yellow)eq 3 -1 roll or exch
						(Black)eq or and
						}forall
						not
					}{pop false}ifelse
				}{
				false exch
					{
					/PhotoshopDuotoneList where{pop false}{true}ifelse
						{
						dup(Cyan)eq exch
						dup(Magenta)eq 3 -1 roll or exch
						dup(Yellow)eq 3 -1 roll or exch
						dup(Black)eq 3 -1 roll or
						{pop}
						{convert_spot_to_process or}ifelse
						}
						{
						convert_spot_to_process or
						}
					ifelse
					}
				forall
				}ifelse
			}ifelse
		}def
	}ifelse	
	/AGMCORE_avoid_L2_sep_space 
		version cvr 2012 lt 
		level2 and 
		AGMCORE_producing_seps not and
	def
	/AGMCORE_is_cmyk_sep
		AGMCORE_cyan_plate AGMCORE_magenta_plate or AGMCORE_yellow_plate or AGMCORE_black_plate or
	def
	/AGM_avoid_0_cmyk where{
		pop AGM_avoid_0_cmyk
	}{
		AGM_preserve_spots 
		userdict/Adobe_AGM_OnHost_Seps known 
		userdict/Adobe_AGM_InRip_Seps known or
		not and
	}ifelse
	{
		/setcmykcolor[
			{
				4 copy add add add 0 eq currentoverprint and{
					pop 0.0005
				}if
			}/exec cvx
			/AGMCORE_&setcmykcolor load dup type/operatortype ne{
				/exec cvx
			}if
		]cvx def
	}if
	/AGMCORE_IsSeparationAProcessColor
		{
		dup(Cyan)eq exch dup(Magenta)eq exch dup(Yellow)eq exch(Black)eq or or or
		}def
	AGMCORE_host_sep{
		/setcolortransfer
		{
			AGMCORE_cyan_plate{
				pop pop pop
			}{
			 	AGMCORE_magenta_plate{
			 		4 3 roll pop pop pop
			 	}{
			 		AGMCORE_yellow_plate{
			 			4 2 roll pop pop pop
			 		}{
			 			4 1 roll pop pop pop
			 		}ifelse
			 	}ifelse
			}ifelse
			settransfer 
		}	
		def
		/AGMCORE_get_ink_data
			AGMCORE_cyan_plate{
				{pop pop pop}
			}{
			 	AGMCORE_magenta_plate{
			 		{4 3 roll pop pop pop}
			 	}{
			 		AGMCORE_yellow_plate{
			 			{4 2 roll pop pop pop}
			 		}{
			 			{4 1 roll pop pop pop}
			 		}ifelse
			 	}ifelse
			}ifelse
		def
		/AGMCORE_RemoveProcessColorNames
			{
			1 dict begin
			/filtername
				{
				dup/Cyan eq 1 index(Cyan)eq or
					{pop(_cyan_)}if
				dup/Magenta eq 1 index(Magenta)eq or
					{pop(_magenta_)}if
				dup/Yellow eq 1 index(Yellow)eq or
					{pop(_yellow_)}if
				dup/Black eq 1 index(Black)eq or
					{pop(_black_)}if
				}def
			dup type/arraytype eq
				{[exch{filtername}forall]}
				{filtername}ifelse
			end
			}def
		level3{
			/AGMCORE_IsCurrentColor
				{
				dup AGMCORE_IsSeparationAProcessColor
					{
					AGMCORE_plate_ndx 0 eq
						{dup(Cyan)eq exch/Cyan eq or}if
					AGMCORE_plate_ndx 1 eq
						{dup(Magenta)eq exch/Magenta eq or}if
					AGMCORE_plate_ndx 2 eq
						{dup(Yellow)eq exch/Yellow eq or}if
					AGMCORE_plate_ndx 3 eq
						{dup(Black)eq exch/Black eq or}if
					AGMCORE_plate_ndx 4 eq
						{pop false}if
					}{
					gsave
					false setoverprint
					current_spot_alias false set_spot_alias
					1 1 1 1 6 -1 roll findcmykcustomcolor 1 setcustomcolor
					set_spot_alias
					currentgray 1 ne
					grestore
					}ifelse
				}def
			/AGMCORE_filter_functiondatasource
				{	
				5 dict begin
				/data_in xdf
				data_in type/stringtype eq
					{
					/ncomp xdf
					/comp xdf
					/string_out data_in length ncomp idiv string def
					0 ncomp data_in length 1 sub
						{
						string_out exch dup ncomp idiv exch data_in exch ncomp getinterval comp get 255 exch sub put
						}for
					string_out
					}{
					string/string_in xdf
					/string_out 1 string def
					/component xdf
					[
					data_in string_in/readstring cvx
						[component/get cvx 255/exch cvx/sub cvx string_out/exch cvx 0/exch cvx/put cvx string_out]cvx
						[/pop cvx()]cvx/ifelse cvx
					]cvx/ReusableStreamDecode filter
				}ifelse
				end
				}def
			/AGMCORE_separateShadingFunction
				{
				2 dict begin
				/paint? xdf
				/channel xdf
				dup type/dicttype eq
					{
					begin
					FunctionType 0 eq
						{
						/DataSource channel Range length 2 idiv DataSource AGMCORE_filter_functiondatasource def
						currentdict/Decode known
							{/Decode Decode channel 2 mul 2 getinterval def}if
						paint? not
							{/Decode[1 1]def}if
						}if
					FunctionType 2 eq
						{
						paint?
							{
							/C0[C0 channel get 1 exch sub]def
							/C1[C1 channel get 1 exch sub]def
							}{
							/C0[1]def
							/C1[1]def
							}ifelse			
						}if
					FunctionType 3 eq
						{
						/Functions[Functions{channel paint? AGMCORE_separateShadingFunction}forall]def			
						}if
					currentdict/Range known
						{/Range[0 1]def}if
					currentdict
					end}{
					channel get 0 paint? AGMCORE_separateShadingFunction
					}ifelse
				end
				}def
			/AGMCORE_separateShading
				{
				3 -1 roll begin
				currentdict/Function known
					{
					currentdict/Background known
						{[1 index{Background 3 index get 1 exch sub}{1}ifelse]/Background xdf}if
					Function 3 1 roll AGMCORE_separateShadingFunction/Function xdf
					/ColorSpace[/DeviceGray]def
					}{
					ColorSpace dup type/arraytype eq{0 get}if/DeviceCMYK eq
						{
						/ColorSpace[/DeviceN[/_cyan_/_magenta_/_yellow_/_black_]/DeviceCMYK{}]def
						}{
						ColorSpace dup 1 get AGMCORE_RemoveProcessColorNames 1 exch put
						}ifelse
					ColorSpace 0 get/Separation eq
						{
							{
								[1/exch cvx/sub cvx]cvx
							}{
								[/pop cvx 1]cvx
							}ifelse
							ColorSpace 3 3 -1 roll put
							pop
						}{
							{
								[exch ColorSpace 1 get length 1 sub exch sub/index cvx 1/exch cvx/sub cvx ColorSpace 1 get length 1 add 1/roll cvx ColorSpace 1 get length{/pop cvx}repeat]cvx
							}{
								pop[ColorSpace 1 get length{/pop cvx}repeat cvx 1]cvx
							}ifelse
							ColorSpace 3 3 -1 roll bind put
						}ifelse
					ColorSpace 2/DeviceGray put																		
					}ifelse
				end
				}def
			/AGMCORE_separateShadingDict
				{
				dup/ColorSpace get
				dup type/arraytype ne
					{[exch]}if
				dup 0 get/DeviceCMYK eq
					{
					exch begin 
					currentdict
					AGMCORE_cyan_plate
						{0 true}if
					AGMCORE_magenta_plate
						{1 true}if
					AGMCORE_yellow_plate
						{2 true}if
					AGMCORE_black_plate
						{3 true}if
					AGMCORE_plate_ndx 4 eq
						{0 false}if		
					dup not currentoverprint and
						{/AGMCORE_ignoreshade true def}if
					AGMCORE_separateShading
					currentdict
					end exch
					}if
				dup 0 get/Separation eq
					{
					exch begin
					ColorSpace 1 get dup/None ne exch/All ne and
						{
						ColorSpace 1 get AGMCORE_IsCurrentColor AGMCORE_plate_ndx 4 lt and ColorSpace 1 get AGMCORE_IsSeparationAProcessColor not and
							{
							ColorSpace 2 get dup type/arraytype eq{0 get}if/DeviceCMYK eq 
								{
								/ColorSpace
									[
									/Separation
									ColorSpace 1 get
									/DeviceGray
										[
										ColorSpace 3 get/exec cvx
										4 AGMCORE_plate_ndx sub -1/roll cvx
										4 1/roll cvx
										3[/pop cvx]cvx/repeat cvx
										1/exch cvx/sub cvx
										]cvx									
									]def
								}{
								AGMCORE_report_unsupported_color_space
								AGMCORE_black_plate not
									{
									currentdict 0 false AGMCORE_separateShading
									}if
								}ifelse
							}{
							currentdict ColorSpace 1 get AGMCORE_IsCurrentColor
							0 exch 
							dup not currentoverprint and
								{/AGMCORE_ignoreshade true def}if
							AGMCORE_separateShading
							}ifelse	
						}if			
					currentdict
					end exch
					}if
				dup 0 get/DeviceN eq
					{
					exch begin
					ColorSpace 1 get convert_to_process
						{
						ColorSpace 2 get dup type/arraytype eq{0 get}if/DeviceCMYK eq 
							{
							/ColorSpace
								[
								/DeviceN
								ColorSpace 1 get
								/DeviceGray
									[
									ColorSpace 3 get/exec cvx
									4 AGMCORE_plate_ndx sub -1/roll cvx
									4 1/roll cvx
									3[/pop cvx]cvx/repeat cvx
									1/exch cvx/sub cvx
									]cvx									
								]def
							}{
							AGMCORE_report_unsupported_color_space
							AGMCORE_black_plate not
								{
								currentdict 0 false AGMCORE_separateShading
								/ColorSpace[/DeviceGray]def
								}if
							}ifelse
						}{
						currentdict
						false -1 ColorSpace 1 get
							{
							AGMCORE_IsCurrentColor
								{
								1 add
								exch pop true exch exit
								}if
							1 add
							}forall
						exch 
						dup not currentoverprint and
							{/AGMCORE_ignoreshade true def}if
						AGMCORE_separateShading
						}ifelse
					currentdict
					end exch
					}if
				dup 0 get dup/DeviceCMYK eq exch dup/Separation eq exch/DeviceN eq or or not
					{
					exch begin
					ColorSpace dup type/arraytype eq
						{0 get}if
					/DeviceGray ne
						{
						AGMCORE_report_unsupported_color_space
						AGMCORE_black_plate not
							{
							ColorSpace 0 get/CIEBasedA eq
								{
								/ColorSpace[/Separation/_ciebaseda_/DeviceGray{}]def
								}if
							ColorSpace 0 get dup/CIEBasedABC eq exch dup/CIEBasedDEF eq exch/DeviceRGB eq or or
								{
								/ColorSpace[/DeviceN[/_red_/_green_/_blue_]/DeviceRGB{}]def
								}if
							ColorSpace 0 get/CIEBasedDEFG eq
								{
								/ColorSpace[/DeviceN[/_cyan_/_magenta_/_yellow_/_black_]/DeviceCMYK{}]def
								}if
							currentdict 0 false AGMCORE_separateShading
							}if
						}if
					currentdict
					end exch
					}if
				pop
				dup/AGMCORE_ignoreshade known
					{
					begin
					/ColorSpace[/Separation(None)/DeviceGray{}]def
					currentdict end
					}if
				}def
			/shfill
				{
				AGMCORE_separateShadingDict 
				dup/AGMCORE_ignoreshade known
					{pop}
					{AGMCORE_&sysshfill}ifelse
				}def
			/makepattern
				{
				exch
				dup/PatternType get 2 eq
					{
					clonedict
					begin
					/Shading Shading AGMCORE_separateShadingDict def
					Shading/AGMCORE_ignoreshade known
					currentdict end exch
					{pop<</PatternType 1/PaintProc{pop}/BBox[0 0 1 1]/XStep 1/YStep 1/PaintType 1/TilingType 3>>}if
					exch AGMCORE_&sysmakepattern
					}{
					exch AGMCORE_&usrmakepattern
					}ifelse
				}def
		}if
	}if
	AGMCORE_in_rip_sep{
		/setcustomcolor
		{
			exch aload pop
			dup 7 1 roll inRip_spot_has_ink not	{
				4{4 index mul 4 1 roll}
				repeat
				/DeviceCMYK setcolorspace
				6 -2 roll pop pop
			}{
				//Adobe_AGM_Core begin
					/AGMCORE_k xdf/AGMCORE_y xdf/AGMCORE_m xdf/AGMCORE_c xdf
				end
				[/Separation 4 -1 roll/DeviceCMYK
				{dup AGMCORE_c mul exch dup AGMCORE_m mul exch dup AGMCORE_y mul exch AGMCORE_k mul}
				]
				setcolorspace
			}ifelse
			setcolor
		}ndf
		/setseparationgray
		{
			[/Separation(All)/DeviceGray{}]setcolorspace_opt
			1 exch sub setcolor
		}ndf
	}{
		/setseparationgray
		{
			AGMCORE_&setgray
		}ndf
	}ifelse
	/findcmykcustomcolor
	{
		5 makereadonlyarray
	}ndf
	/setcustomcolor
	{
		exch aload pop pop
		4{4 index mul 4 1 roll}repeat
		setcmykcolor pop
	}ndf
	/has_color
		/colorimage where{
			AGMCORE_producing_seps{
				pop true
			}{
				systemdict eq
			}ifelse
		}{
			false
		}ifelse
	def
	/map_index
	{
		1 index mul exch getinterval{255 div}forall
	}bdf
	/map_indexed_devn
	{
		Lookup Names length 3 -1 roll cvi map_index
	}bdf
	/n_color_components
	{
		base_colorspace_type
		dup/DeviceGray eq{
			pop 1
		}{
			/DeviceCMYK eq{
				4
			}{
				3
			}ifelse
		}ifelse
	}bdf
	level2{
		/mo/moveto ldf
		/li/lineto ldf
		/cv/curveto ldf
		/knockout_unitsq
		{
			1 setgray
			0 0 1 1 rectfill
		}def
		level2/setcolorspace AGMCORE_key_known not and{
			/AGMCORE_&&&setcolorspace/setcolorspace ldf
			/AGMCORE_ReplaceMappedColor
			{
				dup type dup/arraytype eq exch/packedarraytype eq or
				{
					/AGMCORE_SpotAliasAry2 where{
						begin
						dup 0 get dup/Separation eq
						{
							pop
							dup length array copy
							dup dup 1 get
							current_spot_alias
							{
								dup map_alias
								{
									false set_spot_alias
									dup 1 exch setsepcolorspace
									true set_spot_alias
									begin
									/sep_colorspace_dict currentdict AGMCORE_gput
									pop pop	pop
									[
										/Separation Name 
										CSA map_csa
										MappedCSA 
										/sep_colorspace_proc load
									]
									dup Name
									end
								}if
							}if
							map_reserved_ink_name 1 xpt
						}{
							/DeviceN eq 
							{
								dup length array copy
								dup dup 1 get[
									exch{
										current_spot_alias{
											dup map_alias{
												/Name get exch pop
											}if
										}if
										map_reserved_ink_name
									}forall 
								]1 xpt
							}if
						}ifelse
						end
					}if
				}if
			}def
			/setcolorspace
			{
				dup type dup/arraytype eq exch/packedarraytype eq or
				{
					dup 0 get/Indexed eq
					{
						AGMCORE_distilling
						{
							/PhotoshopDuotoneList where
							{
								pop false
							}{
								true
							}ifelse
						}{
							true
						}ifelse
						{
							aload pop 3 -1 roll
							AGMCORE_ReplaceMappedColor
							3 1 roll 4 array astore
						}if
					}{
						AGMCORE_ReplaceMappedColor
					}ifelse
				}if
				DeviceN_PS2_inRip_seps{AGMCORE_&&&setcolorspace}if
			}def
		}if	
	}{
		/adj
		{
			currentstrokeadjust{
				transform
				0.25 sub round 0.25 add exch
				0.25 sub round 0.25 add exch
				itransform
			}if
		}def
		/mo{
			adj moveto
		}def
		/li{
			adj lineto
		}def
		/cv{
			6 2 roll adj
			6 2 roll adj
			6 2 roll adj curveto
		}def
		/knockout_unitsq
		{
			1 setgray
			8 8 1[8 0 0 8 0 0]{<ffffffffffffffff>}image
		}def
		/currentstrokeadjust{
			/currentstrokeadjust AGMCORE_gget
		}def
		/setstrokeadjust{
			/currentstrokeadjust exch AGMCORE_gput
		}def
		/setcolorspace
		{
			/currentcolorspace exch AGMCORE_gput
		}def
		/currentcolorspace
		{
			/currentcolorspace AGMCORE_gget
		}def
		/setcolor_devicecolor
		{
			base_colorspace_type
			dup/DeviceGray eq{
				pop setgray
			}{
				/DeviceCMYK eq{
					setcmykcolor
				}{
					setrgbcolor
				}ifelse
			}ifelse
		}def
		/setcolor
		{
			currentcolorspace 0 get
			dup/DeviceGray ne{
				dup/DeviceCMYK ne{
					dup/DeviceRGB ne{
						dup/Separation eq{
							pop
							currentcolorspace 3 gx
							currentcolorspace 2 get
						}{
							dup/Indexed eq{
								pop
								currentcolorspace 3 get dup type/stringtype eq{
									currentcolorspace 1 get n_color_components
									3 -1 roll map_index
								}{
									exec
								}ifelse
								currentcolorspace 1 get
							}{
								/AGMCORE_cur_err/AGMCORE_invalid_color_space def
								AGMCORE_invalid_color_space
							}ifelse
						}ifelse
					}if
				}if
			}if
			setcolor_devicecolor
		}def
	}ifelse
	/sop/setoverprint ldf
	/lw/setlinewidth ldf
	/lc/setlinecap ldf
	/lj/setlinejoin ldf
	/ml/setmiterlimit ldf
	/dsh/setdash ldf
	/sadj/setstrokeadjust ldf
	/gry/setgray ldf
	/rgb/setrgbcolor ldf
	/cmyk[
		/currentcolorspace[/DeviceCMYK]/AGMCORE_gput cvx
		/setcmykcolor load dup type/operatortype ne{/exec cvx}if
	]cvx bdf
	level3 AGMCORE_host_sep not and{
		/nzopmsc{
			6 dict begin
			/kk exch def
			/yy exch def
			/mm exch def
			/cc exch def
			/sum 0 def
			cc 0 ne{/sum sum 2#1000 or def cc}if
			mm 0 ne{/sum sum 2#0100 or def mm}if
			yy 0 ne{/sum sum 2#0010 or def yy}if
			kk 0 ne{/sum sum 2#0001 or def kk}if
			AGMCORE_CMYKDeviceNColorspaces sum get setcolorspace
			sum 0 eq{0}if
			end
			setcolor
		}bdf
	}{
		/nzopmsc/cmyk ldf
	}ifelse
	/sep/setsepcolor ldf
	/devn/setdevicencolor ldf
	/idx/setindexedcolor ldf
	/colr/setcolor ldf
	/csacrd/set_csa_crd ldf
	/sepcs/setsepcolorspace ldf
	/devncs/setdevicencolorspace ldf
	/idxcs/setindexedcolorspace ldf
	/cp/closepath ldf
	/clp/clp_npth ldf
	/eclp/eoclp_npth ldf
	/f/fill ldf
	/ef/eofill ldf
	/@/stroke ldf
	/nclp/npth_clp ldf
	/gset/graphic_setup ldf
	/gcln/graphic_cleanup ldf
	/ct/concat ldf
	/cf/currentfile ldf
	/fl/filter ldf
	/rs/readstring ldf
	/AGMCORE_def_ht currenthalftone def
	/clonedict Adobe_AGM_Utils begin/clonedict load end def
	/clonearray Adobe_AGM_Utils begin/clonearray load end def
	currentdict{
		dup xcheck 1 index type dup/arraytype eq exch/packedarraytype eq or and{
			bind
		}if
		def
	}forall
	/getrampcolor
	{
		/indx exch def
		0 1 NumComp 1 sub
		{
			dup
			Samples exch get
			dup type/stringtype eq{indx get}if
			exch
			Scaling exch get aload pop
			3 1 roll
			mul add
		}for
		ColorSpaceFamily/Separation eq 
		{sep}
		{
			ColorSpaceFamily/DeviceN eq
			{devn}{setcolor}ifelse
		}ifelse
	}bdf
	/sssetbackground{
		aload pop 
		ColorSpaceFamily/Separation eq 
		{sep}
		{
			ColorSpaceFamily/DeviceN eq
			{devn}{setcolor}ifelse
		}ifelse	
	}bdf
	/RadialShade
	{
		40 dict begin
		/ColorSpaceFamily xdf
		/background xdf
		/ext1 xdf
		/ext0 xdf
		/BBox xdf
		/r2 xdf
		/c2y xdf
		/c2x xdf
		/r1 xdf
		/c1y xdf
		/c1x xdf
		/rampdict xdf
		/setinkoverprint where{pop/setinkoverprint{pop}def}if
		gsave
		BBox length 0 gt
		{
			np
			BBox 0 get BBox 1 get moveto
			BBox 2 get BBox 0 get sub 0 rlineto
			0 BBox 3 get BBox 1 get sub rlineto
			BBox 2 get BBox 0 get sub neg 0 rlineto
			closepath
			clip
			np
		}if
		c1x c2x eq
		{
			c1y c2y lt{/theta 90 def}{/theta 270 def}ifelse
		}{
			/slope c2y c1y sub c2x c1x sub div def
			/theta slope 1 atan def
			c2x c1x lt c2y c1y ge and{/theta theta 180 sub def}if
			c2x c1x lt c2y c1y lt and{/theta theta 180 add def}if
		}ifelse
		gsave
		clippath
		c1x c1y translate
		theta rotate
		-90 rotate
		{pathbbox}stopped
		{0 0 0 0}if
		/yMax xdf
		/xMax xdf
		/yMin xdf
		/xMin xdf
		grestore
		xMax xMin eq yMax yMin eq or
		{
			grestore
			end
		}{
			/max{2 copy gt{pop}{exch pop}ifelse}bdf
			/min{2 copy lt{pop}{exch pop}ifelse}bdf
			rampdict begin
			40 dict begin
			background length 0 gt{background sssetbackground gsave clippath fill grestore}if
			gsave
			c1x c1y translate
			theta rotate
			-90 rotate
			/c2y c1x c2x sub dup mul c1y c2y sub dup mul add sqrt def
			/c1y 0 def
			/c1x 0 def
			/c2x 0 def
			ext0
			{
				0 getrampcolor
				c2y r2 add r1 sub 0.0001 lt
				{
					c1x c1y r1 360 0 arcn
					pathbbox
					/aymax exch def
					/axmax exch def
					/aymin exch def
					/axmin exch def
					/bxMin xMin axmin min def
					/byMin yMin aymin min def
					/bxMax xMax axmax max def
					/byMax yMax aymax max def
					bxMin byMin moveto
					bxMax byMin lineto
					bxMax byMax lineto
					bxMin byMax lineto
					bxMin byMin lineto
					eofill
				}{
					c2y r1 add r2 le
					{
						c1x c1y r1 0 360 arc
						fill
					}
					{
						c2x c2y r2 0 360 arc fill
						r1 r2 eq
						{
							/p1x r1 neg def
							/p1y c1y def
							/p2x r1 def
							/p2y c1y def
							p1x p1y moveto p2x p2y lineto p2x yMin lineto p1x yMin lineto
							fill
						}{
							/AA r2 r1 sub c2y div def
							AA -1 eq
							{/theta 89.99 def}
							{/theta AA 1 AA dup mul sub sqrt div 1 atan def}
							ifelse
							/SS1 90 theta add dup sin exch cos div def
							/p1x r1 SS1 SS1 mul SS1 SS1 mul 1 add div sqrt mul neg def
							/p1y p1x SS1 div neg def
							/SS2 90 theta sub dup sin exch cos div def
							/p2x r1 SS2 SS2 mul SS2 SS2 mul 1 add div sqrt mul def
							/p2y p2x SS2 div neg def
							r1 r2 gt
							{
								/L1maxX p1x yMin p1y sub SS1 div add def
								/L2maxX p2x yMin p2y sub SS2 div add def
							}{
								/L1maxX 0 def
								/L2maxX 0 def
							}ifelse
							p1x p1y moveto p2x p2y lineto L2maxX L2maxX p2x sub SS2 mul p2y add lineto
							L1maxX L1maxX p1x sub SS1 mul p1y add lineto
							fill
						}ifelse
					}ifelse
				}ifelse
			}if
		c1x c2x sub dup mul
		c1y c2y sub dup mul
		add 0.5 exp
		0 dtransform
		dup mul exch dup mul add 0.5 exp 72 div
		0 72 matrix defaultmatrix dtransform dup mul exch dup mul add sqrt
		72 0 matrix defaultmatrix dtransform dup mul exch dup mul add sqrt
		1 index 1 index lt{exch}if pop
		/hires xdf
		hires mul
		/numpix xdf
		/numsteps NumSamples def
		/rampIndxInc 1 def
		/subsampling false def
		numpix 0 ne
		{
			NumSamples numpix div 0.5 gt
			{
				/numsteps numpix 2 div round cvi dup 1 le{pop 2}if def
				/rampIndxInc NumSamples 1 sub numsteps div def
				/subsampling true def
			}if
		}if
		/xInc c2x c1x sub numsteps div def
		/yInc c2y c1y sub numsteps div def
		/rInc r2 r1 sub numsteps div def
		/cx c1x def
		/cy c1y def
		/radius r1 def
		np
		xInc 0 eq yInc 0 eq rInc 0 eq and and
		{
			0 getrampcolor
			cx cy radius 0 360 arc
			stroke
			NumSamples 1 sub getrampcolor
			cx cy radius 72 hires div add 0 360 arc
			0 setlinewidth
			stroke
		}{
			0
			numsteps
			{
				dup
				subsampling{round cvi}if
				getrampcolor
				cx cy radius 0 360 arc
				/cx cx xInc add def
				/cy cy yInc add def
				/radius radius rInc add def
				cx cy radius 360 0 arcn
				eofill
				rampIndxInc add
			}repeat
			pop
		}ifelse
		ext1
		{
			c2y r2 add r1 lt
			{
				c2x c2y r2 0 360 arc
				fill
			}{
				c2y r1 add r2 sub 0.0001 le
				{
					c2x c2y r2 360 0 arcn
					pathbbox
					/aymax exch def
					/axmax exch def
					/aymin exch def
					/axmin exch def
					/bxMin xMin axmin min def
					/byMin yMin aymin min def
					/bxMax xMax axmax max def
					/byMax yMax aymax max def
					bxMin byMin moveto
					bxMax byMin lineto
					bxMax byMax lineto
					bxMin byMax lineto
					bxMin byMin lineto
					eofill
				}{
					c2x c2y r2 0 360 arc fill
					r1 r2 eq
					{
						/p1x r2 neg def
						/p1y c2y def
						/p2x r2 def
						/p2y c2y def
						p1x p1y moveto p2x p2y lineto p2x yMax lineto p1x yMax lineto
						fill
					}{
						/AA r2 r1 sub c2y div def
						AA -1 eq
						{/theta 89.99 def}
						{/theta AA 1 AA dup mul sub sqrt div 1 atan def}
						ifelse
						/SS1 90 theta add dup sin exch cos div def
						/p1x r2 SS1 SS1 mul SS1 SS1 mul 1 add div sqrt mul neg def
						/p1y c2y p1x SS1 div sub def
						/SS2 90 theta sub dup sin exch cos div def
						/p2x r2 SS2 SS2 mul SS2 SS2 mul 1 add div sqrt mul def
						/p2y c2y p2x SS2 div sub def
						r1 r2 lt
						{
							/L1maxX p1x yMax p1y sub SS1 div add def
							/L2maxX p2x yMax p2y sub SS2 div add def
						}{
							/L1maxX 0 def
							/L2maxX 0 def
						}ifelse
						p1x p1y moveto p2x p2y lineto L2maxX L2maxX p2x sub SS2 mul p2y add lineto
						L1maxX L1maxX p1x sub SS1 mul p1y add lineto
						fill
					}ifelse
				}ifelse
			}ifelse
		}if
		grestore
		grestore
		end
		end
		end
		}ifelse
	}bdf
	/GenStrips
	{
		40 dict begin
		/ColorSpaceFamily xdf
		/background xdf
		/ext1 xdf
		/ext0 xdf
		/BBox xdf
		/y2 xdf
		/x2 xdf
		/y1 xdf
		/x1 xdf
		/rampdict xdf
		/setinkoverprint where{pop/setinkoverprint{pop}def}if
		gsave
		BBox length 0 gt
		{
			np
			BBox 0 get BBox 1 get moveto
			BBox 2 get BBox 0 get sub 0 rlineto
			0 BBox 3 get BBox 1 get sub rlineto
			BBox 2 get BBox 0 get sub neg 0 rlineto
			closepath
			clip
			np
		}if
		x1 x2 eq
		{
			y1 y2 lt{/theta 90 def}{/theta 270 def}ifelse
		}{
			/slope y2 y1 sub x2 x1 sub div def
			/theta slope 1 atan def
			x2 x1 lt y2 y1 ge and{/theta theta 180 sub def}if
			x2 x1 lt y2 y1 lt and{/theta theta 180 add def}if
		}
		ifelse
		gsave
		clippath
		x1 y1 translate
		theta rotate
		{pathbbox}stopped
		{0 0 0 0}if
		/yMax exch def
		/xMax exch def
		/yMin exch def
		/xMin exch def
		grestore
		xMax xMin eq yMax yMin eq or
		{
			grestore
			end
		}{
			rampdict begin
			20 dict begin
			background length 0 gt{background sssetbackground gsave clippath fill grestore}if
			gsave
			x1 y1 translate
			theta rotate
			/xStart 0 def
			/xEnd x2 x1 sub dup mul y2 y1 sub dup mul add 0.5 exp def
			/ySpan yMax yMin sub def
			/numsteps NumSamples def
			/rampIndxInc 1 def
			/subsampling false def
			xStart 0 transform
			xEnd 0 transform
			3 -1 roll
			sub dup mul
			3 1 roll
			sub dup mul
			add 0.5 exp 72 div
			0 72 matrix defaultmatrix dtransform dup mul exch dup mul add sqrt
			72 0 matrix defaultmatrix dtransform dup mul exch dup mul add sqrt
			1 index 1 index lt{exch}if pop
			mul
			/numpix xdf
			numpix 0 ne
			{
				NumSamples numpix div 0.5 gt
				{
					/numsteps numpix 2 div round cvi dup 1 le{pop 2}if def
					/rampIndxInc NumSamples 1 sub numsteps div def
					/subsampling true def
				}if
			}if
			ext0
			{
				0 getrampcolor
				xMin xStart lt
				{
					xMin yMin xMin neg ySpan rectfill
				}if
			}if
			/xInc xEnd xStart sub numsteps div def
			/x xStart def
			0
			numsteps
			{
				dup
				subsampling{round cvi}if
				getrampcolor
				x yMin xInc ySpan rectfill
				/x x xInc add def
				rampIndxInc add
			}repeat
			pop
			ext1{
				xMax xEnd gt
				{
					xEnd yMin xMax xEnd sub ySpan rectfill
				}if
			}if
			grestore
			grestore
			end
			end
			end
		}ifelse
	}bdf
}def
/pt
{
	end
}def
/dt{
}def
/pgsv{
	//Adobe_AGM_Core/AGMCORE_save save put
}def
/pgrs{
	//Adobe_AGM_Core/AGMCORE_save get restore
}def
systemdict/findcolorrendering known{
	/findcolorrendering systemdict/findcolorrendering get def
}if
systemdict/setcolorrendering known{
	/setcolorrendering systemdict/setcolorrendering get def
}if
/test_cmyk_color_plate
{
	gsave
	setcmykcolor currentgray 1 ne
	grestore
}def
/inRip_spot_has_ink
{
	dup//Adobe_AGM_Core/AGMCORE_name xddf
	convert_spot_to_process not
}def
/map255_to_range
{
	1 index sub
	3 -1 roll 255 div mul add
}def
/set_csa_crd
{
	/sep_colorspace_dict null AGMCORE_gput
	begin
		CSA get_csa_by_name setcolorspace_opt
		set_crd
	end
}
def
/map_csa
{
	currentdict/MappedCSA known{MappedCSA null ne}{false}ifelse
	{pop}{get_csa_by_name/MappedCSA xdf}ifelse
}def
/setsepcolor
{
	/sep_colorspace_dict AGMCORE_gget begin
		dup/sep_tint exch AGMCORE_gput
		TintProc
	end
}def
/setdevicencolor
{
	/devicen_colorspace_dict AGMCORE_gget begin
		Names length copy
		Names length 1 sub -1 0
		{
			/devicen_tints AGMCORE_gget 3 1 roll xpt
		}for
		TintProc
	end
}def
/sep_colorspace_proc
{
	/AGMCORE_tmp exch store
	/sep_colorspace_dict AGMCORE_gget begin
	currentdict/Components known{
		Components aload pop 
		TintMethod/Lab eq{
			2{AGMCORE_tmp mul NComponents 1 roll}repeat
			LMax sub AGMCORE_tmp mul LMax add NComponents 1 roll
		}{
			TintMethod/Subtractive eq{
				NComponents{
					AGMCORE_tmp mul NComponents 1 roll
				}repeat
			}{
				NComponents{
					1 sub AGMCORE_tmp mul 1 add NComponents 1 roll
				}repeat
			}ifelse
		}ifelse
	}{
		ColorLookup AGMCORE_tmp ColorLookup length 1 sub mul round cvi get
		aload pop
	}ifelse
	end
}def
/sep_colorspace_gray_proc
{
	/AGMCORE_tmp exch store
	/sep_colorspace_dict AGMCORE_gget begin
	GrayLookup AGMCORE_tmp GrayLookup length 1 sub mul round cvi get
	end
}def
/sep_proc_name
{
	dup 0 get 
	dup/DeviceRGB eq exch/DeviceCMYK eq or level2 not and has_color not and{
		pop[/DeviceGray]
		/sep_colorspace_gray_proc
	}{
		/sep_colorspace_proc
	}ifelse
}def
/setsepcolorspace
{
	current_spot_alias{
		dup begin
			Name map_alias{
				exch pop
			}if
		end
	}if
	dup/sep_colorspace_dict exch AGMCORE_gput
	begin
	CSA map_csa
	/AGMCORE_sep_special Name dup()eq exch(All)eq or store
	AGMCORE_avoid_L2_sep_space{
		[/Indexed MappedCSA sep_proc_name 255 exch 
			{255 div}/exec cvx 3 -1 roll[4 1 roll load/exec cvx]cvx 
		]setcolorspace_opt
		/TintProc{
			255 mul round cvi setcolor
		}bdf
	}{
		MappedCSA 0 get/DeviceCMYK eq 
		currentdict/Components known and 
		AGMCORE_sep_special not and{
			/TintProc[
				Components aload pop Name findcmykcustomcolor 
				/exch cvx/setcustomcolor cvx
			]cvx bdf
		}{
 			AGMCORE_host_sep Name(All)eq and{
 				/TintProc{
					1 exch sub setseparationgray 
				}bdf
 			}{
				AGMCORE_in_rip_sep MappedCSA 0 get/DeviceCMYK eq and 
				AGMCORE_host_sep or
				Name()eq and{
					/TintProc[
						MappedCSA sep_proc_name exch 0 get/DeviceCMYK eq{
							cvx/setcmykcolor cvx
						}{
							cvx/setgray cvx
						}ifelse
					]cvx bdf
				}{
					AGMCORE_producing_seps MappedCSA 0 get dup/DeviceCMYK eq exch/DeviceGray eq or and AGMCORE_sep_special not and{
	 					/TintProc[
							/dup cvx
							MappedCSA sep_proc_name cvx exch
							0 get/DeviceGray eq{
								1/exch cvx/sub cvx 0 0 0 4 -1/roll cvx
							}if
							/Name cvx/findcmykcustomcolor cvx/exch cvx
							AGMCORE_host_sep{
								AGMCORE_is_cmyk_sep
								/Name cvx 
								/AGMCORE_IsSeparationAProcessColor load/exec cvx
								/not cvx/and cvx 
							}{
								Name inRip_spot_has_ink not
							}ifelse
							[
		 						/pop cvx 1
							]cvx/if cvx
							/setcustomcolor cvx
						]cvx bdf
 					}{
						/TintProc{setcolor}bdf
						[/Separation Name MappedCSA sep_proc_name load]setcolorspace_opt
					}ifelse
				}ifelse
			}ifelse
		}ifelse
	}ifelse
	set_crd
	setsepcolor
	end
}def
/additive_blend
{
 	3 dict begin
 	/numarrays xdf
 	/numcolors xdf
 	0 1 numcolors 1 sub
 		{
 		/c1 xdf
 		1
 		0 1 numarrays 1 sub
 			{
			1 exch add/index cvx
 			c1/get cvx/mul cvx
 			}for
 		numarrays 1 add 1/roll cvx 
 		}for
 	numarrays[/pop cvx]cvx/repeat cvx
 	end
}def
/subtractive_blend
{
	3 dict begin
	/numarrays xdf
	/numcolors xdf
	0 1 numcolors 1 sub
		{
		/c1 xdf
		1 1
		0 1 numarrays 1 sub
			{
			1 3 3 -1 roll add/index cvx 
			c1/get cvx/sub cvx/mul cvx
			}for
		/sub cvx
		numarrays 1 add 1/roll cvx
		}for
	numarrays[/pop cvx]cvx/repeat cvx
	end
}def
/exec_tint_transform
{
	/TintProc[
		/TintTransform cvx/setcolor cvx
	]cvx bdf
	MappedCSA setcolorspace_opt
}bdf
/devn_makecustomcolor
{
	2 dict begin
	/names_index xdf
	/Names xdf
	1 1 1 1 Names names_index get findcmykcustomcolor
	/devicen_tints AGMCORE_gget names_index get setcustomcolor
	Names length{pop}repeat
	end
}bdf
/setdevicencolorspace
{
	dup/AliasedColorants known{false}{true}ifelse 
	current_spot_alias and{
		7 dict begin
		/names_index 0 def
		dup/names_len exch/Names get length def
		/new_names names_len array def
		/new_LookupTables names_len array def
		/alias_cnt 0 def
		dup/Names get
		{
			dup map_alias{
				exch pop
				dup/ColorLookup known{
					dup begin
					new_LookupTables names_index ColorLookup put
					end
				}{
					dup/Components known{
						dup begin
						new_LookupTables names_index Components put
						end
					}{
						dup begin
						new_LookupTables names_index[null null null null]put
						end
					}ifelse
				}ifelse
				new_names names_index 3 -1 roll/Name get put
				/alias_cnt alias_cnt 1 add def 
			}{
				/name xdf				
				new_names names_index name put
				dup/LookupTables known{
					dup begin
					new_LookupTables names_index LookupTables names_index get put
					end
				}{
					dup begin
					new_LookupTables names_index[null null null null]put
					end
				}ifelse
			}ifelse
			/names_index names_index 1 add def 
		}forall
		alias_cnt 0 gt{
			/AliasedColorants true def
			/lut_entry_len new_LookupTables 0 get dup length 256 ge{0 get length}{length}ifelse def
			0 1 names_len 1 sub{
				/names_index xdf
				new_LookupTables names_index get dup length 256 ge{0 get length}{length}ifelse lut_entry_len ne{
					/AliasedColorants false def
					exit
				}{
					new_LookupTables names_index get 0 get null eq{
						dup/Names get names_index get/name xdf
						name(Cyan)eq name(Magenta)eq name(Yellow)eq name(Black)eq
						or or or not{
							/AliasedColorants false def
							exit
						}if
					}if
				}ifelse
			}for
			lut_entry_len 1 eq{
				/AliasedColorants false def
			}if
			AliasedColorants{
				dup begin
				/Names new_names def
				/LookupTables new_LookupTables def
				/AliasedColorants true def
				/NComponents lut_entry_len def
				/TintMethod NComponents 4 eq{/Subtractive}{/Additive}ifelse def
				/MappedCSA TintMethod/Additive eq{/DeviceRGB}{/DeviceCMYK}ifelse def
				currentdict/TTTablesIdx known not{
					/TTTablesIdx -1 def
				}if
				end
			}if
		}if
		end
	}if
	dup/devicen_colorspace_dict exch AGMCORE_gput
	begin
	currentdict/AliasedColorants known{
		AliasedColorants
	}{
		false
	}ifelse
	dup not{
		CSA map_csa
	}if
	/TintTransform load type/nulltype eq or{
		/TintTransform[
			0 1 Names length 1 sub
				{
				/TTTablesIdx TTTablesIdx 1 add def
				dup LookupTables exch get dup 0 get null eq
					{
					1 index
					Names exch get
					dup(Cyan)eq
						{
						pop exch
						LookupTables length exch sub
						/index cvx
						0 0 0
						}
						{
						dup(Magenta)eq
							{
							pop exch
							LookupTables length exch sub
							/index cvx
							0/exch cvx 0 0
							}{
							(Yellow)eq
								{
								exch
								LookupTables length exch sub
								/index cvx
								0 0 3 -1/roll cvx 0
								}{
								exch
								LookupTables length exch sub
								/index cvx
								0 0 0 4 -1/roll cvx
								}ifelse
							}ifelse
						}ifelse
					5 -1/roll cvx/astore cvx
					}{
					dup length 1 sub
					LookupTables length 4 -1 roll sub 1 add
					/index cvx/mul cvx/round cvx/cvi cvx/get cvx
					}ifelse
					Names length TTTablesIdx add 1 add 1/roll cvx
				}for
			Names length[/pop cvx]cvx/repeat cvx
			NComponents Names length
 			TintMethod/Subtractive eq
 				{
 				subtractive_blend
 				}{
 				additive_blend
 				}ifelse
		]cvx bdf
	}if
	AGMCORE_host_sep{
		Names convert_to_process{
			exec_tint_transform
		}
		{	
			currentdict/AliasedColorants known{
				AliasedColorants not
			}{
				false
			}ifelse
			5 dict begin
			/AvoidAliasedColorants xdf
			/painted? false def
			/names_index 0 def
			/names_len Names length def
			AvoidAliasedColorants{
				/currentspotalias current_spot_alias def
				false set_spot_alias
			}if
			Names{
				AGMCORE_is_cmyk_sep{
					dup(Cyan)eq AGMCORE_cyan_plate and exch
					dup(Magenta)eq AGMCORE_magenta_plate and exch
					dup(Yellow)eq AGMCORE_yellow_plate and exch
					(Black)eq AGMCORE_black_plate and or or or{
						/devicen_colorspace_dict AGMCORE_gget/TintProc[
							Names names_index/devn_makecustomcolor cvx
						]cvx ddf
						/painted? true def
					}if
					painted?{exit}if
				}{
					0 0 0 0 5 -1 roll findcmykcustomcolor 1 setcustomcolor currentgray 0 eq{
					/devicen_colorspace_dict AGMCORE_gget/TintProc[
						Names names_index/devn_makecustomcolor cvx
					]cvx ddf
					/painted? true def
					exit
					}if
				}ifelse
				/names_index names_index 1 add def
			}forall
			AvoidAliasedColorants{
				currentspotalias set_spot_alias
			}if
			painted?{
				/devicen_colorspace_dict AGMCORE_gget/names_index names_index put
			}{
				/devicen_colorspace_dict AGMCORE_gget/TintProc[
					names_len[/pop cvx]cvx/repeat cvx 1/setseparationgray cvx
 					0 0 0 0/setcmykcolor cvx
				]cvx ddf
			}ifelse
			end
		}ifelse
	}
	{
		AGMCORE_in_rip_sep{
			Names convert_to_process not
		}{
			level3
		}ifelse
		{
			[/DeviceN Names MappedCSA/TintTransform load]setcolorspace_opt
			/TintProc level3 not AGMCORE_in_rip_sep and{
				[
					Names/length cvx[/pop cvx]cvx/repeat cvx
				]cvx bdf
			}{
				{setcolor}bdf
			}ifelse
		}{
			exec_tint_transform
		}ifelse
	}ifelse
	set_crd
	/AliasedColorants false def
	end
}def
/setindexedcolorspace
{
	dup/indexed_colorspace_dict exch AGMCORE_gput
	begin
		currentdict/CSDBase known{
			CSDBase/CSD get_res begin
			currentdict/Names known{
				currentdict devncs
			}{
				1 currentdict sepcs
			}ifelse
			AGMCORE_host_sep{
				4 dict begin
				/compCnt/Names where{pop Names length}{1}ifelse def
				/NewLookup HiVal 1 add string def
				0 1 HiVal{
					/tableIndex xdf
					Lookup dup type/stringtype eq{
						compCnt tableIndex map_index
					}{
						exec
					}ifelse
					/Names where{
						pop setdevicencolor
					}{
						setsepcolor
					}ifelse
					currentgray
					tableIndex exch
					255 mul cvi 
					NewLookup 3 1 roll put
				}for
				[/Indexed currentcolorspace HiVal NewLookup]setcolorspace_opt
				end
			}{
				level3
				{
					currentdict/Names known{
						[/Indexed[/DeviceN Names MappedCSA/TintTransform load]HiVal Lookup]setcolorspace_opt
					}{
						[/Indexed[/Separation Name MappedCSA sep_proc_name load]HiVal Lookup]setcolorspace_opt
					}ifelse
				}{
				[/Indexed MappedCSA HiVal
					[
					currentdict/Names known{
						Lookup dup type/stringtype eq
							{/exch cvx CSDBase/CSD get_res/Names get length dup/mul cvx exch/getinterval cvx{255 div}/forall cvx}
							{/exec cvx}ifelse
							/TintTransform load/exec cvx
					}{
						Lookup dup type/stringtype eq
							{/exch cvx/get cvx 255/div cvx}
							{/exec cvx}ifelse
							CSDBase/CSD get_res/MappedCSA get sep_proc_name exch pop/load cvx/exec cvx
					}ifelse
					]cvx
				]setcolorspace_opt
				}ifelse
			}ifelse
			end
			set_crd
		}
		{
			CSA map_csa
			AGMCORE_host_sep level2 not and{
				0 0 0 0 setcmykcolor
			}{
				[/Indexed MappedCSA 
				level2 not has_color not and{
					dup 0 get dup/DeviceRGB eq exch/DeviceCMYK eq or{
						pop[/DeviceGray]
					}if
					HiVal GrayLookup
				}{
					HiVal 
					currentdict/RangeArray known{
						{
							/indexed_colorspace_dict AGMCORE_gget begin
							Lookup exch 
							dup HiVal gt{
								pop HiVal
							}if
							NComponents mul NComponents getinterval{}forall
							NComponents 1 sub -1 0{
								RangeArray exch 2 mul 2 getinterval aload pop map255_to_range
								NComponents 1 roll
							}for
							end
						}bind
					}{
						Lookup
					}ifelse
				}ifelse
				]setcolorspace_opt
				set_crd
			}ifelse
		}ifelse
	end
}def
/setindexedcolor
{
	AGMCORE_host_sep{
		/indexed_colorspace_dict AGMCORE_gget
		begin
		currentdict/CSDBase known{
			CSDBase/CSD get_res begin
			currentdict/Names known{
				map_indexed_devn
				devn
			}
			{
				Lookup 1 3 -1 roll map_index
				sep
			}ifelse
			end
		}{
			Lookup MappedCSA/DeviceCMYK eq{4}{1}ifelse 3 -1 roll
			map_index
			MappedCSA/DeviceCMYK eq{setcmykcolor}{setgray}ifelse
		}ifelse
		end
	}{
		level3 not AGMCORE_in_rip_sep and/indexed_colorspace_dict AGMCORE_gget/CSDBase known and{
			/indexed_colorspace_dict AGMCORE_gget/CSDBase get/CSD get_res begin
			map_indexed_devn
			devn
			end
		}
		{
			setcolor
		}ifelse
	}ifelse
}def
/ignoreimagedata
{
	currentoverprint not{
		gsave
		dup clonedict begin
		1 setgray
		/Decode[0 1]def
		/DataSource<FF>def
		/MultipleDataSources false def
		/BitsPerComponent 8 def
		currentdict end
		systemdict/image gx
		grestore
		}if
	consumeimagedata
}def
/add_res
{
	dup/CSD eq{
		pop 
		//Adobe_AGM_Core begin
		/AGMCORE_CSD_cache load 3 1 roll put
		end
	}{
		defineresource pop
	}ifelse
}def
/del_res
{
	{
		aload pop exch
		dup/CSD eq{
			pop 
			{//Adobe_AGM_Core/AGMCORE_CSD_cache get exch undef}forall
		}{
			exch
			{1 index undefineresource}forall
			pop
		}ifelse
	}forall
}def
/get_res
{
	dup/CSD eq{
		pop
		dup type dup/nametype eq exch/stringtype eq or{
			AGMCORE_CSD_cache exch get
		}if
	}{
		findresource
	}ifelse
}def
/get_csa_by_name
{
	dup type dup/nametype eq exch/stringtype eq or{
		/CSA get_res
	}if
}def
/paintproc_buf_init
{
	/count get 0 0 put
}def
/paintproc_buf_next
{
	dup/count get dup 0 get
	dup 3 1 roll
	1 add 0 xpt
	get				
}def
/cachepaintproc_compress
{
	5 dict begin
	currentfile exch 0 exch/SubFileDecode filter/ReadFilter exch def
	/ppdict 20 dict def
	/string_size 16000 def
	/readbuffer string_size string def
	currentglobal true setglobal 
	ppdict 1 array dup 0 1 put/count xpt
	setglobal
	/LZWFilter 
	{
		exch
		dup length 0 eq{
			pop
		}{
			ppdict dup length 1 sub 3 -1 roll put
		}ifelse
		{string_size}{0}ifelse string
	}/LZWEncode filter def
	{		
		ReadFilter readbuffer readstring
		exch LZWFilter exch writestring
		not{exit}if
	}loop
	LZWFilter closefile
	ppdict				
	end
}def
/cachepaintproc
{
	2 dict begin
	currentfile exch 0 exch/SubFileDecode filter/ReadFilter exch def
	/ppdict 20 dict def
	currentglobal true setglobal 
	ppdict 1 array dup 0 1 put/count xpt
	setglobal
	{
		ReadFilter 16000 string readstring exch
		ppdict dup length 1 sub 3 -1 roll put
		not{exit}if
	}loop
	ppdict dup dup length 1 sub()put					
	end	
}def
/make_pattern
{
	exch clonedict exch
	dup matrix currentmatrix matrix concatmatrix 0 0 3 2 roll itransform
	exch 3 index/XStep get 1 index exch 2 copy div cvi mul sub sub
	exch 3 index/YStep get 1 index exch 2 copy div cvi mul sub sub
	matrix translate exch matrix concatmatrix
			 1 index begin
		BBox 0 get XStep div cvi XStep mul/xshift exch neg def
		BBox 1 get YStep div cvi YStep mul/yshift exch neg def
		BBox 0 get xshift add
		BBox 1 get yshift add
		BBox 2 get xshift add
		BBox 3 get yshift add
		4 array astore
		/BBox exch def
		[xshift yshift/translate load null/exec load]dup
		3/PaintProc load put cvx/PaintProc exch def
		end
	gsave 0 setgray
	makepattern
	grestore
}def
/set_pattern
{
	dup/PatternType get 1 eq{
		dup/PaintType get 1 eq{
			currentoverprint sop[/DeviceGray]setcolorspace 0 setgray
		}if
	}if
	setpattern
}def
/setcolorspace_opt
{
	dup currentcolorspace eq{pop}{setcolorspace}ifelse
}def
/updatecolorrendering
{
	currentcolorrendering/RenderingIntent known{
		currentcolorrendering/RenderingIntent get
	}
	{
		Intent/AbsoluteColorimetric eq 
		{
			/absolute_colorimetric_crd AGMCORE_gget dup null eq
		}
		{
			Intent/RelativeColorimetric eq
			{
				/relative_colorimetric_crd AGMCORE_gget dup null eq
			}
			{
				Intent/Saturation eq
				{
					/saturation_crd AGMCORE_gget dup null eq
				}
				{
					/perceptual_crd AGMCORE_gget dup null eq
				}ifelse
			}ifelse
		}ifelse
		{
			pop null	
		}
		{
			/RenderingIntent known{null}{Intent}ifelse
		}ifelse
	}ifelse
	Intent ne{
		Intent/ColorRendering{findresource}stopped
		{
			pop pop systemdict/findcolorrendering known
			{
 				Intent findcolorrendering
 				{
 					/ColorRendering findresource true exch
 				}
 				{
 					/ColorRendering findresource
					product(Xerox Phaser 5400)ne
					exch
 				}ifelse
				dup Intent/AbsoluteColorimetric eq 
				{
					/absolute_colorimetric_crd exch AGMCORE_gput
				}
				{
					Intent/RelativeColorimetric eq
					{
						/relative_colorimetric_crd exch AGMCORE_gput
					}
					{
						Intent/Saturation eq
						{
							/saturation_crd exch AGMCORE_gput
						}
						{
							Intent/Perceptual eq
							{
								/perceptual_crd exch AGMCORE_gput
							}
							{
								pop
							}ifelse
						}ifelse
					}ifelse
				}ifelse
				1 index{exch}{pop}ifelse
			}
			{false}ifelse
		}
		{true}ifelse
		{
			dup begin
			currentdict/TransformPQR known{
				currentdict/TransformPQR get aload pop
				3{{}eq 3 1 roll}repeat or or
			}
			{true}ifelse
			currentdict/MatrixPQR known{
				currentdict/MatrixPQR get aload pop
				1.0 eq 9 1 roll 0.0 eq 9 1 roll 0.0 eq 9 1 roll
				0.0 eq 9 1 roll 1.0 eq 9 1 roll 0.0 eq 9 1 roll
				0.0 eq 9 1 roll 0.0 eq 9 1 roll 1.0 eq
				and and and and and and and and
			}
			{true}ifelse
			end
			or
			{
				clonedict begin
				/TransformPQR[
					{4 -1 roll 3 get dup 3 1 roll sub 5 -1 roll 3 get 3 -1 roll sub div
					3 -1 roll 3 get 3 -1 roll 3 get dup 4 1 roll sub mul add}bind
					{4 -1 roll 4 get dup 3 1 roll sub 5 -1 roll 4 get 3 -1 roll sub div
					3 -1 roll 4 get 3 -1 roll 4 get dup 4 1 roll sub mul add}bind
					{4 -1 roll 5 get dup 3 1 roll sub 5 -1 roll 5 get 3 -1 roll sub div
					3 -1 roll 5 get 3 -1 roll 5 get dup 4 1 roll sub mul add}bind
				]def
				/MatrixPQR[0.8951 -0.7502 0.0389 0.2664 1.7135 -0.0685 -0.1614 0.0367 1.0296]def
				/RangePQR[-0.3227950745 2.3229645538 -1.5003771057 3.5003465881 -0.1369979095 2.136967392]def
				currentdict end
			}if
			setcolorrendering_opt
		}if		
	}if
}def
/set_crd
{
	AGMCORE_host_sep not level2 and{
		currentdict/ColorRendering known{
			ColorRendering/ColorRendering{findresource}stopped not{setcolorrendering_opt}if
		}{
			currentdict/Intent known{
				updatecolorrendering
			}if
		}ifelse
		currentcolorspace dup type/arraytype eq
			{0 get}if
		/DeviceRGB eq
			{
			currentdict/UCR known
				{/UCR}{/AGMCORE_currentucr}ifelse
			load setundercolorremoval
			currentdict/BG known 
				{/BG}{/AGMCORE_currentbg}ifelse
			load setblackgeneration
			}if
	}if
}def
/set_ucrbg
{
	dup null eq {pop /AGMCORE_currentbg load}{/Procedure get_res}ifelse
	dup currentblackgeneration eq {pop}{setblackgeneration}ifelse
	dup null eq {pop /AGMCORE_currentucr load}{/Procedure get_res}ifelse
	dup currentundercolorremoval eq {pop}{setundercolorremoval}ifelse
}def
/setcolorrendering_opt
{
	dup currentcolorrendering eq{
		pop
	}{
		product(HP Color LaserJet 2605)anchorsearch{
			pop pop pop
		}{
			pop
			clonedict
			begin
				/Intent Intent def
				currentdict
			end
			setcolorrendering
		}ifelse
	}ifelse
}def
/cpaint_gcomp
{
	convert_to_process//Adobe_AGM_Core/AGMCORE_ConvertToProcess xddf
	//Adobe_AGM_Core/AGMCORE_ConvertToProcess get not
	{
		(%end_cpaint_gcomp)flushinput
	}if
}def
/cpaint_gsep
{
	//Adobe_AGM_Core/AGMCORE_ConvertToProcess get
	{	
		(%end_cpaint_gsep)flushinput
	}if
}def
/cpaint_gend
{np}def
/T1_path
{
	currentfile token pop currentfile token pop mo
	{
		currentfile token pop dup type/stringtype eq
			{pop exit}if 
		0 exch rlineto 
		currentfile token pop dup type/stringtype eq
			{pop exit}if 
		0 rlineto
	}loop
}def
/T1_gsave
	level3
	{/clipsave}
	{/gsave}ifelse
	load def
/T1_grestore
	level3
	{/cliprestore}
	{/grestore}ifelse 
	load def
/set_spot_alias_ary
{
	dup inherit_aliases
	//Adobe_AGM_Core/AGMCORE_SpotAliasAry xddf
}def
/set_spot_normalization_ary
{
	dup inherit_aliases
	dup length
	/AGMCORE_SpotAliasAry where{pop AGMCORE_SpotAliasAry length add}if
	array
	//Adobe_AGM_Core/AGMCORE_SpotAliasAry2 xddf
	/AGMCORE_SpotAliasAry where{
		pop
		AGMCORE_SpotAliasAry2 0 AGMCORE_SpotAliasAry putinterval
		AGMCORE_SpotAliasAry length
	}{0}ifelse
	AGMCORE_SpotAliasAry2 3 1 roll exch putinterval
	true set_spot_alias
}def
/inherit_aliases
{
	{dup/Name get map_alias{/CSD put}{pop}ifelse}forall
}def
/set_spot_alias
{
	/AGMCORE_SpotAliasAry2 where{
		/AGMCORE_current_spot_alias 3 -1 roll put
	}{
		pop
	}ifelse
}def
/current_spot_alias
{
	/AGMCORE_SpotAliasAry2 where{
		/AGMCORE_current_spot_alias get
	}{
		false
	}ifelse
}def
/map_alias
{
	/AGMCORE_SpotAliasAry2 where{
		begin
			/AGMCORE_name xdf
			false	
			AGMCORE_SpotAliasAry2{
				dup/Name get AGMCORE_name eq{
					/CSD get/CSD get_res
					exch pop true
					exit
				}{
					pop
				}ifelse
			}forall
		end
	}{
		pop false
	}ifelse
}bdf
/spot_alias
{
	true set_spot_alias
	/AGMCORE_&setcustomcolor AGMCORE_key_known not{
		//Adobe_AGM_Core/AGMCORE_&setcustomcolor/setcustomcolor load put
	}if
	/customcolor_tint 1 AGMCORE_gput
	//Adobe_AGM_Core begin
	/setcustomcolor
	{
		//Adobe_AGM_Core begin
		dup/customcolor_tint exch AGMCORE_gput
		1 index aload pop pop 1 eq exch 1 eq and exch 1 eq and exch 1 eq and not
		current_spot_alias and{1 index 4 get map_alias}{false}ifelse
		{
			false set_spot_alias
			/sep_colorspace_dict AGMCORE_gget null ne
			{/sep_colorspace_dict AGMCORE_gget/ForeignContent known not}{false}ifelse
			3 1 roll 2 index{
				exch pop/sep_tint AGMCORE_gget exch
			}if
			mark 3 1 roll
			setsepcolorspace
			counttomark 0 ne{
				setsepcolor
			}if
			pop
			not{/sep_tint 1.0 AGMCORE_gput/sep_colorspace_dict AGMCORE_gget/ForeignContent true put}if
			pop
			true set_spot_alias
		}{
			AGMCORE_&setcustomcolor
		}ifelse
		end
	}bdf
	end
}def
/begin_feature
{
	Adobe_AGM_Core/AGMCORE_feature_dictCount countdictstack put
	count Adobe_AGM_Core/AGMCORE_feature_opCount 3 -1 roll put
	{Adobe_AGM_Core/AGMCORE_feature_ctm matrix currentmatrix put}if
}def
/end_feature
{
	2 dict begin
	/spd/setpagedevice load def
	/setpagedevice{get_gstate spd set_gstate}def
	stopped{$error/newerror false put}if
	end
	count Adobe_AGM_Core/AGMCORE_feature_opCount get sub dup 0 gt{{pop}repeat}{pop}ifelse
	countdictstack Adobe_AGM_Core/AGMCORE_feature_dictCount get sub dup 0 gt{{end}repeat}{pop}ifelse
	{Adobe_AGM_Core/AGMCORE_feature_ctm get setmatrix}if
}def
/set_negative
{
	//Adobe_AGM_Core begin
	/AGMCORE_inverting exch def
	level2{
		currentpagedevice/NegativePrint known AGMCORE_distilling not and{
			currentpagedevice/NegativePrint get//Adobe_AGM_Core/AGMCORE_inverting get ne{
				true begin_feature true{
						<</NegativePrint//Adobe_AGM_Core/AGMCORE_inverting get>>setpagedevice
				}end_feature
			}if
			/AGMCORE_inverting false def
		}if
	}if
	AGMCORE_inverting{
		[{1 exch sub}/exec load dup currenttransfer exch]cvx bind settransfer
 		AGMCORE_distilling{
 			erasepage
 		}{
 			gsave np clippath 1/setseparationgray where{pop setseparationgray}{setgray}ifelse
 			/AGMIRS_&fill where{pop AGMIRS_&fill}{fill}ifelse grestore
 		}ifelse
	}if
	end
}def
/lw_save_restore_override{
	/md where{
		pop
		md begin
		initializepage
		/initializepage{}def
		/pmSVsetup{}def
		/endp{}def
		/pse{}def
		/psb{}def
		/orig_showpage where
			{pop}
			{/orig_showpage/showpage load def}
		ifelse
		/showpage{orig_showpage gR}def
		end
	}if
}def
/pscript_showpage_override{
	/NTPSOct95 where
	{
		begin
		showpage
		save
		/showpage/restore load def
		/restore{exch pop}def
		end
	}if
}def
/driver_media_override
{
	/md where{
		pop
		md/initializepage known{
			md/initializepage{}put
		}if
		md/rC known{
			md/rC{4{pop}repeat}put
		}if
	}if
	/mysetup where{
		/mysetup[1 0 0 1 0 0]put
	}if
	Adobe_AGM_Core/AGMCORE_Default_CTM matrix currentmatrix put
	level2
		{Adobe_AGM_Core/AGMCORE_Default_PageSize currentpagedevice/PageSize get put}if
}def
/capture_mysetup
{
	/Pscript_Win_Data where{
		pop
		Pscript_Win_Data/mysetup known{
			Adobe_AGM_Core/save_mysetup Pscript_Win_Data/mysetup get put
		}if
	}if
}def
/restore_mysetup
{
	/Pscript_Win_Data where{
		pop
		Pscript_Win_Data/mysetup known{
			Adobe_AGM_Core/save_mysetup known{
				Pscript_Win_Data/mysetup Adobe_AGM_Core/save_mysetup get put
				Adobe_AGM_Core/save_mysetup undef
			}if
		}if
	}if
}def
/driver_check_media_override
{
 	/PrepsDict where
 		{pop}
		{
		Adobe_AGM_Core/AGMCORE_Default_CTM get matrix currentmatrix ne
		Adobe_AGM_Core/AGMCORE_Default_PageSize get type/arraytype eq
			{
			Adobe_AGM_Core/AGMCORE_Default_PageSize get 0 get currentpagedevice/PageSize get 0 get eq and
			Adobe_AGM_Core/AGMCORE_Default_PageSize get 1 get currentpagedevice/PageSize get 1 get eq and
			}if
			{
			Adobe_AGM_Core/AGMCORE_Default_CTM get setmatrix
			}if
		}ifelse
}def
AGMCORE_err_strings begin
	/AGMCORE_bad_environ(Environment not satisfactory for this job. Ensure that the PPD is correct or that the PostScript level requested is supported by this printer. )def
	/AGMCORE_color_space_onhost_seps(This job contains colors that will not separate with on-host methods. )def
	/AGMCORE_invalid_color_space(This job contains an invalid color space. )def
end
/set_def_ht
{AGMCORE_def_ht sethalftone}def
/set_def_flat
{AGMCORE_Default_flatness setflat}def
end
systemdict/setpacking known
{setpacking}if
%%EndResource
%%BeginResource: procset Adobe_CoolType_Core 2.31 0
%%Copyright: Copyright 1997-2006 Adobe Systems Incorporated. All Rights Reserved.
%%Version: 2.31 0
10 dict begin
/Adobe_CoolType_Passthru currentdict def
/Adobe_CoolType_Core_Defined userdict/Adobe_CoolType_Core known def
Adobe_CoolType_Core_Defined
	{/Adobe_CoolType_Core userdict/Adobe_CoolType_Core get def}
if
userdict/Adobe_CoolType_Core 70 dict dup begin put
/Adobe_CoolType_Version 2.31 def
/Level2?
	systemdict/languagelevel known dup
		{pop systemdict/languagelevel get 2 ge}
	if def
Level2? not
	{
	/currentglobal false def
	/setglobal/pop load def
	/gcheck{pop false}bind def
	/currentpacking false def
	/setpacking/pop load def
	/SharedFontDirectory 0 dict def
	}
if
currentpacking
true setpacking
currentglobal false setglobal
userdict/Adobe_CoolType_Data 2 copy known not
	{2 copy 10 dict put}
if
get
	 begin
	/@opStackCountByLevel 32 dict def
	/@opStackLevel 0 def
	/@dictStackCountByLevel 32 dict def
	/@dictStackLevel 0 def
	 end
setglobal
currentglobal true setglobal
userdict/Adobe_CoolType_GVMFonts known not
	{userdict/Adobe_CoolType_GVMFonts 10 dict put}
if
setglobal
currentglobal false setglobal
userdict/Adobe_CoolType_LVMFonts known not
	{userdict/Adobe_CoolType_LVMFonts 10 dict put}
if
setglobal
/ct_VMDictPut
	{
	dup gcheck{Adobe_CoolType_GVMFonts}{Adobe_CoolType_LVMFonts}ifelse
	3 1 roll put
	}bind def
/ct_VMDictUndef
	{
	dup Adobe_CoolType_GVMFonts exch known
		{Adobe_CoolType_GVMFonts exch undef}
		{
			dup Adobe_CoolType_LVMFonts exch known
			{Adobe_CoolType_LVMFonts exch undef}
			{pop}
			ifelse
		}ifelse
	}bind def
/ct_str1 1 string def
/ct_xshow
{
	/_ct_na exch def
	/_ct_i 0 def
	currentpoint
	/_ct_y exch def
	/_ct_x exch def
	{
		pop pop
		ct_str1 exch 0 exch put
		ct_str1 show
		{_ct_na _ct_i get}stopped 
		{pop pop}
		{
			_ct_x _ct_y moveto
			0
			rmoveto
		}
		ifelse
		/_ct_i _ct_i 1 add def
		currentpoint
		/_ct_y exch def
		/_ct_x exch def
	}
	exch
	@cshow
}bind def
/ct_yshow
{
	/_ct_na exch def
	/_ct_i 0 def
	currentpoint
	/_ct_y exch def
	/_ct_x exch def
	{
		pop pop
		ct_str1 exch 0 exch put
		ct_str1 show
		{_ct_na _ct_i get}stopped 
		{pop pop}
		{
			_ct_x _ct_y moveto
			0 exch
			rmoveto
		}
		ifelse
		/_ct_i _ct_i 1 add def
		currentpoint
		/_ct_y exch def
		/_ct_x exch def
	}
	exch
	@cshow
}bind def
/ct_xyshow
{
	/_ct_na exch def
	/_ct_i 0 def
	currentpoint
	/_ct_y exch def
	/_ct_x exch def
	{
		pop pop
		ct_str1 exch 0 exch put
		ct_str1 show
		{_ct_na _ct_i get}stopped 
		{pop pop}
		{
			{_ct_na _ct_i 1 add get}stopped 
			{pop pop pop}
			{
				_ct_x _ct_y moveto
				rmoveto
			}
			ifelse
		}
		ifelse
		/_ct_i _ct_i 2 add def
		currentpoint
		/_ct_y exch def
		/_ct_x exch def
	}
	exch
	@cshow
}bind def
/xsh{{@xshow}stopped{Adobe_CoolType_Data begin ct_xshow end}if}bind def
/ysh{{@yshow}stopped{Adobe_CoolType_Data begin ct_yshow end}if}bind def
/xysh{{@xyshow}stopped{Adobe_CoolType_Data begin ct_xyshow end}if}bind def
currentglobal true setglobal
/ct_T3Defs
{
/BuildChar
{
	1 index/Encoding get exch get
	1 index/BuildGlyph get exec
}bind def
/BuildGlyph
{
	exch begin
	GlyphProcs exch get exec
	end
}bind def
}bind def
setglobal
/@_SaveStackLevels
	{
	Adobe_CoolType_Data
		begin
		/@vmState currentglobal def false setglobal
		@opStackCountByLevel
		@opStackLevel
		2 copy known not
			{
			2 copy
			3 dict dup/args
			7 index
			5 add array put
			put get
			}
			{
			get dup/args get dup length 3 index lt
				{
				dup length 5 add array exch
				1 index exch 0 exch putinterval
				1 index exch/args exch put
				}
				{pop}
			ifelse
			}
		ifelse
			begin
			count 1 sub
			1 index lt
				{pop count}
			if
			dup/argCount exch def
			dup 0 gt
				{
				args exch 0 exch getinterval 
			astore pop
				}
				{pop}
			ifelse
			count
			/restCount exch def
			end
		/@opStackLevel @opStackLevel 1 add def
		countdictstack 1 sub
		@dictStackCountByLevel exch @dictStackLevel exch put
		/@dictStackLevel @dictStackLevel 1 add def
		@vmState setglobal
		end
	}bind def
/@_RestoreStackLevels
	{
	Adobe_CoolType_Data
		begin
		/@opStackLevel @opStackLevel 1 sub def
		@opStackCountByLevel @opStackLevel get
			begin
			count restCount sub dup 0 gt
				{{pop}repeat}
				{pop}
			ifelse
			args 0 argCount getinterval{}forall
			end
		/@dictStackLevel @dictStackLevel 1 sub def
		@dictStackCountByLevel @dictStackLevel get
		end
	countdictstack exch sub dup 0 gt
		{{end}repeat}
		{pop}
	ifelse
	}bind def
/@_PopStackLevels
	{
	Adobe_CoolType_Data
		begin
		/@opStackLevel @opStackLevel 1 sub def
		/@dictStackLevel @dictStackLevel 1 sub def
		end
	}bind def
/@Raise
	{
	exch cvx exch errordict exch get exec
	stop
	}bind def
/@ReRaise
	{
	cvx $error/errorname get errordict exch get exec
	stop
	}bind def
/@Stopped
	{
	0 @#Stopped
	}bind def
/@#Stopped
	{
	@_SaveStackLevels
	stopped
		{@_RestoreStackLevels true}
		{@_PopStackLevels false}
	ifelse
	}bind def
/@Arg
	{
	Adobe_CoolType_Data
		begin
		@opStackCountByLevel @opStackLevel 1 sub get
		begin
		args exch
		argCount 1 sub exch sub get
		end
		end
	}bind def
currentglobal true setglobal
/CTHasResourceForAllBug
	Level2?
		{
		1 dict dup
				/@shouldNotDisappearDictValue true def
				Adobe_CoolType_Data exch/@shouldNotDisappearDict exch put
				begin
				count @_SaveStackLevels
					{(*){pop stop}128 string/Category resourceforall}
				stopped pop
				@_RestoreStackLevels
				currentdict Adobe_CoolType_Data/@shouldNotDisappearDict get dup 3 1 roll ne dup 3 1 roll
					{
						 /@shouldNotDisappearDictValue known
								{
										 {
												end
												currentdict 1 index eq
													{pop exit}
												if
										 }
									 loop
								}
						 if
					}
					{
						 pop
						 end
					}
				ifelse
		}
		{false}
	ifelse
	def
true setglobal
/CTHasResourceStatusBug
	Level2?
		{
		mark
			{/steveamerige/Category resourcestatus}
		stopped
			{cleartomark true}
			{cleartomark currentglobal not}
		ifelse
		}
		{false}
	ifelse
	def
setglobal
/CTResourceStatus
		{
		mark 3 1 roll
		/Category findresource
			begin
			({ResourceStatus}stopped)0()/SubFileDecode filter cvx exec
				{cleartomark false}
				{{3 2 roll pop true}{cleartomark false}ifelse}
			ifelse
			end
		}bind def
/CTWorkAroundBugs
	{
	Level2?
		{
		/cid_PreLoad/ProcSet resourcestatus
			{
			pop pop
			currentglobal
			mark
				{
				(*)
					{
					dup/CMap CTHasResourceStatusBug
						{CTResourceStatus}
						{resourcestatus}
					ifelse
						{
						pop dup 0 eq exch 1 eq or
							{
							dup/CMap findresource gcheck setglobal
							/CMap undefineresource
							}
							{
							pop CTHasResourceForAllBug
								{exit}
								{stop}
							ifelse
							}
						ifelse
						}
						{pop}
					ifelse
					}
				128 string/CMap resourceforall
				}
			stopped
				{cleartomark}
			stopped pop
			setglobal
			}
		if
		}
	if
	}bind def
/ds
	{
	Adobe_CoolType_Core
		begin
		CTWorkAroundBugs
		/mo/moveto load def
		/nf/newencodedfont load def
		/msf{makefont setfont}bind def
		/uf{dup undefinefont ct_VMDictUndef}bind def
		/ur/undefineresource load def
		/chp/charpath load def
		/awsh/awidthshow load def
		/wsh/widthshow load def
		/ash/ashow load def
		/@xshow/xshow load def
		/@yshow/yshow load def
		/@xyshow/xyshow load def
		/@cshow/cshow load def
		/sh/show load def
		/rp/repeat load def
		/.n/.notdef def
		end
		currentglobal false setglobal
	 userdict/Adobe_CoolType_Data 2 copy known not
		 {2 copy 10 dict put}
		if
		get
		begin
		/AddWidths? false def
		/CC 0 def
		/charcode 2 string def
		/@opStackCountByLevel 32 dict def
		/@opStackLevel 0 def
		/@dictStackCountByLevel 32 dict def
		/@dictStackLevel 0 def
		/InVMFontsByCMap 10 dict def
		/InVMDeepCopiedFonts 10 dict def
		end
		setglobal
	}bind def
/dt
	{
	currentdict Adobe_CoolType_Core eq
		{end}
	if
	}bind def
/ps
	{
	Adobe_CoolType_Core begin
	Adobe_CoolType_GVMFonts begin
	Adobe_CoolType_LVMFonts begin
	SharedFontDirectory begin
	}bind def
/pt
	{
	end
	end
	end
	end
	}bind def
/unload
	{
	systemdict/languagelevel known
		{
		systemdict/languagelevel get 2 ge
			{
			userdict/Adobe_CoolType_Core 2 copy known
				{undef}
				{pop pop}
			ifelse
			}
		if
		}
	if
	}bind def
/ndf
	{
	1 index where
		{pop pop pop}
		{dup xcheck{bind}if def}
	ifelse
	}def
/findfont systemdict
	begin
	userdict
		begin
		/globaldict where{/globaldict get begin}if
			dup where pop exch get
		/globaldict where{pop end}if
		end
	end
Adobe_CoolType_Core_Defined
	{/systemfindfont exch def}
	{
	/findfont 1 index def
	/systemfindfont exch def
	}
ifelse
/undefinefont
	{pop}ndf
/copyfont
	{
	currentglobal 3 1 roll
	1 index gcheck setglobal
	dup null eq{0}{dup length}ifelse
	2 index length add 1 add dict
		begin
		exch
			{
			1 index/FID eq
				{pop pop}
				{def}
			ifelse
			}
		forall
		dup null eq
			{pop}
			{{def}forall}
		ifelse
		currentdict
		end
	exch setglobal
	}bind def
/copyarray
	{
	currentglobal exch
	dup gcheck setglobal
	dup length array copy
	exch setglobal
	}bind def
/newencodedfont
	{
	currentglobal
		{
		SharedFontDirectory 3 index known
			{SharedFontDirectory 3 index get/FontReferenced known}
			{false}
		ifelse
		}
		{
		FontDirectory 3 index known
			{FontDirectory 3 index get/FontReferenced known}
			{
			SharedFontDirectory 3 index known
				{SharedFontDirectory 3 index get/FontReferenced known}
				{false}
			ifelse
			}
		ifelse
		}
	ifelse
	dup
		{
		3 index findfont/FontReferenced get
		2 index dup type/nametype eq
			{findfont}
		if ne
			{pop false}
		if
		}
	if
	dup
		{
		1 index dup type/nametype eq
			{findfont}
		 if
		dup/CharStrings known
			{
			/CharStrings get length
			4 index findfont/CharStrings get length
			ne
				{
				pop false
				}
			if 
			}
			{pop}
			ifelse
		}
	if
		{
		pop
		1 index findfont
		/Encoding get exch
		0 1 255
			{2 copy get 3 index 3 1 roll put}
		for
		pop pop pop
		}
		{
		currentglobal
	 4 1 roll
		dup type/nametype eq
		 {findfont}
	 if
	 dup gcheck setglobal
		dup dup maxlength 2 add dict
			begin
			exch
				{
				1 index/FID ne
				2 index/Encoding ne and
					{def}
					{pop pop}
				ifelse
				}
			forall
			/FontReferenced exch def
			/Encoding exch dup length array copy def
			/FontName 1 index dup type/stringtype eq{cvn}if def dup
			currentdict
			end
		definefont ct_VMDictPut
		setglobal
		}
	ifelse
	}bind def
/SetSubstituteStrategy
	{
	$SubstituteFont
		begin
		dup type/dicttype ne
			{0 dict}
		if
		currentdict/$Strategies known
			{
			exch $Strategies exch 
			2 copy known
				{
				get
				2 copy maxlength exch maxlength add dict
					begin
					{def}forall
					{def}forall
					currentdict
					dup/$Init known
						{dup/$Init get exec}
					if
					end
				/$Strategy exch def
				}
				{pop pop pop}
			ifelse
			}
			{pop pop}
		ifelse
		end
	}bind def
/scff
	{
	$SubstituteFont
		begin
		dup type/stringtype eq
			{dup length exch}
			{null}
		ifelse
		/$sname exch def
		/$slen exch def
		/$inVMIndex
			$sname null eq
				{
				1 index $str cvs
				dup length $slen sub $slen getinterval cvn
				}
				{$sname}
			ifelse def
		end
		{findfont}
	@Stopped
		{
		dup length 8 add string exch
		1 index 0(BadFont:)putinterval
		1 index exch 8 exch dup length string cvs putinterval cvn
			{findfont}
		@Stopped
			{pop/Courier findfont}
		if
		}
	if
	$SubstituteFont
		begin
		/$sname null def
		/$slen 0 def
		/$inVMIndex null def
		end
	}bind def
/isWidthsOnlyFont
	{
	dup/WidthsOnly known
		{pop pop true}
		{
		dup/FDepVector known
			{/FDepVector get{isWidthsOnlyFont dup{exit}if}forall}
			{
			dup/FDArray known
				{/FDArray get{isWidthsOnlyFont dup{exit}if}forall}
				{pop}
			ifelse
			}
		ifelse
		}
	ifelse
	}bind def
/ct_StyleDicts 4 dict dup begin
		 /Adobe-Japan1 4 dict dup begin
					 Level2?
								{
								/Serif
								/HeiseiMin-W3-83pv-RKSJ-H/Font resourcestatus
								{pop pop/HeiseiMin-W3}
								{
							/CIDFont/Category resourcestatus
							{
								pop pop
								/HeiseiMin-W3/CIDFont resourcestatus
								{pop pop/HeiseiMin-W3}
								{/Ryumin-Light}
								ifelse
							}
							{/Ryumin-Light}
							ifelse
								}
								ifelse
								def
								/SansSerif
								/HeiseiKakuGo-W5-83pv-RKSJ-H/Font resourcestatus
								{pop pop/HeiseiKakuGo-W5}
								{
							/CIDFont/Category resourcestatus
							{
								pop pop
								/HeiseiKakuGo-W5/CIDFont resourcestatus
								{pop pop/HeiseiKakuGo-W5}
								{/GothicBBB-Medium}
								ifelse
							}
							{/GothicBBB-Medium}
							ifelse
								}
								ifelse
								def
								/HeiseiMaruGo-W4-83pv-RKSJ-H/Font resourcestatus
								{pop pop/HeiseiMaruGo-W4}
								{
							/CIDFont/Category resourcestatus
							{
								pop pop
								/HeiseiMaruGo-W4/CIDFont resourcestatus
								{pop pop/HeiseiMaruGo-W4}
								{
									/Jun101-Light-RKSJ-H/Font resourcestatus
									{pop pop/Jun101-Light}
									{SansSerif}
									ifelse
								}
								ifelse
							}
							{
								/Jun101-Light-RKSJ-H/Font resourcestatus
								{pop pop/Jun101-Light}
								{SansSerif}
								ifelse
							}
							ifelse
								}
								ifelse
								/RoundSansSerif exch def
								/Default Serif def
								}
								{
								/Serif/Ryumin-Light def
								/SansSerif/GothicBBB-Medium def
								{
								(fonts/Jun101-Light-83pv-RKSJ-H)status
								}stopped
								{pop}{
										 {pop pop pop pop/Jun101-Light}
										 {SansSerif}
										 ifelse
										 /RoundSansSerif exch def
								}ifelse
								/Default Serif def
								}
					 ifelse
		 end
		 def
		 /Adobe-Korea1 4 dict dup begin
					/Serif/HYSMyeongJo-Medium def
					/SansSerif/HYGoThic-Medium def
					/RoundSansSerif SansSerif def
					/Default Serif def
		 end
		 def
		 /Adobe-GB1 4 dict dup begin
					/Serif/STSong-Light def
					/SansSerif/STHeiti-Regular def
					/RoundSansSerif SansSerif def
					/Default Serif def
		 end
		 def
		 /Adobe-CNS1 4 dict dup begin
					/Serif/MKai-Medium def
					/SansSerif/MHei-Medium def
					/RoundSansSerif SansSerif def
					/Default Serif def
		 end
		 def
end
def
Level2?{currentglobal true setglobal}if
/ct_BoldRomanWidthProc 
	{
	stringwidth 1 index 0 ne{exch .03 add exch}if setcharwidth
	0 0
	}bind def
/ct_Type0WidthProc 
	{
	 dup stringwidth 0 0 moveto 
	 2 index true charpath pathbbox
	 0 -1 
	 7 index 2 div .88 
	 setcachedevice2
	 pop
	0 0
	}bind def
/ct_Type0WMode1WidthProc 
	{
	 dup stringwidth 
	 pop 2 div neg -0.88
	2 copy
	moveto 
	0 -1
	 5 -1 roll true charpath pathbbox
	 setcachedevice
	}bind def
/cHexEncoding
[/c00/c01/c02/c03/c04/c05/c06/c07/c08/c09/c0A/c0B/c0C/c0D/c0E/c0F/c10/c11/c12
/c13/c14/c15/c16/c17/c18/c19/c1A/c1B/c1C/c1D/c1E/c1F/c20/c21/c22/c23/c24/c25
/c26/c27/c28/c29/c2A/c2B/c2C/c2D/c2E/c2F/c30/c31/c32/c33/c34/c35/c36/c37/c38
/c39/c3A/c3B/c3C/c3D/c3E/c3F/c40/c41/c42/c43/c44/c45/c46/c47/c48/c49/c4A/c4B
/c4C/c4D/c4E/c4F/c50/c51/c52/c53/c54/c55/c56/c57/c58/c59/c5A/c5B/c5C/c5D/c5E
/c5F/c60/c61/c62/c63/c64/c65/c66/c67/c68/c69/c6A/c6B/c6C/c6D/c6E/c6F/c70/c71
/c72/c73/c74/c75/c76/c77/c78/c79/c7A/c7B/c7C/c7D/c7E/c7F/c80/c81/c82/c83/c84
/c85/c86/c87/c88/c89/c8A/c8B/c8C/c8D/c8E/c8F/c90/c91/c92/c93/c94/c95/c96/c97
/c98/c99/c9A/c9B/c9C/c9D/c9E/c9F/cA0/cA1/cA2/cA3/cA4/cA5/cA6/cA7/cA8/cA9/cAA
/cAB/cAC/cAD/cAE/cAF/cB0/cB1/cB2/cB3/cB4/cB5/cB6/cB7/cB8/cB9/cBA/cBB/cBC/cBD
/cBE/cBF/cC0/cC1/cC2/cC3/cC4/cC5/cC6/cC7/cC8/cC9/cCA/cCB/cCC/cCD/cCE/cCF/cD0
/cD1/cD2/cD3/cD4/cD5/cD6/cD7/cD8/cD9/cDA/cDB/cDC/cDD/cDE/cDF/cE0/cE1/cE2/cE3
/cE4/cE5/cE6/cE7/cE8/cE9/cEA/cEB/cEC/cED/cEE/cEF/cF0/cF1/cF2/cF3/cF4/cF5/cF6
/cF7/cF8/cF9/cFA/cFB/cFC/cFD/cFE/cFF]def
/ct_BoldBaseFont 
	 11 dict begin
		/FontType 3 def
		/FontMatrix[1 0 0 1 0 0]def
		/FontBBox[0 0 1 1]def
		/Encoding cHexEncoding def 
		/_setwidthProc/ct_BoldRomanWidthProc load def
		/_bcstr1 1 string def
		/BuildChar
		{
			exch begin
				_basefont setfont
				_bcstr1 dup 0 4 -1 roll put
				dup 
				_setwidthProc
				3 copy 
				moveto				
				show
				_basefonto setfont
				moveto
				show
			end
		}bind def
		 currentdict
	 end 
def
systemdict/composefont known
{
/ct_DefineIdentity-H
{
	/Identity-H/CMap resourcestatus
	{
		pop pop
	}
	{
		/CIDInit/ProcSet findresource begin
		 12 dict begin
		 begincmap
		 /CIDSystemInfo 3 dict dup begin
			 /Registry(Adobe)def
			 /Ordering(Identity)def
			 /Supplement 0 def
		 end def
		 /CMapName/Identity-H def
		 /CMapVersion 1.000 def
		 /CMapType 1 def
		 1 begincodespacerange
		 <0000><FFFF>
		 endcodespacerange
		 1 begincidrange
		 <0000><FFFF>0
		 endcidrange
		 endcmap
		 CMapName currentdict/CMap defineresource pop
		 end
		 end
	 }
	 ifelse
}
def
/ct_BoldBaseCIDFont 
	 11 dict begin
		/CIDFontType 1 def
		/CIDFontName/ct_BoldBaseCIDFont def
		/FontMatrix[1 0 0 1 0 0]def
		/FontBBox[0 0 1 1]def
		/_setwidthProc/ct_Type0WidthProc load def
		/_bcstr2 2 string def
		/BuildGlyph
		{
			exch begin		 
				_basefont setfont
				_bcstr2 1 2 index 256 mod put
				_bcstr2 0 3 -1 roll 256 idiv put
				_bcstr2 dup _setwidthProc		 
				3 copy 
				moveto
				show
				_basefonto setfont
				moveto
				show
			end
		}bind def
		 currentdict
	 end 
def
}if
Level2?{setglobal}if
/ct_CopyFont{
	{
		1 index/FID ne 2 index/UniqueID ne and
		{def}{pop pop}ifelse
	}forall
}bind def
/ct_Type0CopyFont 
{
	exch
	dup length dict
	begin
	ct_CopyFont
	[
	exch
	FDepVector 
	{
		 dup/FontType get 0 eq
		{	
		1 index ct_Type0CopyFont 
		/_ctType0 exch definefont
		}
		{
		/_ctBaseFont exch
		2 index exec
		}
		 ifelse 
		 exch
	}
	forall 
	pop
	]				
	/FDepVector exch def
	currentdict
	end
}bind def
/ct_MakeBoldFont
{
	 dup/ct_SyntheticBold known
	{
		dup length 3 add dict begin 
		ct_CopyFont 
		/ct_StrokeWidth .03 0 FontMatrix idtransform pop def 
		/ct_SyntheticBold true def
		currentdict 
		end 
		definefont
	}
	{
		dup dup length 3 add dict
		begin
			ct_CopyFont
			/PaintType 2 def
			/StrokeWidth .03 0 FontMatrix idtransform pop def
			/dummybold currentdict
		end
		definefont
		dup/FontType get dup 9 ge exch 11 le and 
		{
			ct_BoldBaseCIDFont
			dup length 3 add dict copy begin
			dup/CIDSystemInfo get/CIDSystemInfo exch def
			ct_DefineIdentity-H
			/_Type0Identity/Identity-H 3 -1 roll[exch]composefont
			/_basefont exch def
			/_Type0Identity/Identity-H 3 -1 roll[exch]composefont
			/_basefonto exch def
			currentdict
			end
			/CIDFont defineresource
		}
		{
			ct_BoldBaseFont
			dup length 3 add dict copy begin
			/_basefont exch def
			/_basefonto exch def
			currentdict
			end
			definefont
		}
		ifelse
	}
	ifelse
}bind def
/ct_MakeBold{
	1 index 
	1 index
	findfont
	currentglobal 5 1 roll
	dup gcheck setglobal
		dup
		 /FontType get 0 eq
			{
				dup/WMode known{dup/WMode get 1 eq}{false}ifelse
				version length 4 ge
				and
					{version 0 4 getinterval cvi 2015 ge}
					{true}
				ifelse 
					{/ct_Type0WidthProc}
					{/ct_Type0WMode1WidthProc}
				ifelse
				ct_BoldBaseFont/_setwidthProc 3 -1 roll load put
						{ct_MakeBoldFont}ct_Type0CopyFont definefont
			}
			{
				dup/_fauxfont known not 1 index/SubstMaster known not and
				{
					 ct_BoldBaseFont/_setwidthProc /ct_BoldRomanWidthProc load put
					 ct_MakeBoldFont 
				}
				{
				2 index 2 index eq
					{exch pop	}
					{
						dup length dict begin
						ct_CopyFont
						currentdict
						end
						definefont 
					}
				ifelse
				}
			ifelse
			}
		 ifelse
		 pop pop pop
		 setglobal
}bind def
/?str1 256 string def
/?set
	{
	$SubstituteFont
		begin
		/$substituteFound false def
		/$fontname 1 index def
		/$doSmartSub false def
		end
	dup
	 findfont
	$SubstituteFont
		begin
		$substituteFound
			{false}
			{
			dup/FontName known
				{
				dup/FontName get $fontname eq
				1 index/DistillerFauxFont known not and
				/currentdistillerparams where
					{pop false 2 index isWidthsOnlyFont not and}
				if
				}
				{false}
			ifelse
			}
		ifelse
		exch pop
		/$doSmartSub true def
		end
		{
		5 1 roll pop pop pop pop
		findfont
		}
		{
		1 index
		findfont
		dup/FontType get 3 eq
		{
			6 1 roll pop pop pop pop pop false
		}
		{pop true}
		ifelse
		{
		$SubstituteFont
		begin
		pop pop
		/$styleArray 1 index def
		/$regOrdering 2 index def
		pop pop
		0 1 $styleArray length 1 sub
		{
			$styleArray exch get
			ct_StyleDicts $regOrdering
			2 copy known
			{
				get
				exch 2 copy known not
				{pop/Default}
				if
				get
				dup type/nametype eq
				{
				?str1 cvs length dup 1 add exch
				?str1 exch(-)putinterval
				exch dup length exch ?str1 exch 3 index exch putinterval
				add ?str1 exch 0 exch getinterval cvn
				}
				{
				pop pop/Unknown
				}
				ifelse
			}
			{
				pop pop pop pop/Unknown
			}
			ifelse
		}
		for
		end
		findfont 
		}if
		}
	ifelse
	currentglobal false setglobal 3 1 roll
	null copyfont definefont pop
	setglobal
	}bind def
setpacking
userdict/$SubstituteFont 25 dict put
1 dict
	begin
	/SubstituteFont
		dup $error exch 2 copy known
			{get}
			{pop pop{pop/Courier}bind}
		ifelse def
	/currentdistillerparams where dup
		{
		pop pop
		currentdistillerparams/CannotEmbedFontPolicy 2 copy known
			{get/Error eq}
			{pop pop false}
		ifelse
		}
	if not
		{
		countdictstack array dictstack 0 get
			begin
			userdict
				begin
				$SubstituteFont
					begin
					/$str 128 string def
					/$fontpat 128 string def
					/$slen 0 def
					/$sname null def
					/$match false def
					/$fontname null def
					/$substituteFound false def
					/$inVMIndex null def
					/$doSmartSub true def
					/$depth 0 def
					/$fontname null def
					/$italicangle 26.5 def
					/$dstack null def
					/$Strategies 10 dict dup
						begin
						/$Type3Underprint
							{
							currentglobal exch false setglobal
							11 dict
								begin
								/UseFont exch
									$WMode 0 ne
										{
										dup length dict copy
										dup/WMode $WMode put
										/UseFont exch definefont
										}
									if def
								/FontName $fontname dup type/stringtype eq{cvn}if def
								/FontType 3 def
								/FontMatrix[.001 0 0 .001 0 0]def
								/Encoding 256 array dup 0 1 255{/.notdef put dup}for pop def
								/FontBBox[0 0 0 0]def
								/CCInfo 7 dict dup
									begin
									/cc null def
									/x 0 def
									/y 0 def
									end def
								/BuildChar
									{
									exch
										begin
										CCInfo
											begin
											1 string dup 0 3 index put exch pop
											/cc exch def
											UseFont 1000 scalefont setfont
											cc stringwidth/y exch def/x exch def
											x y setcharwidth
											$SubstituteFont/$Strategy get/$Underprint get exec
											0 0 moveto cc show
											x y moveto
											end
										end
									}bind def
								currentdict
								end
							exch setglobal
							}bind def
						/$GetaTint
							2 dict dup
								begin
								/$BuildFont
									{
									dup/WMode known
										{dup/WMode get}
										{0}
									ifelse
									/$WMode exch def
									$fontname exch
									dup/FontName known
										{
										dup/FontName get
										dup type/stringtype eq{cvn}if
										}
										{/unnamedfont}
									ifelse
									exch
									Adobe_CoolType_Data/InVMDeepCopiedFonts get
									1 index/FontName get known
										{
										pop
										Adobe_CoolType_Data/InVMDeepCopiedFonts get
										1 index get
										null copyfont
										}
										{$deepcopyfont}
									ifelse
									exch 1 index exch/FontBasedOn exch put
									dup/FontName $fontname dup type/stringtype eq{cvn}if put
									definefont
									Adobe_CoolType_Data/InVMDeepCopiedFonts get
										begin
										dup/FontBasedOn get 1 index def
										end
									}bind def
								/$Underprint
									{
									gsave
									x abs y abs gt
										{/y 1000 def}
										{/x -1000 def 500 120 translate}
									ifelse
									Level2?
										{
										[/Separation(All)/DeviceCMYK{0 0 0 1 pop}]
										setcolorspace
										}
										{0 setgray}
									ifelse
									10 setlinewidth
									x .8 mul
									[7 3]
										{
										y mul 8 div 120 sub x 10 div exch moveto
										0 y 4 div neg rlineto
										dup 0 rlineto
										0 y 4 div rlineto
										closepath
										gsave
										Level2?
											{.2 setcolor}
											{.8 setgray}
										ifelse
										fill grestore
										stroke
										}
									forall
									pop
									grestore
									}bind def
								end def
						/$Oblique
							1 dict dup
								begin
								/$BuildFont
									{
									currentglobal exch dup gcheck setglobal
									null copyfont
										begin
										/FontBasedOn
										currentdict/FontName known
											{
											FontName
											dup type/stringtype eq{cvn}if
											}
											{/unnamedfont}
										ifelse
										def
										/FontName $fontname dup type/stringtype eq{cvn}if def
										/currentdistillerparams where
											{pop}
											{
											/FontInfo currentdict/FontInfo known
												{FontInfo null copyfont}
												{2 dict}
											ifelse
											dup
												begin
												/ItalicAngle $italicangle def
												/FontMatrix FontMatrix
												[1 0 ItalicAngle dup sin exch cos div 1 0 0]
												matrix concatmatrix readonly
												end
											4 2 roll def
											def
											}
										ifelse
										FontName currentdict
										end
									definefont
									exch setglobal
									}bind def
								end def
						/$None
							1 dict dup
								begin
								/$BuildFont{}bind def
								end def
						end def
					/$Oblique SetSubstituteStrategy
					/$findfontByEnum
						{
						dup type/stringtype eq{cvn}if
						dup/$fontname exch def
						$sname null eq
							{$str cvs dup length $slen sub $slen getinterval}
							{pop $sname}
						ifelse
						$fontpat dup 0(fonts/*)putinterval exch 7 exch putinterval
						/$match false def
						$SubstituteFont/$dstack countdictstack array dictstack put
						mark
							{
							$fontpat 0 $slen 7 add getinterval
								{/$match exch def exit}
							$str filenameforall
							}
						stopped
							{
							cleardictstack
							currentdict
							true
							$SubstituteFont/$dstack get
								{
								exch
									{
									1 index eq
										{pop false}
										{true}
									ifelse
									}
									{begin false}
								ifelse
								}
							forall
							pop
							}
						if
						cleartomark
						/$slen 0 def
						$match false ne
							{$match(fonts/)anchorsearch pop pop cvn}
							{/Courier}
						ifelse
						}bind def
					/$ROS 1 dict dup
						begin
						/Adobe 4 dict dup
							begin
							/Japan1 [/Ryumin-Light/HeiseiMin-W3
										 /GothicBBB-Medium/HeiseiKakuGo-W5
										 /HeiseiMaruGo-W4/Jun101-Light]def
							/Korea1 [/HYSMyeongJo-Medium/HYGoThic-Medium]def
							/GB1	 [/STSong-Light/STHeiti-Regular]def
							/CNS1	[/MKai-Medium/MHei-Medium]def
							end def
						end def
					/$cmapname null def
					/$deepcopyfont
						{
						dup/FontType get 0 eq
							{
							1 dict dup/FontName/copied put copyfont
								begin
								/FDepVector FDepVector copyarray
								0 1 2 index length 1 sub
									{
									2 copy get $deepcopyfont
									dup/FontName/copied put
									/copied exch definefont
									3 copy put pop pop
									}
								for
								def
								currentdict
								end
							}
							{$Strategies/$Type3Underprint get exec}
						ifelse
						}bind def
					/$buildfontname
						{
						dup/CIDFont findresource/CIDSystemInfo get
							begin
							Registry length Ordering length Supplement 8 string cvs
							3 copy length 2 add add add string
							dup 5 1 roll dup 0 Registry putinterval
							dup 4 index(-)putinterval
							dup 4 index 1 add Ordering putinterval
							4 2 roll add 1 add 2 copy(-)putinterval
							end
						1 add 2 copy 0 exch getinterval $cmapname $fontpat cvs exch
						anchorsearch
							{pop pop 3 2 roll putinterval cvn/$cmapname exch def}
							{pop pop pop pop pop}
						ifelse
						length
						$str 1 index(-)putinterval 1 add
						$str 1 index $cmapname $fontpat cvs putinterval
						$cmapname length add
						$str exch 0 exch getinterval cvn
						}bind def
					/$findfontByROS
						{
						/$fontname exch def
						$ROS Registry 2 copy known
							{
							get Ordering 2 copy known
								{get}
								{pop pop[]}
							ifelse
							}
							{pop pop[]}
						ifelse
						false exch
							{
							dup/CIDFont resourcestatus
								{
								pop pop
								save
								1 index/CIDFont findresource
								dup/WidthsOnly known
									{dup/WidthsOnly get}
									{false}
								ifelse
								exch pop
								exch restore
									{pop}
									{exch pop true exit}
								ifelse
								}
								{pop}
							ifelse
							}
						forall
							{$str cvs $buildfontname}
							{
							false(*)
								{
								save exch
								dup/CIDFont findresource
								dup/WidthsOnly known
									{dup/WidthsOnly get not}
									{true}
								ifelse
								exch/CIDSystemInfo get
								dup/Registry get Registry eq
								exch/Ordering get Ordering eq and and
									{exch restore exch pop true exit}
									{pop restore}
								ifelse
								}
							$str/CIDFont resourceforall
								{$buildfontname}
								{$fontname $findfontByEnum}
							ifelse
							}
						ifelse
						}bind def
					end
				end
				currentdict/$error known currentdict/languagelevel known and dup
					{pop $error/SubstituteFont known}
				if
				dup
					{$error}
					{Adobe_CoolType_Core}
				ifelse
				begin
					{
					/SubstituteFont
					/CMap/Category resourcestatus
						{
						pop pop
						{
						$SubstituteFont
							begin
							/$substituteFound true def
							dup length $slen gt
							$sname null ne or
							$slen 0 gt and
								{
								$sname null eq
									{dup $str cvs dup length $slen sub $slen getinterval cvn}
									{$sname}
								ifelse
								Adobe_CoolType_Data/InVMFontsByCMap get
								1 index 2 copy known
									{
									get
									false exch
										{
										pop
										currentglobal
											{
											GlobalFontDirectory 1 index known
												{exch pop true exit}
												{pop}
											ifelse
											}
											{
											FontDirectory 1 index known
												{exch pop true exit}
												{
												GlobalFontDirectory 1 index known
													{exch pop true exit}
													{pop}
												ifelse
												}
											ifelse
											}
										ifelse
										}
									forall
									}
									{pop pop false}
								ifelse
									{
									exch pop exch pop
									}
									{
									dup/CMap resourcestatus
										{
										pop pop
										dup/$cmapname exch def
										/CMap findresource/CIDSystemInfo get{def}forall
										$findfontByROS
										}
										{
										128 string cvs
										dup(-)search
											{
											3 1 roll search
												{
												3 1 roll pop
													{dup cvi}
												stopped
													{pop pop pop pop pop $findfontByEnum}
													{
													4 2 roll pop pop
													exch length
													exch
													2 index length
													2 index
													sub
													exch 1 sub -1 0
														{
														$str cvs dup length
														4 index
														0
														4 index
														4 3 roll add
														getinterval
														exch 1 index exch 3 index exch
														putinterval
														dup/CMap resourcestatus
															{
															pop pop
															4 1 roll pop pop pop
															dup/$cmapname exch def
															/CMap findresource/CIDSystemInfo get{def}forall
															$findfontByROS
															true exit
															}
															{pop}
														ifelse
														}
													for
													dup type/booleantype eq
														{pop}
														{pop pop pop $findfontByEnum}
													ifelse
													}
												ifelse
												}
												{pop pop pop $findfontByEnum}
											ifelse
											}
											{pop pop $findfontByEnum}
										ifelse
										}
									ifelse
									}
								ifelse
								}
								{//SubstituteFont exec}
							ifelse
							/$slen 0 def
							end
						}
						}
						{
						{
						$SubstituteFont
							begin
							/$substituteFound true def
							dup length $slen gt
							$sname null ne or
							$slen 0 gt and
								{$findfontByEnum}
								{//SubstituteFont exec}
							ifelse
							end
						}
						}
					ifelse
					bind readonly def
					Adobe_CoolType_Core/scfindfont/systemfindfont load put
					}
					{
					/scfindfont
						{
						$SubstituteFont
							begin
							dup systemfindfont
							dup/FontName known
								{dup/FontName get dup 3 index ne}
								{/noname true}
							ifelse
							dup
								{
								/$origfontnamefound 2 index def
								/$origfontname 4 index def/$substituteFound true def
								}
							if
							exch pop
								{
								$slen 0 gt
								$sname null ne
								3 index length $slen gt or and
									{
									pop dup $findfontByEnum findfont
									dup maxlength 1 add dict
										begin
											{1 index/FID eq{pop pop}{def}ifelse}
										forall
										currentdict
										end
									definefont
									dup/FontName known{dup/FontName get}{null}ifelse
									$origfontnamefound ne
										{
										$origfontname $str cvs print
										( substitution revised, using )print
										dup/FontName known
											{dup/FontName get}{(unspecified font)}
										ifelse
										$str cvs print(.\n)print
										}
									if
									}
									{exch pop}
								ifelse
								}
								{exch pop}
							ifelse
							end
						}bind def
					}
				ifelse
				end
			end
		Adobe_CoolType_Core_Defined not
			{
			Adobe_CoolType_Core/findfont
				{
				$SubstituteFont
					begin
					$depth 0 eq
						{
						/$fontname 1 index dup type/stringtype ne{$str cvs}if def
						/$substituteFound false def
						}
					if
					/$depth $depth 1 add def
					end
				scfindfont
				$SubstituteFont
					begin
					/$depth $depth 1 sub def
					$substituteFound $depth 0 eq and
						{
						$inVMIndex null ne
							{dup $inVMIndex $AddInVMFont}
						if
						$doSmartSub
							{
							currentdict/$Strategy known
								{$Strategy/$BuildFont get exec}
							if
							}
						if
						}
					if
					end
				}bind put
			}
		if
		}
	if
	end
/$AddInVMFont
	{
	exch/FontName 2 copy known
		{
		get
		1 dict dup begin exch 1 index gcheck def end exch
		Adobe_CoolType_Data/InVMFontsByCMap get exch
		$DictAdd
		}
		{pop pop pop}
	ifelse
	}bind def
/$DictAdd
	{
	2 copy known not
		{2 copy 4 index length dict put}
	if
	Level2? not
		{
		2 copy get dup maxlength exch length 4 index length add lt
		2 copy get dup length 4 index length add exch maxlength 1 index lt
			{
			2 mul dict
				begin
				2 copy get{forall}def
				2 copy currentdict put
				end
			}
			{pop}
		ifelse
		}
	if
	get
		begin
			{def}
		forall
		end
	}bind def
end
end
%%EndResource
currentglobal true setglobal
%%BeginResource: procset Adobe_CoolType_Utility_MAKEOCF 1.23 0
%%Copyright: Copyright 1987-2006 Adobe Systems Incorporated.
%%Version: 1.23 0
systemdict/languagelevel known dup
	{currentglobal false setglobal}
	{false}
ifelse
exch
userdict/Adobe_CoolType_Utility 2 copy known
	{2 copy get dup maxlength 27 add dict copy}
	{27 dict}
ifelse put
Adobe_CoolType_Utility
	begin
	/@eexecStartData
		 <BAB431EA07F209EB8C4348311481D9D3F76E3D15246555577D87BC510ED54E
		 118C39697FA9F6DB58128E60EB8A12FA24D7CDD2FA94D221FA9EC8DA3E5E6A1C
		 4ACECC8C2D39C54E7C946031DD156C3A6B4A09AD29E1867A>def
	/@recognizeCIDFont null def
	/ct_Level2? exch def
	/ct_Clone? 1183615869 internaldict dup
			/CCRun known not
			exch/eCCRun known not
			ct_Level2? and or def
ct_Level2?
	{globaldict begin currentglobal true setglobal}
if
	/ct_AddStdCIDMap
		ct_Level2?
			{{
				mark
				Adobe_CoolType_Utility/@recognizeCIDFont currentdict put
					{
					((Hex)57 StartData
					 0615 1e27 2c39 1c60 d8a8 cc31 fe2b f6e0
					 7aa3 e541 e21c 60d8 a8c9 c3d0 6d9e 1c60
					 d8a8 c9c2 02d7 9a1c 60d8 a849 1c60 d8a8
					 cc36 74f4 1144 b13b 77)0()/SubFileDecode filter cvx exec
					}
				stopped
					{
					 cleartomark
					 Adobe_CoolType_Utility/@recognizeCIDFont get
					 countdictstack dup array dictstack
					 exch 1 sub -1 0
						 {
						 2 copy get 3 index eq
								{1 index length exch sub 1 sub{end}repeat exit}
								{pop}
						 ifelse
						 }
					 for
					 pop pop
					 Adobe_CoolType_Utility/@eexecStartData get eexec
					}
					{cleartomark}
				ifelse
			}}
			{{
				Adobe_CoolType_Utility/@eexecStartData get eexec
			}}
		ifelse bind def
userdict/cid_extensions known
dup{cid_extensions/cid_UpdateDB known and}if
	{
	 cid_extensions
	 begin
	/cid_GetCIDSystemInfo
		{
		 1 index type/stringtype eq
			{exch cvn exch}
		 if
		 cid_extensions
			 begin
			 dup load 2 index known
				{
				 2 copy
				 cid_GetStatusInfo
				 dup null ne
					{
					 1 index load
					 3 index get
					 dup null eq
						 {pop pop cid_UpdateDB}
						 {
						 exch
						 1 index/Created get eq
							 {exch pop exch pop}
							 {pop cid_UpdateDB}
						 ifelse
						 }
					 ifelse
					}
					{pop cid_UpdateDB}
				 ifelse
				}
				{cid_UpdateDB}
			 ifelse
			 end
		}bind def
	 end
	}
if
ct_Level2?
	{end setglobal}
if
	/ct_UseNativeCapability? systemdict/composefont known def
	/ct_MakeOCF 35 dict def
	/ct_Vars 25 dict def
	/ct_GlyphDirProcs 6 dict def
	/ct_BuildCharDict 15 dict dup
		begin
		/charcode 2 string def
		/dst_string 1500 string def
		/nullstring()def
		/usewidths? true def
		end def
	ct_Level2?{setglobal}{pop}ifelse
	ct_GlyphDirProcs
		begin
		/GetGlyphDirectory
			{
			systemdict/languagelevel known
				{pop/CIDFont findresource/GlyphDirectory get}
				{
				1 index/CIDFont findresource/GlyphDirectory
				get dup type/dicttype eq
					{
					dup dup maxlength exch length sub 2 index lt
						{
						dup length 2 index add dict copy 2 index
						/CIDFont findresource/GlyphDirectory 2 index put
						}
					if
					}
				if
				exch pop exch pop
				}
			ifelse
			+
			}def
		/+
			{
			systemdict/languagelevel known
				{
				currentglobal false setglobal
				3 dict begin
					/vm exch def
				}
				{1 dict begin}
			ifelse
			/$ exch def
			systemdict/languagelevel known
				{
				vm setglobal
				/gvm currentglobal def
				$ gcheck setglobal
				}
			if
			?{$ begin}if
			}def
		/?{$ type/dicttype eq}def
		/|{
			userdict/Adobe_CoolType_Data known
				{
			Adobe_CoolType_Data/AddWidths? known
				{
				 currentdict Adobe_CoolType_Data
					begin
					 begin
						AddWidths?
								{
								Adobe_CoolType_Data/CC 3 index put
								?{def}{$ 3 1 roll put}ifelse
								CC charcode exch 1 index 0 2 index 256 idiv put
								1 index exch 1 exch 256 mod put
								stringwidth 2 array astore
								currentfont/Widths get exch CC exch put
								}
								{?{def}{$ 3 1 roll put}ifelse}
							ifelse
					end
				end
				}
				{?{def}{$ 3 1 roll put}ifelse}	ifelse
				}
				{?{def}{$ 3 1 roll put}ifelse}
			ifelse
			}def
		/!
			{
			?{end}if
			systemdict/languagelevel known
				{gvm setglobal}
			if
			end
			}def
		/:{string currentfile exch readstring pop}executeonly def
		end
	ct_MakeOCF
		begin
		/ct_cHexEncoding
		[/c00/c01/c02/c03/c04/c05/c06/c07/c08/c09/c0A/c0B/c0C/c0D/c0E/c0F/c10/c11/c12
		/c13/c14/c15/c16/c17/c18/c19/c1A/c1B/c1C/c1D/c1E/c1F/c20/c21/c22/c23/c24/c25
		/c26/c27/c28/c29/c2A/c2B/c2C/c2D/c2E/c2F/c30/c31/c32/c33/c34/c35/c36/c37/c38
		/c39/c3A/c3B/c3C/c3D/c3E/c3F/c40/c41/c42/c43/c44/c45/c46/c47/c48/c49/c4A/c4B
		/c4C/c4D/c4E/c4F/c50/c51/c52/c53/c54/c55/c56/c57/c58/c59/c5A/c5B/c5C/c5D/c5E
		/c5F/c60/c61/c62/c63/c64/c65/c66/c67/c68/c69/c6A/c6B/c6C/c6D/c6E/c6F/c70/c71
		/c72/c73/c74/c75/c76/c77/c78/c79/c7A/c7B/c7C/c7D/c7E/c7F/c80/c81/c82/c83/c84
		/c85/c86/c87/c88/c89/c8A/c8B/c8C/c8D/c8E/c8F/c90/c91/c92/c93/c94/c95/c96/c97
		/c98/c99/c9A/c9B/c9C/c9D/c9E/c9F/cA0/cA1/cA2/cA3/cA4/cA5/cA6/cA7/cA8/cA9/cAA
		/cAB/cAC/cAD/cAE/cAF/cB0/cB1/cB2/cB3/cB4/cB5/cB6/cB7/cB8/cB9/cBA/cBB/cBC/cBD
		/cBE/cBF/cC0/cC1/cC2/cC3/cC4/cC5/cC6/cC7/cC8/cC9/cCA/cCB/cCC/cCD/cCE/cCF/cD0
		/cD1/cD2/cD3/cD4/cD5/cD6/cD7/cD8/cD9/cDA/cDB/cDC/cDD/cDE/cDF/cE0/cE1/cE2/cE3
		/cE4/cE5/cE6/cE7/cE8/cE9/cEA/cEB/cEC/cED/cEE/cEF/cF0/cF1/cF2/cF3/cF4/cF5/cF6
		/cF7/cF8/cF9/cFA/cFB/cFC/cFD/cFE/cFF]def
		/ct_CID_STR_SIZE 8000 def
		/ct_mkocfStr100 100 string def
		/ct_defaultFontMtx[.001 0 0 .001 0 0]def
		/ct_1000Mtx[1000 0 0 1000 0 0]def
		/ct_raise{exch cvx exch errordict exch get exec stop}bind def
		/ct_reraise
			{cvx $error/errorname get(Error: )print dup(						 )cvs print
					errordict exch get exec stop
			}bind def
		/ct_cvnsi
			{
			1 index add 1 sub 1 exch 0 4 1 roll
				{
				2 index exch get
				exch 8 bitshift
				add
				}
			for
			exch pop
			}bind def
		/ct_GetInterval
			{
			Adobe_CoolType_Utility/ct_BuildCharDict get
				begin
				/dst_index 0 def
				dup dst_string length gt
					{dup string/dst_string exch def}
				if
				1 index ct_CID_STR_SIZE idiv
				/arrayIndex exch def
				2 index arrayIndex get
				2 index
				arrayIndex ct_CID_STR_SIZE mul
				sub
					{
					dup 3 index add 2 index length le
						{
						2 index getinterval
						dst_string dst_index 2 index putinterval
						length dst_index add/dst_index exch def
						exit
						}
						{
						1 index length 1 index sub
						dup 4 1 roll
						getinterval
						dst_string dst_index 2 index putinterval
						pop dup dst_index add/dst_index exch def
						sub
						/arrayIndex arrayIndex 1 add def
						2 index dup length arrayIndex gt
							 {arrayIndex get}
							 {
							 pop
							 exit
							 }
						ifelse
						0
						}
					ifelse
					}
				loop
				pop pop pop
				dst_string 0 dst_index getinterval
				end
			}bind def
		ct_Level2?
			{
			/ct_resourcestatus
			currentglobal mark true setglobal
				{/unknowninstancename/Category resourcestatus}
			stopped
				{cleartomark setglobal true}
				{cleartomark currentglobal not exch setglobal}
			ifelse
				{
					{
					mark 3 1 roll/Category findresource
						begin
						ct_Vars/vm currentglobal put
						({ResourceStatus}stopped)0()/SubFileDecode filter cvx exec
							{cleartomark false}
							{{3 2 roll pop true}{cleartomark false}ifelse}
						ifelse
						ct_Vars/vm get setglobal
						end
					}
				}
				{{resourcestatus}}
			ifelse bind def
			/CIDFont/Category ct_resourcestatus
				{pop pop}
				{
				currentglobal true setglobal
				/Generic/Category findresource
				dup length dict copy
				dup/InstanceType/dicttype put
				/CIDFont exch/Category defineresource pop
				setglobal
				}
			ifelse
			ct_UseNativeCapability?
				{
				/CIDInit/ProcSet findresource begin
				12 dict begin
				begincmap
				/CIDSystemInfo 3 dict dup begin
				 /Registry(Adobe)def
				 /Ordering(Identity)def
				 /Supplement 0 def
				end def
				/CMapName/Identity-H def
				/CMapVersion 1.000 def
				/CMapType 1 def
				1 begincodespacerange
				<0000><FFFF>
				endcodespacerange
				1 begincidrange
				<0000><FFFF>0
				endcidrange
				endcmap
				CMapName currentdict/CMap defineresource pop
				end
				end
				}
			if
			}
			{
			/ct_Category 2 dict begin
			/CIDFont 10 dict def
			/ProcSet	2 dict def
			currentdict
			end
			def
			/defineresource
				{
				ct_Category 1 index 2 copy known
					{
					get
					dup dup maxlength exch length eq
						{
						dup length 10 add dict copy
						ct_Category 2 index 2 index put
						}
					if
					3 index 3 index put
					pop exch pop
					}
					{pop pop/defineresource/undefined ct_raise}
				ifelse
				}bind def
			/findresource
				{
				ct_Category 1 index 2 copy known
					{
					get
					2 index 2 copy known
						{get 3 1 roll pop pop}
						{pop pop/findresource/undefinedresource ct_raise}
					ifelse
					}
					{pop pop/findresource/undefined ct_raise}
				ifelse
				}bind def
			/resourcestatus
				{
				ct_Category 1 index 2 copy known
					{
					get
					2 index known
					exch pop exch pop
						{
						0 -1 true
						}
						{
						false
						}
					ifelse
					}
					{pop pop/findresource/undefined ct_raise}
				ifelse
				}bind def
			/ct_resourcestatus/resourcestatus load def
			}
		ifelse
		/ct_CIDInit 2 dict
			begin
			/ct_cidfont_stream_init
				{
					{
					dup(Binary)eq
						{
						pop
						null
						currentfile
						ct_Level2?
							{
								{cid_BYTE_COUNT()/SubFileDecode filter}
							stopped
								{pop pop pop}
							if
							}
						if
						/readstring load
						exit
						}
					if
					dup(Hex)eq
						{
						pop
						currentfile
						ct_Level2?
							{
								{null exch/ASCIIHexDecode filter/readstring}
							stopped
								{pop exch pop(>)exch/readhexstring}
							if
							}
							{(>)exch/readhexstring}
						ifelse
						load
						exit
						}
					if
					/StartData/typecheck ct_raise
					}
				loop
				cid_BYTE_COUNT ct_CID_STR_SIZE le
					{
					2 copy cid_BYTE_COUNT string exch exec
					pop
					1 array dup
					3 -1 roll
					0 exch put
					}
					{
					cid_BYTE_COUNT ct_CID_STR_SIZE div ceiling cvi
					dup array exch 2 sub 0 exch 1 exch
						{
						2 copy
						5 index
						ct_CID_STR_SIZE
						string
						6 index exec
						pop
						put
						pop
						}
					for
					2 index
					cid_BYTE_COUNT ct_CID_STR_SIZE mod string
					3 index exec
					pop
					1 index exch
					1 index length 1 sub
					exch put
					}
				ifelse
				cid_CIDFONT exch/GlyphData exch put
				2 index null eq
					{
					pop pop pop
					}
					{
					pop/readstring load
					1 string exch
						{
						3 copy exec
						pop
						dup length 0 eq
							{
							pop pop pop pop pop
							true exit
							}
						if
						4 index
						eq
							{
							pop pop pop pop
							false exit
							}
						if
						}
					loop
					pop
					}
				ifelse
				}bind def
			/StartData
				{
				mark
					{
					currentdict
					dup/FDArray get 0 get/FontMatrix get
					0 get 0.001 eq
						{
						dup/CDevProc known not
							{
							/CDevProc 1183615869 internaldict/stdCDevProc 2 copy known
								{get}
								{
								pop pop
								{pop pop pop pop pop 0 -1000 7 index 2 div 880}
								}
							ifelse
							def
							}
						if
						}
						{
						/CDevProc
							{
							 pop pop pop pop pop
							 0
							 1 cid_temp/cid_CIDFONT get
							/FDArray get 0 get
							/FontMatrix get 0 get div
							 7 index 2 div
							 1 index 0.88 mul
							}def
						}
					ifelse
					/cid_temp 15 dict def
					cid_temp
						begin
						/cid_CIDFONT exch def
						3 copy pop
						dup/cid_BYTE_COUNT exch def 0 gt
							{
							ct_cidfont_stream_init
							FDArray
								{
								/Private get
								dup/SubrMapOffset known
									{
									begin
									/Subrs SubrCount array def
									Subrs
									SubrMapOffset
									SubrCount
									SDBytes
									ct_Level2?
										{
										currentdict dup/SubrMapOffset undef
										dup/SubrCount undef
										/SDBytes undef
										}
									if
									end
									/cid_SD_BYTES exch def
									/cid_SUBR_COUNT exch def
									/cid_SUBR_MAP_OFFSET exch def
									/cid_SUBRS exch def
									cid_SUBR_COUNT 0 gt
										{
										GlyphData cid_SUBR_MAP_OFFSET cid_SD_BYTES ct_GetInterval
										0 cid_SD_BYTES ct_cvnsi
										0 1 cid_SUBR_COUNT 1 sub
											{
											exch 1 index
											1 add
											cid_SD_BYTES mul cid_SUBR_MAP_OFFSET add
											GlyphData exch cid_SD_BYTES ct_GetInterval
											0 cid_SD_BYTES ct_cvnsi
											cid_SUBRS 4 2 roll
											GlyphData exch
											4 index
											1 index
											sub
											ct_GetInterval
											dup length string copy put
											}
										for
										pop
										}
									if
									}
									{pop}
								ifelse
								}
							forall
							}
						if
						cleartomark pop pop
						end
					CIDFontName currentdict/CIDFont defineresource pop
					end end
					}
				stopped
					{cleartomark/StartData ct_reraise}
				if
				}bind def
			currentdict
			end def
		/ct_saveCIDInit
			{
			/CIDInit/ProcSet ct_resourcestatus
				{true}
				{/CIDInitC/ProcSet ct_resourcestatus}
			ifelse
				{
				pop pop
				/CIDInit/ProcSet findresource
				ct_UseNativeCapability?
					{pop null}
					{/CIDInit ct_CIDInit/ProcSet defineresource pop}
				ifelse
				}
				{/CIDInit ct_CIDInit/ProcSet defineresource pop null}
			ifelse
			ct_Vars exch/ct_oldCIDInit exch put
			}bind def
		/ct_restoreCIDInit
			{
			ct_Vars/ct_oldCIDInit get dup null ne
				{/CIDInit exch/ProcSet defineresource pop}
				{pop}
			ifelse
			}bind def
		/ct_BuildCharSetUp
			{
			1 index
				begin
				CIDFont
					begin
					Adobe_CoolType_Utility/ct_BuildCharDict get
						begin
						/ct_dfCharCode exch def
						/ct_dfDict exch def
						CIDFirstByte ct_dfCharCode add
						dup CIDCount ge
							{pop 0}
						if
						/cid exch def
							{
							GlyphDirectory cid 2 copy known
								{get}
								{pop pop nullstring}
							ifelse
							dup length FDBytes sub 0 gt
								{
								dup
								FDBytes 0 ne
									{0 FDBytes ct_cvnsi}
									{pop 0}
								ifelse
								/fdIndex exch def
								dup length FDBytes sub FDBytes exch getinterval
								/charstring exch def
								exit
								}
								{
								pop
								cid 0 eq
									{/charstring nullstring def exit}
								if
								/cid 0 def
								}
							ifelse
							}
						loop
			}def
		/ct_SetCacheDevice
			{
			0 0 moveto
			dup stringwidth
			3 -1 roll
			true charpath
			pathbbox
			0 -1000
			7 index 2 div 880
			setcachedevice2
			0 0 moveto
			}def
		/ct_CloneSetCacheProc
			{
			1 eq
				{
				stringwidth
				pop -2 div -880
				0 -1000 setcharwidth
				moveto
				}
				{
				usewidths?
					{
					currentfont/Widths get cid
					2 copy known
						{get exch pop aload pop}
						{pop pop stringwidth}
					ifelse
					}
					{stringwidth}
				ifelse
				setcharwidth
				0 0 moveto
				}
			ifelse
			}def
		/ct_Type3ShowCharString
			{
			ct_FDDict fdIndex 2 copy known
				{get}
				{
				currentglobal 3 1 roll
				1 index gcheck setglobal
				ct_Type1FontTemplate dup maxlength dict copy
					begin
					FDArray fdIndex get
					dup/FontMatrix 2 copy known
						{get}
						{pop pop ct_defaultFontMtx}
					ifelse
					/FontMatrix exch dup length array copy def
					/Private get
					/Private exch def
					/Widths rootfont/Widths get def
					/CharStrings 1 dict dup/.notdef
						<d841272cf18f54fc13>dup length string copy put def
					currentdict
					end
				/ct_Type1Font exch definefont
				dup 5 1 roll put
				setglobal
				}
			ifelse
			dup/CharStrings get 1 index/Encoding get
			ct_dfCharCode get charstring put
			rootfont/WMode 2 copy known
				{get}
				{pop pop 0}
			ifelse
			exch
			1000 scalefont setfont
			ct_str1 0 ct_dfCharCode put
			ct_str1 exch ct_dfSetCacheProc
			ct_SyntheticBold
				{
				currentpoint
				ct_str1 show
				newpath
				moveto
				ct_str1 true charpath
				ct_StrokeWidth setlinewidth
				stroke
				}
				{ct_str1 show}
			ifelse
			}def
		/ct_Type4ShowCharString
			{
			ct_dfDict ct_dfCharCode charstring
			FDArray fdIndex get
			dup/FontMatrix get dup ct_defaultFontMtx ct_matrixeq not
				{ct_1000Mtx matrix concatmatrix concat}
				{pop}
			ifelse
			/Private get
			Adobe_CoolType_Utility/ct_Level2? get not
				{
				ct_dfDict/Private
				3 -1 roll
					{put}
				1183615869 internaldict/superexec get exec
				}
			if
			1183615869 internaldict
			Adobe_CoolType_Utility/ct_Level2? get
				{1 index}
				{3 index/Private get mark 6 1 roll}
			ifelse
			dup/RunInt known
				{/RunInt get}
				{pop/CCRun}
			ifelse
			get exec
			Adobe_CoolType_Utility/ct_Level2? get not
				{cleartomark}
			if
			}bind def
		/ct_BuildCharIncremental
			{
				{
				Adobe_CoolType_Utility/ct_MakeOCF get begin
				ct_BuildCharSetUp
				ct_ShowCharString
				}
			stopped
				{stop}
			if
			end
			end
			end
			end
			}bind def
		/BaseFontNameStr(BF00)def
		/ct_Type1FontTemplate 14 dict
			begin
			/FontType 1 def
			/FontMatrix [0.001 0 0 0.001 0 0]def
			/FontBBox [-250 -250 1250 1250]def
			/Encoding ct_cHexEncoding def
			/PaintType 0 def
			currentdict
			end def
		/BaseFontTemplate 11 dict
			begin
			/FontMatrix [0.001 0 0 0.001 0 0]def
			/FontBBox [-250 -250 1250 1250]def
			/Encoding ct_cHexEncoding def
			/BuildChar/ct_BuildCharIncremental load def
			ct_Clone?
				{
				/FontType 3 def
				/ct_ShowCharString/ct_Type3ShowCharString load def
				/ct_dfSetCacheProc/ct_CloneSetCacheProc load def
				/ct_SyntheticBold false def
				/ct_StrokeWidth 1 def
				}
				{
				/FontType 4 def
				/Private 1 dict dup/lenIV 4 put def
				/CharStrings 1 dict dup/.notdef<d841272cf18f54fc13>put def
				/PaintType 0 def
				/ct_ShowCharString/ct_Type4ShowCharString load def
				}
			ifelse
			/ct_str1 1 string def
			currentdict
			end def
		/BaseFontDictSize BaseFontTemplate length 5 add def
		/ct_matrixeq
			{
			true 0 1 5
				{
				dup 4 index exch get exch 3 index exch get eq and
				dup not
					{exit}
				if
				}
			for
			exch pop exch pop
			}bind def
		/ct_makeocf
			{
			15 dict
				begin
				exch/WMode exch def
				exch/FontName exch def
				/FontType 0 def
				/FMapType 2 def
			dup/FontMatrix known
				{dup/FontMatrix get/FontMatrix exch def}
				{/FontMatrix matrix def}
			ifelse
				/bfCount 1 index/CIDCount get 256 idiv 1 add
					dup 256 gt{pop 256}if def
				/Encoding
					256 array 0 1 bfCount 1 sub{2 copy dup put pop}for
					bfCount 1 255{2 copy bfCount put pop}for
					def
				/FDepVector bfCount dup 256 lt{1 add}if array def
				BaseFontTemplate BaseFontDictSize dict copy
					begin
					/CIDFont exch def
					CIDFont/FontBBox known
						{CIDFont/FontBBox get/FontBBox exch def}
					if
					CIDFont/CDevProc known
						{CIDFont/CDevProc get/CDevProc exch def}
					if
					currentdict
					end
				BaseFontNameStr 3(0)putinterval
				0 1 bfCount dup 256 eq{1 sub}if
					{
					FDepVector exch
					2 index BaseFontDictSize dict copy
						begin
						dup/CIDFirstByte exch 256 mul def
						FontType 3 eq
							{/ct_FDDict 2 dict def}
						if
						currentdict
						end
					1 index 16
					BaseFontNameStr 2 2 getinterval cvrs pop
					BaseFontNameStr exch definefont
					put
					}
				for
				ct_Clone?
					{/Widths 1 index/CIDFont get/GlyphDirectory get length dict def}
				if
				FontName
				currentdict
				end
			definefont
			ct_Clone?
				{
				gsave
				dup 1000 scalefont setfont
				ct_BuildCharDict
					begin
					/usewidths? false def
					currentfont/Widths get
						begin
						exch/CIDFont get/GlyphDirectory get
							{
							pop
							dup charcode exch 1 index 0 2 index 256 idiv put
							1 index exch 1 exch 256 mod put
							stringwidth 2 array astore def
							}
						forall
						end
					/usewidths? true def
					end
				grestore
				}
				{exch pop}
			ifelse
			}bind def
		currentglobal true setglobal
		/ct_ComposeFont
			{
			ct_UseNativeCapability?
				{				
				2 index/CMap ct_resourcestatus
					{pop pop exch pop}
					{
					/CIDInit/ProcSet findresource
						begin
						12 dict
							begin
							begincmap
							/CMapName 3 index def
							/CMapVersion 1.000 def
							/CMapType 1 def
							exch/WMode exch def
							/CIDSystemInfo 3 dict dup
								begin
								/Registry(Adobe)def
								/Ordering
								CMapName ct_mkocfStr100 cvs
								(Adobe-)search
									{
									pop pop
									(-)search
										{
										dup length string copy
										exch pop exch pop
										}
										{pop(Identity)}
									ifelse
									}
									{pop (Identity)}
								ifelse
								def
								/Supplement 0 def
								end def
							1 begincodespacerange
							<0000><FFFF>
							endcodespacerange
							1 begincidrange
							<0000><FFFF>0
							endcidrange
							endcmap
							CMapName currentdict/CMap defineresource pop
							end
						end
					}
				ifelse
				composefont
				}
				{
				3 2 roll pop
				0 get/CIDFont findresource
				ct_makeocf
				}
			ifelse
			}bind def
			setglobal
		/ct_MakeIdentity
			{
			ct_UseNativeCapability?
				{
				1 index/CMap ct_resourcestatus
					{pop pop}
					{
					/CIDInit/ProcSet findresource begin
					12 dict begin
					begincmap
					/CMapName 2 index def
					/CMapVersion 1.000 def
					/CMapType 1 def
					/CIDSystemInfo 3 dict dup
						begin
						/Registry(Adobe)def
						/Ordering
						CMapName ct_mkocfStr100 cvs
						(Adobe-)search
							{
							pop pop
							(-)search
								{dup length string copy exch pop exch pop}
								{pop(Identity)}
							ifelse
							}
							{pop(Identity)}
						ifelse
						def
						/Supplement 0 def
						end def
					1 begincodespacerange
					<0000><FFFF>
					endcodespacerange
					1 begincidrange
					<0000><FFFF>0
					endcidrange
					endcmap
					CMapName currentdict/CMap defineresource pop
					end
					end
					}
				ifelse
				composefont
				}
				{
				exch pop
				0 get/CIDFont findresource
				ct_makeocf
				}
			ifelse
			}bind def
		currentdict readonly pop
		end
	end
%%EndResource
setglobal
%%BeginResource: procset Adobe_CoolType_Utility_T42 1.0 0
%%Copyright: Copyright 1987-2004 Adobe Systems Incorporated.
%%Version: 1.0 0
userdict/ct_T42Dict 15 dict put
ct_T42Dict begin
/Is2015?
{
 version
 cvi
 2015
 ge
}bind def
/AllocGlyphStorage
{
 Is2015?
 {	
	pop
 }
 {
	{string}forall
 }ifelse
}bind def
/Type42DictBegin
{
25 dict begin
 /FontName exch def
 /CharStrings 256 dict 
begin
	 /.notdef 0 def
	 currentdict 
end def
 /Encoding exch def
 /PaintType 0 def
 /FontType 42 def
 /FontMatrix[1 0 0 1 0 0]def
 4 array astore cvx/FontBBox exch def
 /sfnts
}bind def
/Type42DictEnd 
{
 currentdict dup/FontName get exch definefont end
ct_T42Dict exch
dup/FontName get exch put
}bind def
/RD{string currentfile exch readstring pop}executeonly def
/PrepFor2015
{
Is2015?
{		 
	/GlyphDirectory 
	 16
	 dict def
	 sfnts 0 get
	 dup
	 2 index
	(glyx)
	 putinterval
	 2 index 
	(locx)
	 putinterval
	 pop
	 pop
}
{
	 pop
	 pop
}ifelse			
}bind def
/AddT42Char
{
Is2015?
{
	/GlyphDirectory get 
	begin
	def
	end
	pop
	pop
}
{
	/sfnts get
	4 index
	get
	3 index
 2 index
	putinterval
	pop
	pop
	pop
	pop
}ifelse
}bind def
/T0AddT42Mtx2
{
/CIDFont findresource/Metrics2 get begin def end
}bind def
end
%%EndResource
currentglobal true setglobal
%%BeginFile: MMFauxFont.prc
%%Copyright: Copyright 1987-2001 Adobe Systems Incorporated. 
%%All Rights Reserved.
userdict /ct_EuroDict 10 dict put
ct_EuroDict begin
/ct_CopyFont 
{
    { 1 index /FID ne {def} {pop pop} ifelse} forall
} def
/ct_GetGlyphOutline
{
   gsave
   initmatrix newpath
   exch findfont dup 
   length 1 add dict 
   begin 
		ct_CopyFont 
		/Encoding Encoding dup length array copy 
		dup
		4 -1 roll
		0 exch put   
		def
		currentdict
   end
   /ct_EuroFont exch definefont
   1000 scalefont setfont
   0 0 moveto
   [
       <00> stringwidth 
       <00> false charpath
       pathbbox
       [
       {/m cvx} {/l cvx} {/c cvx} {/cp cvx} pathforall
   grestore
   counttomark 8 add
}
def
/ct_MakeGlyphProc
{
   ] cvx
   /ct_PSBuildGlyph cvx
   ] cvx
} def
/ct_PSBuildGlyph 
{ 
 	gsave 
	8 -1 roll pop 
	7 1 roll 
        6 -2 roll ct_FontMatrix transform 6 2 roll
        4 -2 roll ct_FontMatrix transform 4 2 roll
        ct_FontMatrix transform 
	currentdict /PaintType 2 copy known {get 2 eq}{pop pop false} ifelse  
	dup  9 1 roll 
	{  
		currentdict /StrokeWidth 2 copy known  
		{   
			get 2 div   
			0 ct_FontMatrix dtransform pop
			5 1 roll  
			4 -1 roll 4 index sub   
			4 1 roll   
			3 -1 roll 4 index sub  
			3 1 roll   
			exch 4 index add exch  
			4 index add  
			5 -1 roll pop  
		}  
		{	 
			pop pop 
		}  
		ifelse  
	}       
    if  
	setcachedevice  
        ct_FontMatrix concat
        ct_PSPathOps begin 
		exec 
	end 
	{  
		currentdict /StrokeWidth 2 copy known  
			{ get }  
			{ pop pop 0 }  
  	    ifelse  
		setlinewidth stroke  
	}  
	{   
	    fill  
	}  
	ifelse  
    grestore
} def 
/ct_PSPathOps 4 dict dup begin 
	/m {moveto} def 
	/l {lineto} def 
	/c {curveto} def 
	/cp {closepath} def 
end 
def 
/ct_matrix1000 [1000 0 0 1000 0 0] def
/ct_AddGlyphProc  
{
   2 index findfont dup length 4 add dict 
   begin 
	ct_CopyFont 
	/CharStrings CharStrings dup length 1 add dict copy
      begin
         3 1 roll def  
         currentdict 
      end 
      def
      /ct_FontMatrix ct_matrix1000 FontMatrix matrix concatmatrix def
      /ct_PSBuildGlyph /ct_PSBuildGlyph load def
      /ct_PSPathOps /ct_PSPathOps load def
      currentdict
   end
   definefont pop
}
def
systemdict /languagelevel known
{
	/ct_AddGlyphToPrinterFont {
		2 copy
		ct_GetGlyphOutline 3 add -1 roll restore 
		ct_MakeGlyphProc 
		ct_AddGlyphProc
	} def
}
{
	/ct_AddGlyphToPrinterFont {
	    pop pop restore
		Adobe_CTFauxDict /$$$FONTNAME get
		/Euro
		Adobe_CTFauxDict /$$$SUBSTITUTEBASE get
		ct_EuroDict exch get
		ct_AddGlyphProc
	} def
} ifelse
/AdobeSansMM 
{ 
556 0 24 -19 541 703 
	{ 
	541 628 m 
	510 669 442 703 354 703 c 
	201 703 117 607 101 444 c 
	50 444 l 
	25 372 l 
	97 372 l 
	97 301 l 
	49 301 l 
	24 229 l 
	103 229 l 
	124 67 209 -19 350 -19 c 
	435 -19 501 25 509 32 c 
	509 131 l 
	492 105 417 60 343 60 c 
	267 60 204 127 197 229 c 
	406 229 l 
	430 301 l 
	191 301 l 
	191 372 l 
	455 372 l 
	479 444 l 
	194 444 l 
	201 531 245 624 348 624 c 
	433 624 484 583 509 534 c 
	cp 
	556 0 m 
	}
ct_PSBuildGlyph
} def
/AdobeSerifMM 
{ 
500 0 10 -12 484 692 
	{ 
	347 298 m 
	171 298 l 
	170 310 170 322 170 335 c 
	170 362 l 
	362 362 l 
	374 403 l 
	172 403 l 
	184 580 244 642 308 642 c 
	380 642 434 574 457 457 c 
	481 462 l 
	474 691 l 
	449 691 l 
	433 670 429 657 410 657 c 
	394 657 360 692 299 692 c 
	204 692 94 604 73 403 c 
	22 403 l 
	10 362 l 
	70 362 l 
	69 352 69 341 69 330 c 
	69 319 69 308 70 298 c 
	22 298 l 
	10 257 l 
	73 257 l 
	97 57 216 -12 295 -12 c 
	364 -12 427 25 484 123 c 
	458 142 l 
	425 101 384 37 316 37 c 
	256 37 189 84 173 257 c 
	335 257 l 
	cp 
	500 0 m 
	} 
ct_PSBuildGlyph 
} def 
end		
%%EndFile
setglobal
Adobe_CoolType_Core begin /$Oblique SetSubstituteStrategy end
%%BeginResource: procset Adobe_AGM_Image 1.0 0
%%Version: 1.0 0
%%Copyright: Copyright(C)2000-2006 Adobe Systems, Inc. All Rights Reserved.
systemdict/setpacking known
{
	currentpacking
	true setpacking
}if
userdict/Adobe_AGM_Image 71 dict dup begin put
/Adobe_AGM_Image_Id/Adobe_AGM_Image_1.0_0 def
/nd{
	null def
}bind def
/AGMIMG_&image nd
/AGMIMG_&colorimage nd
/AGMIMG_&imagemask nd
/AGMIMG_mbuf()def
/AGMIMG_ybuf()def
/AGMIMG_kbuf()def
/AGMIMG_c 0 def
/AGMIMG_m 0 def
/AGMIMG_y 0 def
/AGMIMG_k 0 def
/AGMIMG_tmp nd
/AGMIMG_imagestring0 nd
/AGMIMG_imagestring1 nd
/AGMIMG_imagestring2 nd
/AGMIMG_imagestring3 nd
/AGMIMG_imagestring4 nd
/AGMIMG_imagestring5 nd
/AGMIMG_cnt nd
/AGMIMG_fsave nd
/AGMIMG_colorAry nd
/AGMIMG_override nd
/AGMIMG_name nd
/AGMIMG_maskSource nd
/AGMIMG_flushfilters nd
/invert_image_samples nd
/knockout_image_samples	nd
/img nd
/sepimg nd
/devnimg nd
/idximg nd
/ds
{
	Adobe_AGM_Core begin
	Adobe_AGM_Image begin
	/AGMIMG_&image systemdict/image get def
	/AGMIMG_&imagemask systemdict/imagemask get def
	/colorimage where{
		pop
		/AGMIMG_&colorimage/colorimage ldf
	}if
	end
	end
}def
/ps
{
	Adobe_AGM_Image begin
	/AGMIMG_ccimage_exists{/customcolorimage where 
		{
			pop
			/Adobe_AGM_OnHost_Seps where
			{
			pop false
			}{
			/Adobe_AGM_InRip_Seps where
				{
				pop false
				}{
					true
				}ifelse
			}ifelse
			}{
			false
		}ifelse 
	}bdf
	level2{
		/invert_image_samples
		{
			Adobe_AGM_Image/AGMIMG_tmp Decode length ddf
			/Decode[Decode 1 get Decode 0 get]def
		}def
		/knockout_image_samples
		{
			Operator/imagemask ne{
				/Decode[1 1]def
			}if
		}def
	}{	
		/invert_image_samples
		{
			{1 exch sub}currenttransfer addprocs settransfer
		}def
		/knockout_image_samples
		{
			{pop 1}currenttransfer addprocs settransfer
		}def
	}ifelse
	/img/imageormask ldf
	/sepimg/sep_imageormask ldf
	/devnimg/devn_imageormask ldf
	/idximg/indexed_imageormask ldf
	/_ctype 7 def
	currentdict{
		dup xcheck 1 index type dup/arraytype eq exch/packedarraytype eq or and{
			bind
		}if
		def
	}forall
}def
/pt
{
	end
}def
/dt
{
}def
/AGMIMG_flushfilters
{
	dup type/arraytype ne
		{1 array astore}if
	dup 0 get currentfile ne
		{dup 0 get flushfile}if
		{
		dup type/filetype eq
			{
			dup status 1 index currentfile ne and
				{closefile}
				{pop}
			ifelse
			}{pop}ifelse
		}forall
}def
/AGMIMG_init_common
{
	currentdict/T known{/ImageType/T ldf currentdict/T undef}if
	currentdict/W known{/Width/W ldf currentdict/W undef}if
	currentdict/H known{/Height/H ldf currentdict/H undef}if
	currentdict/M known{/ImageMatrix/M ldf currentdict/M undef}if
	currentdict/BC known{/BitsPerComponent/BC ldf currentdict/BC undef}if
	currentdict/D known{/Decode/D ldf currentdict/D undef}if
	currentdict/DS known{/DataSource/DS ldf currentdict/DS undef}if
	currentdict/O known{
		/Operator/O load 1 eq{
			/imagemask
		}{
			/O load 2 eq{
				/image 
			}{
				/colorimage
			}ifelse
		}ifelse
		def
		currentdict/O undef
	}if
	currentdict/HSCI known{/HostSepColorImage/HSCI ldf currentdict/HSCI undef}if
	currentdict/MD known{/MultipleDataSources/MD ldf currentdict/MD undef}if
	currentdict/I known{/Interpolate/I ldf currentdict/I undef}if
	currentdict/SI known{/SkipImageProc/SI ldf currentdict/SI undef}if
	/DataSource load xcheck not{
		DataSource type/arraytype eq{
			DataSource 0 get type/filetype eq{
				/_Filters DataSource def
				currentdict/MultipleDataSources known not{
					/DataSource DataSource dup length 1 sub get def 
				}if
			}if
		}if
		currentdict/MultipleDataSources known not{
			/MultipleDataSources DataSource type/arraytype eq{
				DataSource length 1 gt
			}
			{false}ifelse def
		}if
	}if
	/NComponents Decode length 2 div def
	currentdict/SkipImageProc known not{/SkipImageProc{false}def}if
}bdf
/imageormask_sys
{
	begin
		AGMIMG_init_common
		save mark
		level2{
			currentdict
			Operator/imagemask eq{
				AGMIMG_&imagemask
			}{
				use_mask{
					process_mask AGMIMG_&image
				}{
					AGMIMG_&image
				}ifelse
			}ifelse
		}{
			Width Height
			Operator/imagemask eq{
				Decode 0 get 1 eq Decode 1 get 0 eq	and
				ImageMatrix/DataSource load
				AGMIMG_&imagemask
			}{
				BitsPerComponent ImageMatrix/DataSource load
				AGMIMG_&image
			}ifelse
		}ifelse
		currentdict/_Filters known{_Filters AGMIMG_flushfilters}if
		cleartomark restore
	end
}def
/overprint_plate
{
	currentoverprint{
		0 get dup type/nametype eq{
			dup/DeviceGray eq{
				pop AGMCORE_black_plate not
			}{
				/DeviceCMYK eq{
					AGMCORE_is_cmyk_sep not
				}if
			}ifelse
		}{
			false exch
			{
				 AGMOHS_sepink eq or
			}forall
			not
		}ifelse
	}{
		pop false
	}ifelse
}def
/process_mask
{
	level3{
		dup begin
		/ImageType 1 def
		end
		4 dict begin
			/DataDict exch def
			/ImageType 3 def
			/InterleaveType 3 def
			/MaskDict 9 dict begin
				/ImageType 1 def
				/Width DataDict dup/MaskWidth known{/MaskWidth}{/Width}ifelse get def
				/Height DataDict dup/MaskHeight known{/MaskHeight}{/Height}ifelse get def
				/ImageMatrix[Width 0 0 Height neg 0 Height]def
				/NComponents 1 def
				/BitsPerComponent 1 def
				/Decode DataDict dup/MaskD known{/MaskD}{[1 0]}ifelse get def
				/DataSource Adobe_AGM_Core/AGMIMG_maskSource get def
			currentdict end def
		currentdict end
	}if
}def
/use_mask
{
	dup/Mask known	{dup/Mask get}{false}ifelse
}def
/imageormask
{
	begin
		AGMIMG_init_common
		SkipImageProc{
			currentdict consumeimagedata
		}
		{
			save mark
			level2 AGMCORE_host_sep not and{
				currentdict
				Operator/imagemask eq DeviceN_PS2 not and{
					imagemask
				}{
					AGMCORE_in_rip_sep currentoverprint and currentcolorspace 0 get/DeviceGray eq and{
						[/Separation/Black/DeviceGray{}]setcolorspace
						/Decode[Decode 1 get Decode 0 get]def
					}if
					use_mask{
						process_mask image
					}{
						DeviceN_NoneName DeviceN_PS2 Indexed_DeviceN level3 not and or or AGMCORE_in_rip_sep and 
						{
							Names convert_to_process not{
								2 dict begin
								/imageDict xdf
								/names_index 0 def
								gsave
								imageDict write_image_file{
									Names{
										dup(None)ne{
											[/Separation 3 -1 roll/DeviceGray{1 exch sub}]setcolorspace
											Operator imageDict read_image_file
											names_index 0 eq{true setoverprint}if
											/names_index names_index 1 add def
										}{
											pop
										}ifelse
									}forall
									close_image_file
								}if
								grestore
								end
							}{
								Operator/imagemask eq{
									imagemask
								}{
									image
								}ifelse
							}ifelse
						}{
							Operator/imagemask eq{
								imagemask
							}{
								image
							}ifelse
						}ifelse
					}ifelse
				}ifelse
			}{
				Width Height
				Operator/imagemask eq{
					Decode 0 get 1 eq Decode 1 get 0 eq	and
					ImageMatrix/DataSource load
					/Adobe_AGM_OnHost_Seps where{
						pop imagemask
					}{
						currentgray 1 ne{
							currentdict imageormask_sys
						}{
							currentoverprint not{
								1 AGMCORE_&setgray
								currentdict imageormask_sys
							}{
								currentdict ignoreimagedata
							}ifelse				 		
						}ifelse
					}ifelse
				}{
					BitsPerComponent ImageMatrix 
					MultipleDataSources{
						0 1 NComponents 1 sub{
							DataSource exch get
						}for
					}{
						/DataSource load
					}ifelse
					Operator/colorimage eq{
						AGMCORE_host_sep{
							MultipleDataSources level2 or NComponents 4 eq and{
								AGMCORE_is_cmyk_sep{
									MultipleDataSources{
										/DataSource DataSource 0 get xcheck
											{
											[
											DataSource 0 get/exec cvx
											DataSource 1 get/exec cvx
											DataSource 2 get/exec cvx
											DataSource 3 get/exec cvx
											/AGMCORE_get_ink_data cvx
											]cvx
											}{
											DataSource aload pop AGMCORE_get_ink_data
											}ifelse def
									}{
										/DataSource 
										Width BitsPerComponent mul 7 add 8 idiv Height mul 4 mul 
										/DataSource load
										filter_cmyk 0()/SubFileDecode filter def
									}ifelse
									/Decode[Decode 0 get Decode 1 get]def
									/MultipleDataSources false def
									/NComponents 1 def
									/Operator/image def
									invert_image_samples
						 			1 AGMCORE_&setgray
									currentdict imageormask_sys
								}{
									currentoverprint not Operator/imagemask eq and{
 			 							1 AGMCORE_&setgray
 			 							currentdict imageormask_sys
 			 						}{
 			 							currentdict ignoreimagedata
 			 						}ifelse
								}ifelse
							}{	
								MultipleDataSources NComponents AGMIMG_&colorimage						
							}ifelse
						}{
							true NComponents colorimage
						}ifelse
					}{
						Operator/image eq{
							AGMCORE_host_sep{
								/DoImage true def
								currentdict/HostSepColorImage known{HostSepColorImage not}{false}ifelse
								{
									AGMCORE_black_plate not Operator/imagemask ne and{
										/DoImage false def
										currentdict ignoreimagedata
					 				}if
								}if
						 		1 AGMCORE_&setgray
								DoImage
									{currentdict imageormask_sys}if
							}{
								use_mask{
									process_mask image
								}{
									image
								}ifelse
							}ifelse
						}{
							Operator/knockout eq{
								pop pop pop pop pop
								currentcolorspace overprint_plate not{
									knockout_unitsq
								}if
							}if
						}ifelse
					}ifelse
				}ifelse
			}ifelse
			cleartomark restore
		}ifelse
		currentdict/_Filters known{_Filters AGMIMG_flushfilters}if
	end
}def
/sep_imageormask
{
 	/sep_colorspace_dict AGMCORE_gget begin
	CSA map_csa
	begin
	AGMIMG_init_common
	SkipImageProc{
		currentdict consumeimagedata
	}{
		save mark 
		AGMCORE_avoid_L2_sep_space{
			/Decode[Decode 0 get 255 mul Decode 1 get 255 mul]def
		}if
 		AGMIMG_ccimage_exists 
		MappedCSA 0 get/DeviceCMYK eq and
		currentdict/Components known and 
		Name()ne and 
		Name(All)ne and 
		Operator/image eq and
		AGMCORE_producing_seps not and
		level2 not and
		{
			Width Height BitsPerComponent ImageMatrix 
			[
			/DataSource load/exec cvx
			{
				0 1 2 index length 1 sub{
					1 index exch
					2 copy get 255 xor put
				}for
			}/exec cvx
			]cvx bind
			MappedCSA 0 get/DeviceCMYK eq{
				Components aload pop
			}{
				0 0 0 Components aload pop 1 exch sub
			}ifelse
			Name findcmykcustomcolor
			customcolorimage
		}{
			AGMCORE_producing_seps not{
				level2{
 					//Adobe_AGM_Core/AGMCORE_pattern_paint_type get 2 ne AGMCORE_avoid_L2_sep_space not and currentcolorspace 0 get/Separation ne and{
						[/Separation Name MappedCSA sep_proc_name exch dup 0 get 15 string cvs(/Device)anchorsearch{pop pop 0 get}{pop}ifelse exch load]setcolorspace_opt
						/sep_tint AGMCORE_gget setcolor
					}if
					currentdict imageormask
				}{
					currentdict
					Operator/imagemask eq{
						imageormask
					}{
						sep_imageormask_lev1
					}ifelse
				}ifelse
 			}{
				AGMCORE_host_sep{
					Operator/knockout eq{
						currentdict/ImageMatrix get concat
						knockout_unitsq
					}{
						currentgray 1 ne{
 							AGMCORE_is_cmyk_sep Name(All)ne and{
 								level2{
 									Name AGMCORE_IsSeparationAProcessColor 
 									{
 										Operator/imagemask eq{
 											//Adobe_AGM_Core/AGMCORE_pattern_paint_type get 2 ne{
 												/sep_tint AGMCORE_gget 1 exch sub AGMCORE_&setcolor
 											}if
 										}{
											invert_image_samples
 										}ifelse
	 								}{
	 									//Adobe_AGM_Core/AGMCORE_pattern_paint_type get 2 ne{
	 										[/Separation Name[/DeviceGray]
	 										{
	 											sep_colorspace_proc AGMCORE_get_ink_data
												1 exch sub
	 										}bind
											]AGMCORE_&setcolorspace
											/sep_tint AGMCORE_gget AGMCORE_&setcolor
										}if
 									}ifelse
 									currentdict imageormask_sys
	 							}{
	 								currentdict
									Operator/imagemask eq{
										imageormask_sys
									}{
										sep_image_lev1_sep
									}ifelse
	 							}ifelse
 							}{
 								Operator/imagemask ne{
									invert_image_samples
 								}if
		 						currentdict imageormask_sys
 							}ifelse
 						}{
 							currentoverprint not Name(All)eq or Operator/imagemask eq and{
								currentdict imageormask_sys 
								}{
								currentoverprint not
									{
 									gsave 
 									knockout_unitsq
 									grestore
									}if
								currentdict consumeimagedata 
		 					}ifelse
 						}ifelse
		 			}ifelse
 				}{
					//Adobe_AGM_Core/AGMCORE_pattern_paint_type get 2 ne{
						currentcolorspace 0 get/Separation ne{
							[/Separation Name MappedCSA sep_proc_name exch 0 get exch load]setcolorspace_opt
							/sep_tint AGMCORE_gget setcolor
						}if
					}if
					currentoverprint 
					MappedCSA 0 get/DeviceCMYK eq and 
					Name AGMCORE_IsSeparationAProcessColor not and
					//Adobe_AGM_Core/AGMCORE_pattern_paint_type get 2 ne{Name inRip_spot_has_ink not and}{false}ifelse 
					Name(All)ne and{
						imageormask_l2_overprint
					}{
						currentdict imageormask
 					}ifelse
				}ifelse
			}ifelse
		}ifelse
		cleartomark restore
	}ifelse
	currentdict/_Filters known{_Filters AGMIMG_flushfilters}if
	end
	end
}def
/colorSpaceElemCnt
{
	mark currentcolor counttomark dup 2 add 1 roll cleartomark
}bdf
/devn_sep_datasource
{
	1 dict begin
	/dataSource xdf
	[
		0 1 dataSource length 1 sub{
			dup currentdict/dataSource get/exch cvx/get cvx/exec cvx
			/exch cvx names_index/ne cvx[/pop cvx]cvx/if cvx
		}for
	]cvx bind
	end
}bdf		
/devn_alt_datasource
{
	11 dict begin
	/convProc xdf
	/origcolorSpaceElemCnt xdf
	/origMultipleDataSources xdf
	/origBitsPerComponent xdf
	/origDecode xdf
	/origDataSource xdf
	/dsCnt origMultipleDataSources{origDataSource length}{1}ifelse def
	/DataSource origMultipleDataSources
		{
			[
			BitsPerComponent 8 idiv origDecode length 2 idiv mul string
			0 1 origDecode length 2 idiv 1 sub
				{
				dup 7 mul 1 add index exch dup BitsPerComponent 8 idiv mul exch
				origDataSource exch get 0()/SubFileDecode filter
				BitsPerComponent 8 idiv string/readstring cvx/pop cvx/putinterval cvx
				}for 
			]bind cvx
		}{origDataSource}ifelse 0()/SubFileDecode filter def		
	[
		origcolorSpaceElemCnt string
		0 2 origDecode length 2 sub
			{
			dup origDecode exch get dup 3 -1 roll 1 add origDecode exch get exch sub 2 BitsPerComponent exp 1 sub div
			1 BitsPerComponent 8 idiv{DataSource/read cvx/not cvx{0}/if cvx/mul cvx}repeat/mul cvx/add cvx
			}for
		/convProc load/exec cvx
		origcolorSpaceElemCnt 1 sub -1 0
			{
			/dup cvx 2/add cvx/index cvx
			3 1/roll cvx/exch cvx 255/mul cvx/cvi cvx/put cvx
			}for
	]bind cvx 0()/SubFileDecode filter
	end
}bdf
/devn_imageormask
{
 	/devicen_colorspace_dict AGMCORE_gget begin
	CSA map_csa
	2 dict begin
	dup
	/srcDataStrs[3 -1 roll begin
		AGMIMG_init_common
		currentdict/MultipleDataSources known{MultipleDataSources{DataSource length}{1}ifelse}{1}ifelse
		{
			Width Decode length 2 div mul cvi
			{
				dup 65535 gt{1 add 2 div cvi}{exit}ifelse
			}loop
			string
		}repeat
		end]def
	/dstDataStr srcDataStrs 0 get length string def
	begin
	AGMIMG_init_common
	SkipImageProc{
		currentdict consumeimagedata
	}{
		save mark 
		AGMCORE_producing_seps not{
			level3 not{
				Operator/imagemask ne{
					/DataSource[[
						DataSource Decode BitsPerComponent currentdict/MultipleDataSources known{MultipleDataSources}{false}ifelse
						colorSpaceElemCnt/devicen_colorspace_dict AGMCORE_gget/TintTransform get 
						devn_alt_datasource 1/string cvx/readstring cvx/pop cvx]cvx colorSpaceElemCnt 1 sub{dup}repeat]def				
					/MultipleDataSources true def
					/Decode colorSpaceElemCnt[exch{0 1}repeat]def
				}if
			}if
			currentdict imageormask
 		}{
			AGMCORE_host_sep{
				Names convert_to_process{
					CSA get_csa_by_name 0 get/DeviceCMYK eq{
						/DataSource
							Width BitsPerComponent mul 7 add 8 idiv Height mul 4 mul 
							DataSource Decode BitsPerComponent currentdict/MultipleDataSources known{MultipleDataSources}{false}ifelse
							4/devicen_colorspace_dict AGMCORE_gget/TintTransform get 
							devn_alt_datasource
						filter_cmyk 0()/SubFileDecode filter def
						/MultipleDataSources false def
						/Decode[1 0]def
						/DeviceGray setcolorspace
			 			currentdict imageormask_sys
 					}{
						AGMCORE_report_unsupported_color_space
						AGMCORE_black_plate{
							/DataSource
								DataSource Decode BitsPerComponent currentdict/MultipleDataSources known{MultipleDataSources}{false}ifelse
								CSA get_csa_by_name 0 get/DeviceRGB eq{3}{1}ifelse/devicen_colorspace_dict AGMCORE_gget/TintTransform get
								devn_alt_datasource
							/MultipleDataSources false def
							/Decode colorSpaceElemCnt[exch{0 1}repeat]def
				 			currentdict imageormask_sys
				 		}{
	 						gsave 
	 						knockout_unitsq
	 						grestore
							currentdict consumeimagedata 
						}ifelse
 					}ifelse
				}
				{	
					/devicen_colorspace_dict AGMCORE_gget/names_index known{
	 					Operator/imagemask ne{
	 						MultipleDataSources{
		 						/DataSource[DataSource devn_sep_datasource/exec cvx]cvx def
								/MultipleDataSources false def
	 						}{
								/DataSource/DataSource load dstDataStr srcDataStrs 0 get filter_devn def
	 						}ifelse
							invert_image_samples
	 					}if
			 			currentdict imageormask_sys
	 				}{
	 					currentoverprint not Operator/imagemask eq and{
							currentdict imageormask_sys 
							}{
							currentoverprint not
								{
	 							gsave 
	 							knockout_unitsq
	 							grestore
								}if
							currentdict consumeimagedata 
			 			}ifelse
	 				}ifelse
	 			}ifelse
 			}{
				currentdict imageormask
			}ifelse
		}ifelse
		cleartomark restore
	}ifelse
	currentdict/_Filters known{_Filters AGMIMG_flushfilters}if
	end
	end
	end
}def
/imageormask_l2_overprint
{
	currentdict
	currentcmykcolor add add add 0 eq{
		currentdict consumeimagedata
	}{
		level3{			
			currentcmykcolor 
			/AGMIMG_k xdf 
			/AGMIMG_y xdf 
			/AGMIMG_m xdf 
			/AGMIMG_c xdf
			Operator/imagemask eq{
				[/DeviceN[
				AGMIMG_c 0 ne{/Cyan}if
				AGMIMG_m 0 ne{/Magenta}if
				AGMIMG_y 0 ne{/Yellow}if
				AGMIMG_k 0 ne{/Black}if
				]/DeviceCMYK{}]setcolorspace
				AGMIMG_c 0 ne{AGMIMG_c}if
				AGMIMG_m 0 ne{AGMIMG_m}if
				AGMIMG_y 0 ne{AGMIMG_y}if
				AGMIMG_k 0 ne{AGMIMG_k}if
				setcolor			
			}{	
				/Decode[Decode 0 get 255 mul Decode 1 get 255 mul]def
				[/Indexed 				
					[
						/DeviceN[
							AGMIMG_c 0 ne{/Cyan}if
							AGMIMG_m 0 ne{/Magenta}if
							AGMIMG_y 0 ne{/Yellow}if
							AGMIMG_k 0 ne{/Black}if
						]
						/DeviceCMYK{
							AGMIMG_k 0 eq{0}if
							AGMIMG_y 0 eq{0 exch}if
							AGMIMG_m 0 eq{0 3 1 roll}if
							AGMIMG_c 0 eq{0 4 1 roll}if						
						}
					]
					255
					{
						255 div 
						mark exch
						dup	dup dup
						AGMIMG_k 0 ne{
							/sep_tint AGMCORE_gget mul MappedCSA sep_proc_name exch pop load exec 4 1 roll pop pop pop		
							counttomark 1 roll
						}{
							pop
						}ifelse
						AGMIMG_y 0 ne{
							/sep_tint AGMCORE_gget mul MappedCSA sep_proc_name exch pop load exec 4 2 roll pop pop pop		
							counttomark 1 roll
						}{
							pop
						}ifelse
						AGMIMG_m 0 ne{
							/sep_tint AGMCORE_gget mul MappedCSA sep_proc_name exch pop load exec 4 3 roll pop pop pop		
							counttomark 1 roll
						}{
							pop
						}ifelse
						AGMIMG_c 0 ne{
							/sep_tint AGMCORE_gget mul MappedCSA sep_proc_name exch pop load exec pop pop pop		
							counttomark 1 roll
						}{
							pop
						}ifelse
						counttomark 1 add -1 roll pop
					}
				]setcolorspace
			}ifelse
			imageormask_sys
		}{
	write_image_file{
		currentcmykcolor
		0 ne{
			[/Separation/Black/DeviceGray{}]setcolorspace
			gsave
			/Black
			[{1 exch sub/sep_tint AGMCORE_gget mul}/exec cvx MappedCSA sep_proc_name cvx exch pop{4 1 roll pop pop pop 1 exch sub}/exec cvx]
			cvx modify_halftone_xfer
			Operator currentdict read_image_file
			grestore
		}if
		0 ne{
			[/Separation/Yellow/DeviceGray{}]setcolorspace
			gsave
			/Yellow
			[{1 exch sub/sep_tint AGMCORE_gget mul}/exec cvx MappedCSA sep_proc_name cvx exch pop{4 2 roll pop pop pop 1 exch sub}/exec cvx]
			cvx modify_halftone_xfer
			Operator currentdict read_image_file
			grestore
		}if
		0 ne{
			[/Separation/Magenta/DeviceGray{}]setcolorspace
			gsave
			/Magenta
			[{1 exch sub/sep_tint AGMCORE_gget mul}/exec cvx MappedCSA sep_proc_name cvx exch pop{4 3 roll pop pop pop 1 exch sub}/exec cvx]
			cvx modify_halftone_xfer
			Operator currentdict read_image_file
			grestore
		}if
		0 ne{
			[/Separation/Cyan/DeviceGray{}]setcolorspace
			gsave
			/Cyan 
			[{1 exch sub/sep_tint AGMCORE_gget mul}/exec cvx MappedCSA sep_proc_name cvx exch pop{pop pop pop 1 exch sub}/exec cvx]
			cvx modify_halftone_xfer
			Operator currentdict read_image_file
			grestore
		}if
				close_image_file
			}{
				imageormask
			}ifelse
		}ifelse
	}ifelse
}def
/indexed_imageormask
{
	begin
		AGMIMG_init_common
		save mark 
 		currentdict
 		AGMCORE_host_sep{
			Operator/knockout eq{
				/indexed_colorspace_dict AGMCORE_gget dup/CSA known{
					/CSA get get_csa_by_name
				}{
					/Names get
				}ifelse
				overprint_plate not{
					knockout_unitsq
				}if
			}{
				Indexed_DeviceN{
					/devicen_colorspace_dict AGMCORE_gget dup/names_index known exch/Names get convert_to_process or{
			 			indexed_image_lev2_sep
					}{
						currentoverprint not{
							knockout_unitsq
			 			}if
			 			currentdict consumeimagedata
					}ifelse
				}{
		 			AGMCORE_is_cmyk_sep{
						Operator/imagemask eq{
							imageormask_sys
						}{
							level2{
								indexed_image_lev2_sep
							}{
								indexed_image_lev1_sep
							}ifelse
						}ifelse
					}{
						currentoverprint not{
							knockout_unitsq
			 			}if
			 			currentdict consumeimagedata
					}ifelse
				}ifelse
			}ifelse
 		}{
			level2{
				Indexed_DeviceN{
					/indexed_colorspace_dict AGMCORE_gget begin
				}{
					/indexed_colorspace_dict AGMCORE_gget dup null ne
					{
						begin
						currentdict/CSDBase known{CSDBase/CSD get_res/MappedCSA get}{CSA}ifelse
						get_csa_by_name 0 get/DeviceCMYK eq ps_level 3 ge and ps_version 3015.007 lt and
						AGMCORE_in_rip_sep and{
							[/Indexed[/DeviceN[/Cyan/Magenta/Yellow/Black]/DeviceCMYK{}]HiVal Lookup]
							setcolorspace
						}if
						end
					}
					{pop}ifelse
				}ifelse
				imageormask
				Indexed_DeviceN{
					end
				}if
			}{
				Operator/imagemask eq{
					imageormask
				}{
					indexed_imageormask_lev1
				}ifelse
			}ifelse
 		}ifelse
		cleartomark restore
	currentdict/_Filters known{_Filters AGMIMG_flushfilters}if
	end
}def
/indexed_image_lev2_sep
{
	/indexed_colorspace_dict AGMCORE_gget begin
	begin
		Indexed_DeviceN not{
			currentcolorspace 
			dup 1/DeviceGray put
			dup 3
			currentcolorspace 2 get 1 add string
			0 1 2 3 AGMCORE_get_ink_data 4 currentcolorspace 3 get length 1 sub
			{
			dup 4 idiv exch currentcolorspace 3 get exch get 255 exch sub 2 index 3 1 roll put
			}for 
			put	setcolorspace
		}if
		currentdict 
		Operator/imagemask eq{
			AGMIMG_&imagemask
		}{
			use_mask{
				process_mask AGMIMG_&image
			}{
				AGMIMG_&image
			}ifelse
		}ifelse
	end end
}def
 /OPIimage
 {
 	dup type/dicttype ne{
 		10 dict begin
 			/DataSource xdf
 			/ImageMatrix xdf
 			/BitsPerComponent xdf
 			/Height xdf
 			/Width xdf
 			/ImageType 1 def
 			/Decode[0 1 def]
 			currentdict
 		end
 	}if
 	dup begin
 		/NComponents 1 cdndf
 		/MultipleDataSources false cdndf
 		/SkipImageProc{false}cdndf
 		/Decode[
 				0 
 				currentcolorspace 0 get/Indexed eq{
 					2 BitsPerComponent exp 1 sub
 				}{
 					1
 				}ifelse
 		]cdndf
 		/Operator/image cdndf
 	end
 	/sep_colorspace_dict AGMCORE_gget null eq{
 		imageormask
 	}{
 		gsave
 		dup begin invert_image_samples end
 		sep_imageormask
 		grestore
 	}ifelse
 }def
/cachemask_level2
{
	3 dict begin
	/LZWEncode filter/WriteFilter xdf
	/readBuffer 256 string def
	/ReadFilter
		currentfile
		0(%EndMask)/SubFileDecode filter
		/ASCII85Decode filter
		/RunLengthDecode filter
	def
	{
		ReadFilter readBuffer readstring exch
		WriteFilter exch writestring
		not{exit}if
	}loop
	WriteFilter closefile
	end
}def
/spot_alias
{
	/mapto_sep_imageormask 
	{
		dup type/dicttype ne{
			12 dict begin
				/ImageType 1 def
				/DataSource xdf
				/ImageMatrix xdf
				/BitsPerComponent xdf
				/Height xdf
				/Width xdf
				/MultipleDataSources false def
		}{
			begin
		}ifelse
				/Decode[/customcolor_tint AGMCORE_gget 0]def
				/Operator/image def
				/SkipImageProc{false}def
				currentdict 
			end
		sep_imageormask
	}bdf
	/customcolorimage
	{
		Adobe_AGM_Image/AGMIMG_colorAry xddf
		/customcolor_tint AGMCORE_gget
		<<
			/Name AGMIMG_colorAry 4 get
			/CSA[/DeviceCMYK]
			/TintMethod/Subtractive
			/TintProc null
			/MappedCSA null
			/NComponents 4 
			/Components[AGMIMG_colorAry aload pop pop]
		>>
		setsepcolorspace
		mapto_sep_imageormask
	}ndf
	Adobe_AGM_Image/AGMIMG_&customcolorimage/customcolorimage load put
	/customcolorimage
	{
		Adobe_AGM_Image/AGMIMG_override false put
		current_spot_alias{dup 4 get map_alias}{false}ifelse
		{
			false set_spot_alias
			/customcolor_tint AGMCORE_gget exch setsepcolorspace
			pop
			mapto_sep_imageormask
			true set_spot_alias
		}{
			//Adobe_AGM_Image/AGMIMG_&customcolorimage get exec
		}ifelse			
	}bdf
}def
/snap_to_device
{
	6 dict begin
	matrix currentmatrix
	dup 0 get 0 eq 1 index 3 get 0 eq and
	1 index 1 get 0 eq 2 index 2 get 0 eq and or exch pop
	{
		1 1 dtransform 0 gt exch 0 gt/AGMIMG_xSign? exch def/AGMIMG_ySign? exch def
		0 0 transform
		AGMIMG_ySign?{floor 0.1 sub}{ceiling 0.1 add}ifelse exch
		AGMIMG_xSign?{floor 0.1 sub}{ceiling 0.1 add}ifelse exch
		itransform/AGMIMG_llY exch def/AGMIMG_llX exch def
		1 1 transform
		AGMIMG_ySign?{ceiling 0.1 add}{floor 0.1 sub}ifelse exch
		AGMIMG_xSign?{ceiling 0.1 add}{floor 0.1 sub}ifelse exch
		itransform/AGMIMG_urY exch def/AGMIMG_urX exch def			
		[AGMIMG_urX AGMIMG_llX sub 0 0 AGMIMG_urY AGMIMG_llY sub AGMIMG_llX AGMIMG_llY]concat
	}{
	}ifelse
	end
}def
level2 not{
	/colorbuf
	{
		0 1 2 index length 1 sub{
			dup 2 index exch get 
			255 exch sub 
			2 index 
			3 1 roll 
			put
		}for
	}def
	/tint_image_to_color
	{
		begin
			Width Height BitsPerComponent ImageMatrix 
			/DataSource load
		end
		Adobe_AGM_Image begin
			/AGMIMG_mbuf 0 string def
			/AGMIMG_ybuf 0 string def
			/AGMIMG_kbuf 0 string def
			{
				colorbuf dup length AGMIMG_mbuf length ne
					{
					dup length dup dup
					/AGMIMG_mbuf exch string def
					/AGMIMG_ybuf exch string def
					/AGMIMG_kbuf exch string def
					}if
				dup AGMIMG_mbuf copy AGMIMG_ybuf copy AGMIMG_kbuf copy pop
			}
			addprocs
			{AGMIMG_mbuf}{AGMIMG_ybuf}{AGMIMG_kbuf}true 4 colorimage	
		end
	}def			
	/sep_imageormask_lev1
	{
		begin
			MappedCSA 0 get dup/DeviceRGB eq exch/DeviceCMYK eq or has_color not and{
				{
					255 mul round cvi GrayLookup exch get
				}currenttransfer addprocs settransfer
				currentdict imageormask
			}{
				/sep_colorspace_dict AGMCORE_gget/Components known{
					MappedCSA 0 get/DeviceCMYK eq{
						Components aload pop
					}{
						0 0 0 Components aload pop 1 exch sub
					}ifelse
					Adobe_AGM_Image/AGMIMG_k xddf 
					Adobe_AGM_Image/AGMIMG_y xddf 
					Adobe_AGM_Image/AGMIMG_m xddf 
					Adobe_AGM_Image/AGMIMG_c xddf 
					AGMIMG_y 0.0 eq AGMIMG_m 0.0 eq and AGMIMG_c 0.0 eq and{
						{AGMIMG_k mul 1 exch sub}currenttransfer addprocs settransfer
						currentdict imageormask
					}{
						currentcolortransfer
						{AGMIMG_k mul 1 exch sub}exch addprocs 4 1 roll
						{AGMIMG_y mul 1 exch sub}exch addprocs 4 1 roll
						{AGMIMG_m mul 1 exch sub}exch addprocs 4 1 roll
						{AGMIMG_c mul 1 exch sub}exch addprocs 4 1 roll
						setcolortransfer
						currentdict tint_image_to_color
					}ifelse
				}{
					MappedCSA 0 get/DeviceGray eq{
						{255 mul round cvi ColorLookup exch get 0 get}currenttransfer addprocs settransfer
						currentdict imageormask
					}{
						MappedCSA 0 get/DeviceCMYK eq{
							currentcolortransfer
							{255 mul round cvi ColorLookup exch get 3 get 1 exch sub}exch addprocs 4 1 roll
							{255 mul round cvi ColorLookup exch get 2 get 1 exch sub}exch addprocs 4 1 roll
							{255 mul round cvi ColorLookup exch get 1 get 1 exch sub}exch addprocs 4 1 roll
							{255 mul round cvi ColorLookup exch get 0 get 1 exch sub}exch addprocs 4 1 roll
							setcolortransfer 
							currentdict tint_image_to_color
						}{
							currentcolortransfer
							{pop 1}exch addprocs 4 1 roll
							{255 mul round cvi ColorLookup exch get 2 get}exch addprocs 4 1 roll
							{255 mul round cvi ColorLookup exch get 1 get}exch addprocs 4 1 roll
							{255 mul round cvi ColorLookup exch get 0 get}exch addprocs 4 1 roll
							setcolortransfer 
							currentdict tint_image_to_color
						}ifelse
					}ifelse
				}ifelse
			}ifelse
		end
	}def
	/sep_image_lev1_sep
	{
		begin
			/sep_colorspace_dict AGMCORE_gget/Components known{
				Components aload pop
				Adobe_AGM_Image/AGMIMG_k xddf 
				Adobe_AGM_Image/AGMIMG_y xddf 
				Adobe_AGM_Image/AGMIMG_m xddf 
				Adobe_AGM_Image/AGMIMG_c xddf 
				{AGMIMG_c mul 1 exch sub}
				{AGMIMG_m mul 1 exch sub}
				{AGMIMG_y mul 1 exch sub}
				{AGMIMG_k mul 1 exch sub}
			}{
				{255 mul round cvi ColorLookup exch get 0 get 1 exch sub}
				{255 mul round cvi ColorLookup exch get 1 get 1 exch sub}
				{255 mul round cvi ColorLookup exch get 2 get 1 exch sub}
				{255 mul round cvi ColorLookup exch get 3 get 1 exch sub}
			}ifelse
			AGMCORE_get_ink_data currenttransfer addprocs settransfer
			currentdict imageormask_sys
		end
	}def
	/indexed_imageormask_lev1
	{
		/indexed_colorspace_dict AGMCORE_gget begin
		begin
			currentdict
			MappedCSA 0 get dup/DeviceRGB eq exch/DeviceCMYK eq or has_color not and{
				{HiVal mul round cvi GrayLookup exch get HiVal div}currenttransfer addprocs settransfer
				imageormask
			}{
				MappedCSA 0 get/DeviceGray eq{
					{HiVal mul round cvi Lookup exch get HiVal div}currenttransfer addprocs settransfer
					imageormask
				}{
					MappedCSA 0 get/DeviceCMYK eq{
						currentcolortransfer
						{4 mul HiVal mul round cvi 3 add Lookup exch get HiVal div 1 exch sub}exch addprocs 4 1 roll
						{4 mul HiVal mul round cvi 2 add Lookup exch get HiVal div 1 exch sub}exch addprocs 4 1 roll
						{4 mul HiVal mul round cvi 1 add Lookup exch get HiVal div 1 exch sub}exch addprocs 4 1 roll
						{4 mul HiVal mul round cvi		 Lookup exch get HiVal div 1 exch sub}exch addprocs 4 1 roll
						setcolortransfer 
						tint_image_to_color
					}{
						currentcolortransfer
						{pop 1}exch addprocs 4 1 roll
						{3 mul HiVal mul round cvi 2 add Lookup exch get HiVal div}exch addprocs 4 1 roll
						{3 mul HiVal mul round cvi 1 add Lookup exch get HiVal div}exch addprocs 4 1 roll
						{3 mul HiVal mul round cvi 		Lookup exch get HiVal div}exch addprocs 4 1 roll
						setcolortransfer 
						tint_image_to_color
					}ifelse
				}ifelse
			}ifelse
		end end
	}def
	/indexed_image_lev1_sep
	{
		/indexed_colorspace_dict AGMCORE_gget begin
		begin
			{4 mul HiVal mul round cvi		 Lookup exch get HiVal div 1 exch sub}
			{4 mul HiVal mul round cvi 1 add Lookup exch get HiVal div 1 exch sub}
			{4 mul HiVal mul round cvi 2 add Lookup exch get HiVal div 1 exch sub}
			{4 mul HiVal mul round cvi 3 add Lookup exch get HiVal div 1 exch sub}
			AGMCORE_get_ink_data currenttransfer addprocs settransfer
			currentdict imageormask_sys
		end end
	}def
}if
end
systemdict/setpacking known
{setpacking}if
%%EndResource
currentdict Adobe_AGM_Utils eq {end} if
%%EndProlog
%%BeginSetup
Adobe_AGM_Utils begin
2 2010 Adobe_AGM_Core/ds gx
Adobe_CoolType_Core/ds get exec
Adobe_AGM_Image/ds gx
currentdict Adobe_AGM_Utils eq {end} if
%%EndSetup
%%Page: 1 1
%%EndPageComments
%%BeginPageSetup
%ADOBeginClientInjection: PageSetup Start "AI11EPS"
%AI12_RMC_Transparency: Balance=75 RasterRes=300 GradRes=150 Text=0 Stroke=1 Clip=1 OP=0
%ADOEndClientInjection: PageSetup Start "AI11EPS"
Adobe_AGM_Utils begin
Adobe_AGM_Core/ps gx
Adobe_AGM_Utils/capture_cpd gx
Adobe_CoolType_Core/ps get exec
Adobe_AGM_Image/ps gx
%ADOBeginClientInjection: PageSetup End "AI11EPS"
/currentdistillerparams where{pop currentdistillerparams /CoreDistVersion get 5000 lt} {true} ifelse{ userdict /AI11_PDFMark5 /cleartomark load putuserdict /AI11_ReadMetadata_PDFMark5 {flushfile cleartomark } bind put}{ userdict /AI11_PDFMark5 /pdfmark load putuserdict /AI11_ReadMetadata_PDFMark5 {/PUT pdfmark} bind put } ifelse[/NamespacePush AI11_PDFMark5[/_objdef {ai_metadata_stream_123} /type /stream /OBJ AI11_PDFMark5[{ai_metadata_stream_123}currentfile 0 (%  &&end XMP packet marker&&)/SubFileDecode filter AI11_ReadMetadata_PDFMark5<?xpacket begin="п»ї" id="W5M0MpCehiHzreSzNTczkc9d"?>
<x:xmpmeta xmlns:x="adobe:ns:meta/" x:xmptk="Adobe XMP Core 5.3-c011 66.145661, 2012/02/06-14:56:27        ">
   <rdf:RDF xmlns:rdf="http://www.w3.org/1999/02/22-rdf-syntax-ns#">
      <rdf:Description rdf:about=""
            xmlns:dc="http://purl.org/dc/elements/1.1/">
         <dc:format>application/postscript</dc:format>
         <dc:title>
            <rdf:Alt>
               <rdf:li xml:lang="x-default">Car parking set</rdf:li>
            </rdf:Alt>
         </dc:title>
         <dc:description>
            <rdf:Alt>
               <rdf:li xml:lang="x-default">Car parking set. Modern public and city transports collection. Can be used for topics like garage, vehicle area, automobile</rdf:li>
            </rdf:Alt>
         </dc:description>
         <dc:subject>
            <rdf:Bag>
               <rdf:li>card</rdf:li>
               <rdf:li>poster</rdf:li>
               <rdf:li>leaflet</rdf:li>
               <rdf:li>brochure</rdf:li>
               <rdf:li>sign</rdf:li>
               <rdf:li>vector</rdf:li>
               <rdf:li>illustration</rdf:li>
               <rdf:li>creative</rdf:li>
               <rdf:li>layout</rdf:li>
               <rdf:li>design</rdf:li>
               <rdf:li>isolated</rdf:li>
               <rdf:li>realistic</rdf:li>
               <rdf:li>style</rdf:li>
               <rdf:li>decorative</rdf:li>
               <rdf:li>label</rdf:li>
               <rdf:li>banner</rdf:li>
               <rdf:li>element</rdf:li>
               <rdf:li>set</rdf:li>
               <rdf:li>collection</rdf:li>
               <rdf:li>transportation</rdf:li>
               <rdf:li>car</rdf:li>
               <rdf:li>lot</rdf:li>
               <rdf:li>travel</rdf:li>
               <rdf:li>parking</rdf:li>
               <rdf:li>public</rdf:li>
               <rdf:li>motor</rdf:li>
               <rdf:li>park</rdf:li>
               <rdf:li>outdoor</rdf:li>
               <rdf:li>industry</rdf:li>
               <rdf:li>city</rdf:li>
               <rdf:li>garage</rdf:li>
               <rdf:li>road</rdf:li>
               <rdf:li>street</rdf:li>
               <rdf:li>vehicle</rdf:li>
               <rdf:li>area</rdf:li>
               <rdf:li>zone</rdf:li>
               <rdf:li>space</rdf:li>
               <rdf:li>auto</rdf:li>
               <rdf:li>station</rdf:li>
               <rdf:li>underground</rdf:li>
               <rdf:li>top</rdf:li>
               <rdf:li>carpark</rdf:li>
               <rdf:li>business</rdf:li>
               <rdf:li>urban</rdf:li>
               <rdf:li>automobile</rdf:li>
               <rdf:li>transport</rdf:li>
               <rdf:li>automotive</rdf:li>
               <rdf:li>modern</rdf:li>
            </rdf:Bag>
         </dc:subject>
      </rdf:Description>
      <rdf:Description rdf:about=""
            xmlns:xmp="http://ns.adobe.com/xap/1.0/"
            xmlns:xmpGImg="http://ns.adobe.com/xap/1.0/g/img/">
         <xmp:CreatorTool>Adobe Illustrator CS6 (Windows)</xmp:CreatorTool>
         <xmp:CreateDate>2019-04-01T00:42:05+03:00</xmp:CreateDate>
         <xmp:ModifyDate>2019-04-01T00:42:05+03:00</xmp:ModifyDate>
         <xmp:MetadataDate>2019-04-01T00:42:05+03:00</xmp:MetadataDate>
         <xmp:Thumbnails>
            <rdf:Alt>
               <rdf:li rdf:parseType="Resource">
                  <xmpGImg:width>256</xmpGImg:width>
                  <xmpGImg:height>184</xmpGImg:height>
                  <xmpGImg:format>JPEG</xmpGImg:format>
                  <xmpGImg:image>/9j/4AAQSkZJRgABAgEC0ALQAAD/7QAsUGhvdG9zaG9wIDMuMAA4QklNA+0AAAAAABAC0AAAAAEA&#xA;AQLQAAAAAQAB/+4ADkFkb2JlAGTAAAAAAf/bAIQABgQEBAUEBgUFBgkGBQYJCwgGBggLDAoKCwoK&#xA;DBAMDAwMDAwQDA4PEA8ODBMTFBQTExwbGxscHx8fHx8fHx8fHwEHBwcNDA0YEBAYGhURFRofHx8f&#xA;Hx8fHx8fHx8fHx8fHx8fHx8fHx8fHx8fHx8fHx8fHx8fHx8fHx8fHx8fHx8f/8AAEQgAuAEAAwER&#xA;AAIRAQMRAf/EAaIAAAAHAQEBAQEAAAAAAAAAAAQFAwIGAQAHCAkKCwEAAgIDAQEBAQEAAAAAAAAA&#xA;AQACAwQFBgcICQoLEAACAQMDAgQCBgcDBAIGAnMBAgMRBAAFIRIxQVEGE2EicYEUMpGhBxWxQiPB&#xA;UtHhMxZi8CRygvElQzRTkqKyY3PCNUQnk6OzNhdUZHTD0uIIJoMJChgZhJRFRqS0VtNVKBry4/PE&#xA;1OT0ZXWFlaW1xdXl9WZ2hpamtsbW5vY3R1dnd4eXp7fH1+f3OEhYaHiImKi4yNjo+Ck5SVlpeYmZ&#xA;qbnJ2en5KjpKWmp6ipqqusra6voRAAICAQIDBQUEBQYECAMDbQEAAhEDBCESMUEFURNhIgZxgZEy&#xA;obHwFMHR4SNCFVJicvEzJDRDghaSUyWiY7LCB3PSNeJEgxdUkwgJChgZJjZFGidkdFU38qOzwygp&#xA;0+PzhJSktMTU5PRldYWVpbXF1eX1RlZmdoaWprbG1ub2R1dnd4eXp7fH1+f3OEhYaHiImKi4yNjo&#xA;+DlJWWl5iZmpucnZ6fkqOkpaanqKmqq6ytrq+v/aAAwDAQACEQMRAD8A9U4q7FXYq7FXYq7FXYq7&#xA;FXYq7FXYq7FXYq7FXYq7FXYq7FXYq7FXYq7FXYq7FXYq7FXYq7FXYq7FXYq7FXYq7FXYq7FXYq7F&#xA;XYq7FXYq7FXYq7FXYq7FXYq7FXYq7FXYq7FXYq7FXYq7FXYq7FXYq7FXYq7FXYq7FXYq7FXYq7FX&#xA;YqoXl9Z2cXq3UyQx9mcgVPWg8T8sIFoMgObFZ/zg/Le3untZtbjW4iNJI/TnJU+BpHkvDkmO4sJn&#xA;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&#xA;XYq7FX//2Q==</xmpGImg:image>
               </rdf:li>
            </rdf:Alt>
         </xmp:Thumbnails>
      </rdf:Description>
      <rdf:Description rdf:about=""
            xmlns:xmpMM="http://ns.adobe.com/xap/1.0/mm/"
            xmlns:stRef="http://ns.adobe.com/xap/1.0/sType/ResourceRef#"
            xmlns:stEvt="http://ns.adobe.com/xap/1.0/sType/ResourceEvent#">
         <xmpMM:OriginalDocumentID>uuid:9E3E5C9A8C81DB118734DB58FDDE4BA7</xmpMM:OriginalDocumentID>
         <xmpMM:DocumentID>xmp.did:DD7214C4FD53E911B1FFE95781F30BEA</xmpMM:DocumentID>
         <xmpMM:InstanceID>xmp.iid:DD7214C4FD53E911B1FFE95781F30BEA</xmpMM:InstanceID>
         <xmpMM:RenditionClass>proof:pdf</xmpMM:RenditionClass>
         <xmpMM:DerivedFrom rdf:parseType="Resource">
            <stRef:instanceID>xmp.iid:3dbaefba-108f-bb48-bf03-0550ca19e475</stRef:instanceID>
            <stRef:documentID>xmp.did:ce5071b5-9cbe-844f-a62b-a4d91eb29a95</stRef:documentID>
            <stRef:originalDocumentID>uuid:9E3E5C9A8C81DB118734DB58FDDE4BA7</stRef:originalDocumentID>
            <stRef:renditionClass>proof:pdf</stRef:renditionClass>
         </xmpMM:DerivedFrom>
         <xmpMM:History>
            <rdf:Seq>
               <rdf:li rdf:parseType="Resource">
                  <stEvt:action>saved</stEvt:action>
                  <stEvt:instanceID>xmp.iid:f8d4ee09-b11a-aa47-8066-1db57266c787</stEvt:instanceID>
                  <stEvt:when>2019-02-07T20:01:33+03:00</stEvt:when>
                  <stEvt:softwareAgent>Adobe Illustrator CC 2017 (Windows)</stEvt:softwareAgent>
                  <stEvt:changed>/</stEvt:changed>
               </rdf:li>
               <rdf:li rdf:parseType="Resource">
                  <stEvt:action>saved</stEvt:action>
                  <stEvt:instanceID>xmp.iid:fc1583f1-1fbe-e445-a3ec-c970a896895c</stEvt:instanceID>
                  <stEvt:when>2019-02-11T17:18:46+03:00</stEvt:when>
                  <stEvt:softwareAgent>Adobe Illustrator CC 2017 (Windows)</stEvt:softwareAgent>
                  <stEvt:changed>/</stEvt:changed>
               </rdf:li>
               <rdf:li rdf:parseType="Resource">
                  <stEvt:action>converted</stEvt:action>
                  <stEvt:parameters>from application/postscript to application/vnd.adobe.illustrator</stEvt:parameters>
               </rdf:li>
               <rdf:li rdf:parseType="Resource">
                  <stEvt:action>saved</stEvt:action>
                  <stEvt:instanceID>xmp.iid:dd5b54ff-0ddb-2f4f-bedb-44177957e4fb</stEvt:instanceID>
                  <stEvt:when>2019-02-11T17:27:08+03:00</stEvt:when>
                  <stEvt:softwareAgent>Adobe Illustrator CC 2017 (Windows)</stEvt:softwareAgent>
                  <stEvt:changed>/</stEvt:changed>
               </rdf:li>
               <rdf:li rdf:parseType="Resource">
                  <stEvt:action>saved</stEvt:action>
                  <stEvt:instanceID>xmp.iid:1d017901-ebc5-344c-bfeb-d275d2c25764</stEvt:instanceID>
                  <stEvt:when>2019-02-11T17:27:24+03:00</stEvt:when>
                  <stEvt:softwareAgent>Adobe Illustrator CC 2017 (Windows)</stEvt:softwareAgent>
                  <stEvt:changed>/</stEvt:changed>
               </rdf:li>
               <rdf:li rdf:parseType="Resource">
                  <stEvt:action>converted</stEvt:action>
                  <stEvt:parameters>from application/postscript to application/vnd.adobe.illustrator</stEvt:parameters>
               </rdf:li>
               <rdf:li rdf:parseType="Resource">
                  <stEvt:action>saved</stEvt:action>
                  <stEvt:instanceID>xmp.iid:a5cd7118-c478-0a42-96ed-5cdfcf70a997</stEvt:instanceID>
                  <stEvt:when>2019-02-11T17:28:21+03:00</stEvt:when>
                  <stEvt:softwareAgent>Adobe Illustrator CC 2017 (Windows)</stEvt:softwareAgent>
                  <stEvt:changed>/</stEvt:changed>
               </rdf:li>
               <rdf:li rdf:parseType="Resource">
                  <stEvt:action>converted</stEvt:action>
                  <stEvt:parameters>from application/postscript to application/vnd.adobe.illustrator</stEvt:parameters>
               </rdf:li>
               <rdf:li rdf:parseType="Resource">
                  <stEvt:action>saved</stEvt:action>
                  <stEvt:instanceID>xmp.iid:ce5071b5-9cbe-844f-a62b-a4d91eb29a95</stEvt:instanceID>
                  <stEvt:when>2019-02-11T17:30:05+03:00</stEvt:when>
                  <stEvt:softwareAgent>Adobe Illustrator CC 2017 (Windows)</stEvt:softwareAgent>
                  <stEvt:changed>/</stEvt:changed>
               </rdf:li>
               <rdf:li rdf:parseType="Resource">
                  <stEvt:action>converted</stEvt:action>
                  <stEvt:parameters>from application/postscript to application/vnd.adobe.illustrator</stEvt:parameters>
               </rdf:li>
               <rdf:li rdf:parseType="Resource">
                  <stEvt:action>saved</stEvt:action>
                  <stEvt:instanceID>xmp.iid:3dbaefba-108f-bb48-bf03-0550ca19e475</stEvt:instanceID>
                  <stEvt:when>2019-03-05T20:21:16+05:00</stEvt:when>
                  <stEvt:softwareAgent>Adobe Bridge CC 2018 (Windows)</stEvt:softwareAgent>
                  <stEvt:changed>/metadata</stEvt:changed>
               </rdf:li>
               <rdf:li rdf:parseType="Resource">
                  <stEvt:action>converted</stEvt:action>
                  <stEvt:parameters>from application/postscript to application/vnd.adobe.illustrator</stEvt:parameters>
               </rdf:li>
               <rdf:li rdf:parseType="Resource">
                  <stEvt:action>saved</stEvt:action>
                  <stEvt:instanceID>xmp.iid:DD7214C4FD53E911B1FFE95781F30BEA</stEvt:instanceID>
                  <stEvt:when>2019-04-01T00:42:05+03:00</stEvt:when>
                  <stEvt:softwareAgent>Adobe Illustrator CS6 (Windows)</stEvt:softwareAgent>
                  <stEvt:changed>/</stEvt:changed>
               </rdf:li>
            </rdf:Seq>
         </xmpMM:History>
      </rdf:Description>
      <rdf:Description rdf:about=""
            xmlns:illustrator="http://ns.adobe.com/illustrator/1.0/">
         <illustrator:StartupProfile>Basic RGB</illustrator:StartupProfile>
      </rdf:Description>
      <rdf:Description rdf:about=""
            xmlns:xmpTPg="http://ns.adobe.com/xap/1.0/t/pg/"
            xmlns:stDim="http://ns.adobe.com/xap/1.0/sType/Dimensions#"
            xmlns:xmpG="http://ns.adobe.com/xap/1.0/g/">
         <xmpTPg:NPages>1</xmpTPg:NPages>
         <xmpTPg:HasVisibleTransparency>True</xmpTPg:HasVisibleTransparency>
         <xmpTPg:HasVisibleOverprint>False</xmpTPg:HasVisibleOverprint>
         <xmpTPg:MaxPageSize rdf:parseType="Resource">
            <stDim:w>1130.000000</stDim:w>
            <stDim:h>800.000000</stDim:h>
            <stDim:unit>Pixels</stDim:unit>
         </xmpTPg:MaxPageSize>
         <xmpTPg:PlateNames>
            <rdf:Seq>
               <rdf:li>Cyan</rdf:li>
               <rdf:li>Magenta</rdf:li>
               <rdf:li>Yellow</rdf:li>
               <rdf:li>Black</rdf:li>
            </rdf:Seq>
         </xmpTPg:PlateNames>
         <xmpTPg:SwatchGroups>
            <rdf:Seq>
               <rdf:li rdf:parseType="Resource">
                  <xmpG:groupName>Р“СЂСѓРїРїР° РѕР±СЂР°Р·С†РѕРІ РїРѕ СѓРјРѕР»С‡Р°РЅРёСЋ</xmpG:groupName>
                  <xmpG:groupType>0</xmpG:groupType>
                  <xmpG:Colorants>
                     <rdf:Seq>
                        <rdf:li rdf:parseType="Resource">
                           <xmpG:swatchName>White</xmpG:swatchName>
                           <xmpG:mode>RGB</xmpG:mode>
                           <xmpG:type>PROCESS</xmpG:type>
                           <xmpG:red>255</xmpG:red>
                           <xmpG:green>255</xmpG:green>
                           <xmpG:blue>255</xmpG:blue>
                        </rdf:li>
                        <rdf:li rdf:parseType="Resource">
                           <xmpG:swatchName>Black</xmpG:swatchName>
                           <xmpG:mode>RGB</xmpG:mode>
                           <xmpG:type>PROCESS</xmpG:type>
                           <xmpG:red>0</xmpG:red>
                           <xmpG:green>0</xmpG:green>
                           <xmpG:blue>0</xmpG:blue>
                        </rdf:li>
                        <rdf:li rdf:parseType="Resource">
                           <xmpG:swatchName>RGB Red</xmpG:swatchName>
                           <xmpG:mode>RGB</xmpG:mode>
                           <xmpG:type>PROCESS</xmpG:type>
                           <xmpG:red>255</xmpG:red>
                           <xmpG:green>0</xmpG:green>
                           <xmpG:blue>0</xmpG:blue>
                        </rdf:li>
                        <rdf:li rdf:parseType="Resource">
                           <xmpG:swatchName>R=0 G=0 B=0</xmpG:swatchName>
                           <xmpG:mode>RGB</xmpG:mode>
                           <xmpG:type>PROCESS</xmpG:type>
                           <xmpG:red>0</xmpG:red>
                           <xmpG:green>0</xmpG:green>
                           <xmpG:blue>0</xmpG:blue>
                        </rdf:li>
                     </rdf:Seq>
                  </xmpG:Colorants>
               </rdf:li>
            </rdf:Seq>
         </xmpTPg:SwatchGroups>
      </rdf:Description>
      <rdf:Description rdf:about=""
            xmlns:pdf="http://ns.adobe.com/pdf/1.3/">
         <pdf:Producer>Adobe PDF library 10.01</pdf:Producer>
      </rdf:Description>
   </rdf:RDF>
</x:xmpmeta>
                                                                                                    
                                                                                                    
                                                                                                    
                                                                                                    
                                                                                                    
                                                                                                    
                                                                                                    
                                                                                                    
                                                                                                    
                                                                                                    
                                                                                                    
                                                                                                    
                                                                                                    
                                                                                                    
                                                                                                    
                                                                                                    
                                                                                                    
                                                                                                    
                                                                                                    
                                                                                                    
                           
<?xpacket end="w"?>%  &&end XMP packet marker&&[{ai_metadata_stream_123}<</Type /Metadata /Subtype /XML>>/PUT AI11_PDFMark5[/Document1 dict begin /Metadata {ai_metadata_stream_123} defcurrentdict end /BDC AI11_PDFMark5
%ADOEndClientInjection: PageSetup End "AI11EPS"
%%EndPageSetup
1 -1 scale 0 -800 translate
pgsv
[1 0 0 1 0 0 ]ct
gsave
np
gsave
0 0 mo
0 800 li
1130 800 li
1130 0 li
cp
clp
1130 800 mo
0 800 li
0 0 li
1130 0 li
1130 800 li
false sop
/0 
[/DeviceRGB] /CSA add_res
1 1 1 rgb
f
307.915 192.017 mo
306.257 194.888 303.572 194.116 300.099 192.11 cv
296.626 190.105 290.702 184.648 292.359 181.778 cv
294.017 178.907 301.154 181.184 304.627 183.188 cv
308.1 185.194 309.572 189.146 307.915 192.017 cv
.262745 .2 .317647 rgb
f
168.499 191.468 mo
169.635 194.582 172.414 194.286 176.181 192.911 cv
179.948 191.536 186.726 187.185 185.589 184.071 cv
184.453 180.958 177.03 181.966 173.263 183.341 cv
169.495 184.716 167.362 188.354 168.499 191.468 cv
f
302.284 191.083 mo
299.661 191.083 297.536 189.414 297.536 187.356 cv
297.536 185.297 299.661 183.628 302.284 183.628 cv
304.906 183.628 307.032 185.297 307.032 187.356 cv
307.032 189.414 304.906 191.083 302.284 191.083 cv
.384314 .321569 .45098 rgb
f
174.564 191.563 mo
172.074 191.563 170.056 190.192 170.056 188.501 cv
170.056 186.81 172.074 185.438 174.564 185.438 cv
177.055 185.438 179.073 186.81 179.073 188.501 cv
179.073 190.192 177.055 191.563 174.564 191.563 cv
f
295.355 138.801 mo
295.355 143.784 295.154 149.035 295.154 154.487 cv
295.154 358.669 li
295.154 365.551 290.283 371.271 283.803 372.612 cv
282.887 372.791 281.904 372.902 280.92 372.902 cv
197.666 372.902 li
196.415 372.902 195.208 372.746 194.068 372.411 cv
187.946 370.847 183.433 365.283 183.433 358.669 cv
183.433 154.487 li
183.433 139.427 182.226 125.127 188.08 114.714 cv
188.08 114.714 202.671 100.124 221.976 98.7383 cv
227.048 98.3807 232.791 98.336 239.293 98.6265 cv
244.857 98.6265 249.884 98.8277 254.42 99.2076 cv
273.815 100.838 284.093 105.888 289.479 113.239 cv
294.528 120.055 295.355 128.836 295.355 138.801 cv
.262745 .2 .317647 rgb
f
275.965 143.558 mo
275.965 147.962 275.805 152.63 275.805 157.44 cv
275.805 157.44 275.692 161.732 275.522 169.045 cv
275.513 169.261 li
275.315 176.744 275.023 187.332 274.666 199.699 cv
274.666 199.784 li
272.962 256.489 269.612 350.089 265.725 350.089 cv
206.826 350.089 li
202.939 350.089 199.598 256.678 197.885 199.953 cv
197.885 199.821 li
197.527 187.492 197.245 176.894 197.038 169.393 cv
197.038 169.224 197.028 169.054 197.028 168.885 cv
196.85 161.666 196.746 157.44 196.746 157.44 cv
196.746 130.221 193.198 105.684 236.275 108.169 cv
272.718 108.169 275.965 123.115 275.965 143.558 cv
.415686 .376471 .486275 rgb
f
197.322 179.773 mo
199.314 180.602 201.284 181.541 203.194 182.582 cv
201.856 134.364 196.822 109.34 233.506 108.058 cv
191.005 106.718 196.002 131.823 197.322 179.773 cv
.568627 .52549 .658824 rgb
f
197.999 203.466 mo
199.699 260.329 203.122 352.151 206.966 352.151 cv
265.866 352.151 li
269.709 352.151 272.853 260.329 274.553 203.466 cv
197.999 203.466 li
.435294 .372549 .509804 rgb
f
206.558 348.011 mo
201.198 213.37 li
203.24 213.326 li
208.6 347.967 li
206.558 348.011 li
cp
.505882 .462745 .576471 rgb
f
213.669 348.004 mo
209.721 213.365 li
211.763 213.333 li
215.711 347.972 li
213.669 348.004 li
cp
f
220.78 347.998 mo
218.243 213.36 li
220.285 213.339 li
222.822 347.978 li
220.78 347.998 li
cp
f
227.891 347.991 mo
226.765 213.355 li
228.807 213.346 li
229.933 347.982 li
227.891 347.991 li
cp
f
237.044 347.988 mo
235.001 347.985 li
235.288 213.35 li
237.33 213.353 li
237.044 347.988 li
f
244.156 347.992 mo
242.114 347.979 li
243.811 213.345 li
245.853 213.359 li
244.156 347.992 li
f
251.267 347.996 mo
249.224 347.972 li
252.333 213.34 li
254.376 213.365 li
251.267 347.996 li
f
258.377 348.002 mo
256.335 347.965 li
260.855 213.335 li
262.897 213.372 li
258.377 348.002 li
f
265.487 348.006 mo
263.448 347.959 li
269.379 213.33 li
271.419 213.378 li
265.487 348.006 li
f
290.964 244.426 mo
290.964 185.438 li
283.756 195.599 279.171 218.956 277.918 247.518 cv
290.964 244.426 li
0 0 0 rgb
f
279.934 304.007 mo
282.171 321.292 285.922 334.886 290.964 341.993 cv
290.964 304.007 li
279.934 304.007 li
f
290.964 258.881 mo
277.599 258.881 li
277.579 260.478 277.558 262.075 277.558 263.695 cv
277.558 272.625 277.862 281.228 278.451 289.297 cv
290.964 289.297 li
290.964 258.881 li
f
188.855 245.826 mo
187.244 186.86 li
192.512 196.88 196.325 220.143 197.973 248.669 cv
188.855 245.826 li
cp
f
198.121 305.176 mo
197.044 322.498 194.818 336.156 191.521 343.356 cv
190.483 305.385 li
198.121 305.176 li
cp
f
189.25 260.276 mo
198.504 260.023 li
198.562 261.619 198.621 263.214 198.665 264.833 cv
198.909 273.761 198.933 282.366 198.746 290.444 cv
190.082 290.681 li
189.25 260.276 li
cp
f
276.52 367.04 mo
276.288 362.251 271.492 357.86 266.529 354.353 cv
207.118 354.353 li
202.166 357.863 200.183 362.253 199.952 367.04 cv
276.52 367.04 li
f
221.976 98.7383 mo
218.088 103.766 212.435 107.989 205.531 110.491 cv
201.174 112.078 194.953 113.637 188.07 114.731 cv
192.941 106.084 202.671 100.124 221.976 98.7383 cv
cp
.556863 .709804 .74902 rgb
f
289.479 113.239 mo
281.971 112.346 275.111 110.961 270.374 109.419 cv
263.872 107.296 258.42 103.654 254.42 99.2076 cv
273.815 100.838 284.093 105.888 289.479 113.239 cv
f
194.068 372.411 mo
187.946 370.847 183.433 365.283 183.433 358.669 cv
183.433 350 li
189.644 354.267 193.934 362.691 194.068 372.411 cv
cp
.619608 .0392157 .0392157 rgb
f
295.154 348.011 mo
295.154 358.669 li
295.154 365.551 290.283 371.271 283.803 372.612 cv
283.803 372.388 283.781 372.165 283.781 371.941 cv
283.557 361.373 288.227 352.167 295.154 348.011 cv
f
235.53 151.09 mo
221.319 150.725 205.261 150.574 205.261 142.047 cv
205.261 133.52 221.313 119.991 235.53 117.403 cv
235.53 151.09 li
.513725 .470588 .588235 rgb
f
239.293 98.6265 mo
239.249 98.6246 239.206 98.6227 239.163 98.6208 cv
239.206 98.6227 239.249 98.6246 239.293 98.6265 cv
239.154 98.6204 mo
238.132 98.5754 237.129 98.5387 236.145 98.5103 cv
237.131 98.5387 238.126 98.5751 239.154 98.6204 cv
236.12 98.5096 mo
236.107 98.5092 236.095 98.5088 236.082 98.5085 cv
236.095 98.5088 236.108 98.5092 236.12 98.5096 cv
.886274 .870588 .909804 rgb
f
280.92 372.902 mo
235.53 372.902 li
235.53 367.04 li
276.52 367.04 li
276.288 362.251 271.492 357.86 266.529 354.353 cv
235.53 354.353 li
235.53 352.151 li
265.866 352.151 li
269.662 352.151 272.777 262.531 274.491 205.538 cv
274.551 203.582 274.609 201.663 274.666 199.784 cv
274.666 199.699 li
274.666 199.699 li
274.723 197.756 274.778 195.856 274.83 194.005 cv
275.101 184.48 275.328 176.255 275.492 170.034 cv
275.507 169.531 275.516 169.2 275.521 169.088 cv
275.522 169.045 li
275.522 169.045 li
275.522 169.045 li
275.522 169.045 li
275.692 161.732 275.805 157.44 275.805 157.44 cv
275.805 152.63 275.965 147.962 275.965 143.558 cv
275.965 123.115 272.718 108.169 236.275 108.169 cv
236.026 108.155 235.777 108.141 235.53 108.129 cv
235.53 98.4936 li
235.714 98.4983 235.898 98.5032 236.082 98.5085 cv
236.095 98.5088 236.107 98.5092 236.12 98.5096 cv
236.128 98.5098 236.137 98.51 236.145 98.5103 cv
237.129 98.5387 238.132 98.5754 239.154 98.6204 cv
239.157 98.6205 239.16 98.6206 239.163 98.6208 cv
239.206 98.6227 239.249 98.6246 239.293 98.6265 cv
239.293 98.6265 li
244.857 98.6265 249.884 98.8277 254.42 99.2076 cv
254.42 99.2076 li
258.42 103.654 263.872 107.296 270.374 109.419 cv
275.111 110.961 281.971 112.346 289.479 113.239 cv
289.479 113.239 li
294.528 120.055 295.355 128.836 295.355 138.801 cv
295.355 143.784 295.154 149.035 295.154 154.487 cv
295.154 180.433 li
295.154 188.189 li
295.154 348.011 li
288.227 352.167 283.557 361.373 283.781 371.941 cv
283.781 372.165 283.803 372.388 283.803 372.612 cv
282.887 372.791 281.904 372.902 280.92 372.902 cv
279.934 304.007 mo
282.171 321.292 285.922 334.886 290.964 341.993 cv
290.964 304.007 li
279.934 304.007 li
277.599 258.881 mo
277.579 260.478 277.558 262.075 277.558 263.695 cv
277.558 272.625 277.862 281.228 278.451 289.297 cv
290.964 289.297 li
290.964 258.881 li
277.599 258.881 li
290.964 185.438 mo
283.756 195.599 279.171 218.956 277.918 247.518 cv
290.964 244.426 li
290.964 185.438 li
.364706 .301961 .423529 rgb
f
274.491 205.538 mo
274.512 204.841 274.533 204.153 274.553 203.466 cv
235.53 203.466 li
235.53 198.127 li
238.16 198.082 240.833 198.056 243.514 198.056 cv
254.419 198.056 265.494 198.477 274.666 199.699 cv
274.666 199.784 li
274.609 201.663 274.551 203.582 274.491 205.538 cv
274.83 194.005 mo
274.905 191.307 274.975 188.712 275.042 186.24 cv
275.042 186.24 li
275.042 186.24 li
275.219 180.025 275.371 174.572 275.489 170.129 cv
275.49 170.096 275.491 170.065 275.492 170.034 cv
275.328 176.255 275.101 184.48 274.83 194.005 cv
275.522 169.045 mo
263.02 165.439 249.943 163.639 236.871 163.639 cv
236.424 163.639 235.977 163.642 235.53 163.646 cv
235.53 151.09 li
237.088 151.13 238.623 151.172 240.112 151.228 cv
242.107 151.304 244.064 151.359 245.961 151.359 cv
258.483 151.359 268.275 148.95 267.436 134.098 cv
266.902 124.654 255.203 116.967 240.112 116.967 cv
238.623 116.967 237.087 117.12 235.53 117.403 cv
235.53 108.129 li
235.777 108.141 236.026 108.155 236.275 108.169 cv
272.718 108.169 275.965 123.115 275.965 143.558 cv
275.965 147.962 275.805 152.63 275.805 157.44 cv
275.805 157.44 275.692 161.732 275.522 169.045 cv
275.522 169.045 li
.470588 .427451 .545098 rgb
f
265.866 352.151 mo
235.53 352.151 li
235.53 347.986 li
237.044 347.988 li
237.33 213.353 li
235.53 213.35 li
235.53 203.466 li
274.553 203.466 li
274.533 204.153 274.512 204.841 274.491 205.538 cv
272.777 262.531 269.662 352.151 265.866 352.151 cv
269.379 213.33 mo
263.448 347.959 li
265.487 348.006 li
271.419 213.378 li
269.379 213.33 li
260.855 213.335 mo
256.335 347.965 li
258.377 348.002 li
262.897 213.372 li
260.855 213.335 li
252.333 213.34 mo
249.224 347.972 li
251.267 347.996 li
254.376 213.365 li
252.333 213.34 li
243.811 213.345 mo
242.114 347.979 li
244.156 347.992 li
245.853 213.359 li
243.811 213.345 li
.486274 .423529 .560784 rgb
f
237.044 347.988 mo
235.53 347.986 li
235.53 213.35 li
237.33 213.353 li
237.044 347.988 li
.537255 .486274 .607843 rgb
f
244.156 347.992 mo
242.114 347.979 li
243.811 213.345 li
245.853 213.359 li
244.156 347.992 li
f
251.267 347.996 mo
249.224 347.972 li
252.333 213.34 li
254.376 213.365 li
251.267 347.996 li
f
258.377 348.002 mo
256.335 347.965 li
260.855 213.335 li
262.897 213.372 li
258.377 348.002 li
f
265.487 348.006 mo
263.448 347.959 li
269.379 213.33 li
271.419 213.378 li
265.487 348.006 li
f
277.918 247.518 mo
279.171 218.956 283.756 195.599 290.964 185.438 cv
290.964 244.426 li
277.918 247.518 li
.176471 .160784 .2 rgb
f
290.964 341.993 mo
285.922 334.886 282.171 321.292 279.934 304.007 cv
290.964 304.007 li
290.964 341.993 li
f
290.964 289.297 mo
278.451 289.297 li
277.862 281.228 277.558 272.625 277.558 263.695 cv
277.558 262.075 277.579 260.478 277.599 258.881 cv
290.964 258.881 li
290.964 289.297 li
f
276.52 367.04 mo
235.53 367.04 li
235.53 354.353 li
266.529 354.353 li
271.492 357.86 276.288 362.251 276.52 367.04 cv
f
289.479 113.239 mo
281.971 112.346 275.111 110.961 270.374 109.419 cv
263.872 107.296 258.42 103.654 254.42 99.2076 cv
273.815 100.838 284.093 105.888 289.479 113.239 cv
.572549 .662745 .729412 rgb
f
283.803 372.612 mo
283.803 372.612 li
283.803 372.388 283.781 372.165 283.781 371.941 cv
283.557 361.373 288.227 352.167 295.154 348.011 cv
295.154 348.011 li
295.154 358.669 li
295.154 365.551 290.283 371.271 283.803 372.612 cv
.615686 .188235 .227451 rgb
f
245.961 151.359 mo
244.064 151.359 242.107 151.304 240.112 151.228 cv
238.623 151.172 237.088 151.13 235.53 151.09 cv
235.53 117.403 li
237.087 117.12 238.623 116.967 240.112 116.967 cv
255.203 116.967 266.902 124.654 267.436 134.098 cv
268.275 148.95 258.483 151.359 245.961 151.359 cv
.541176 .494118 .615686 rgb
f
196.968 168.909 mo
198.578 168.674 200.407 168.433 201.198 168.226 cv
201.96 168.028 202.713 167.831 203.475 167.643 cv
204.897 167.294 206.327 166.974 207.758 166.663 cv
230.035 161.957 253.659 162.739 275.522 169.045 cv
275.513 169.261 li
275.391 173.854 275.231 179.614 275.042 186.24 cv
274.929 190.409 274.807 194.927 274.666 199.699 cv
248.595 196.226 207.164 199.228 197.885 199.953 cv
197.885 199.821 li
197.527 187.492 196.968 169.079 196.968 168.909 cv
0 0 0 rgb
f
203.475 167.643 mo
204.897 167.294 206.327 166.965 207.758 166.663 cv
206.327 166.974 204.897 167.294 203.475 167.643 cv
.545098 .513725 .603922 rgb
f
275.492 170.034 mo
275.499 169.773 275.506 169.515 275.513 169.261 cv
275.513 169.261 li
275.521 169.088 li
275.516 169.2 275.507 169.531 275.492 170.034 cv
.505882 .454902 .556863 rgb
f
275.489 170.129 mo
275.497 169.835 275.505 169.546 275.513 169.261 cv
275.506 169.515 275.499 169.773 275.492 170.034 cv
275.491 170.065 275.49 170.096 275.489 170.129 cv
.588235 .552941 .647059 rgb
f
246.092 191.087 mo
221.291 191.087 201.198 180.894 201.198 168.357 cv
201.198 168.226 li
201.96 168.028 202.713 167.831 203.475 167.643 cv
203.475 167.643 li
204.897 167.294 206.327 166.974 207.758 166.663 cv
207.758 166.663 li
217.296 164.649 227.083 163.639 236.871 163.639 cv
249.943 163.639 263.02 165.439 275.522 169.045 cv
275.522 169.045 li
275.522 169.047 275.521 169.062 275.521 169.088 cv
275.513 169.261 li
275.513 169.261 li
275.505 169.546 275.497 169.835 275.489 170.129 cv
275.408 172.989 275.195 180.882 275.042 186.24 cv
275.042 186.24 li
275.042 186.24 li
267.25 189.148 256.228 191.087 246.092 191.087 cv
.223529 .219608 .227451 rgb
f
503.95 192.017 mo
502.293 194.888 499.607 194.116 496.134 192.11 cv
492.661 190.105 486.737 184.648 488.395 181.778 cv
490.052 178.907 497.19 181.184 500.663 183.188 cv
504.136 185.194 505.607 189.146 503.95 192.017 cv
.619608 .129412 .270588 rgb
f
364.534 191.468 mo
365.67 194.582 368.449 194.286 372.216 192.911 cv
375.984 191.536 382.761 187.185 381.625 184.071 cv
380.489 180.958 373.066 181.966 369.298 183.341 cv
365.531 184.716 363.398 188.354 364.534 191.468 cv
f
498.32 191.083 mo
495.697 191.083 493.571 189.414 493.571 187.356 cv
493.571 185.297 495.697 183.628 498.32 183.628 cv
500.942 183.628 503.068 185.297 503.068 187.356 cv
503.068 189.414 500.942 191.083 498.32 191.083 cv
.682353 .262745 .411765 rgb
f
370.6 191.563 mo
368.11 191.563 366.091 190.192 366.091 188.501 cv
366.091 186.81 368.11 185.438 370.6 185.438 cv
373.09 185.438 375.109 186.81 375.109 188.501 cv
375.109 190.192 373.09 191.563 370.6 191.563 cv
f
491.388 138.797 mo
491.388 143.78 491.186 149.031 491.186 154.483 cv
491.186 358.665 li
491.186 365.547 486.316 371.268 479.836 372.608 cv
478.92 372.787 477.936 372.898 476.953 372.898 cv
393.698 372.898 li
392.447 372.898 391.24 372.742 390.101 372.407 cv
383.978 370.843 379.465 365.279 379.465 358.665 cv
379.465 154.483 li
379.465 139.423 378.258 125.123 384.113 114.71 cv
384.113 114.71 398.703 100.12 418.009 98.7343 cv
423.081 98.377 428.823 98.3321 435.326 98.6226 cv
440.889 98.6226 445.917 98.8237 450.453 99.2036 cv
469.848 100.834 480.126 105.884 485.511 113.236 cv
490.56 120.051 491.388 128.832 491.388 138.797 cv
.439216 .0627451 .152941 rgb
f
491.186 356.431 mo
491.186 358.665 li
491.186 365.547 486.316 371.268 479.836 372.608 cv
478.92 372.787 477.936 372.898 476.953 372.898 cv
393.698 372.898 li
392.447 372.898 391.24 372.742 390.101 372.407 cv
383.978 370.843 379.465 365.279 379.465 358.665 cv
379.465 356.431 li
491.186 356.431 li
.556863 .117647 .243137 rgb
f
471.993 143.558 mo
471.993 147.962 471.842 152.63 471.842 157.44 cv
471.842 157.44 471.758 160.715 471.616 166.428 cv
471.607 167.106 471.588 167.821 471.569 168.574 cv
471.569 168.583 li
471.56 168.8 471.56 169.035 471.55 169.261 cv
471.4 174.748 471.212 181.911 470.976 190.221 cv
470.892 193.261 470.619 199.85 470.477 199.887 cv
470.477 200.028 470.28 206.729 470.176 210.061 cv
468.36 250.89 465.33 304.009 461.903 304.009 cv
403.004 304.009 li
399.277 304.009 393.922 199.85 393.922 199.821 cv
393.574 187.689 393.282 177.233 393.084 169.751 cv
393.084 169.628 393.075 169.515 393.075 169.393 cv
392.897 161.863 392.784 157.44 392.784 157.44 cv
392.784 130.221 389.235 105.684 432.313 108.169 cv
468.755 108.169 471.993 123.115 471.993 143.558 cv
.776471 .180392 .376471 rgb
f
409.948 289.771 mo
406.521 289.771 394.544 201.077 394.544 201.077 cv
396.245 242.433 399.158 304.007 403.001 304.007 cv
461.901 304.007 li
463 304.007 464.058 298.532 465.047 289.771 cv
409.948 289.771 li
.858824 .231373 .458824 rgb
f
487 244.426 mo
487 185.438 li
479.791 195.599 475.207 218.956 473.954 247.518 cv
487 244.426 li
0 0 0 rgb
f
475.97 304.007 mo
478.206 321.292 481.958 334.886 487 341.993 cv
487 304.007 li
475.97 304.007 li
f
487 258.881 mo
473.634 258.881 li
473.614 260.478 473.593 262.075 473.593 263.695 cv
473.593 272.625 473.897 281.228 474.486 289.297 cv
487 289.297 li
487 258.881 li
f
384.891 245.826 mo
383.279 186.86 li
388.548 196.88 392.361 220.143 394.008 248.669 cv
384.891 245.826 li
cp
f
394.156 305.176 mo
393.08 322.498 390.854 336.156 387.557 343.356 cv
386.519 305.385 li
394.156 305.176 li
cp
f
385.286 260.276 mo
394.54 260.023 li
394.598 261.619 394.656 263.214 394.7 264.833 cv
394.944 273.761 394.969 282.366 394.781 290.444 cv
386.117 290.681 li
385.286 260.276 li
cp
f
472.556 343.356 mo
472.324 330.914 469.295 319.506 464.333 310.396 cv
404.196 310.396 li
399.244 319.513 396.219 330.921 395.987 343.356 cv
472.556 343.356 li
f
418.012 98.7344 mo
414.124 103.762 408.471 107.989 401.566 110.491 cv
397.209 112.078 390.995 113.616 384.113 114.71 cv
388.984 106.063 398.707 100.12 418.012 98.7344 cv
cp
.556863 .709804 .74902 rgb
f
485.514 113.239 mo
478.006 112.346 471.146 110.961 466.41 109.419 cv
459.907 107.296 454.455 103.654 450.456 99.2076 cv
469.851 100.838 480.129 105.888 485.514 113.239 cv
f
390.104 372.411 mo
383.981 370.847 379.468 365.283 379.468 358.669 cv
379.468 350 li
385.68 354.267 389.97 362.691 390.104 372.411 cv
cp
.94902 .133333 .133333 rgb
f
491.189 348.011 mo
491.189 358.669 li
491.189 365.551 486.318 371.271 479.838 372.612 cv
479.838 372.388 479.816 372.165 479.816 371.941 cv
479.593 361.373 484.263 352.167 491.189 348.011 cv
f
431.566 151.135 mo
416.151 150.724 397.807 150.915 397.807 142.047 cv
397.807 133.179 416.143 118.899 431.566 117.146 cv
431.566 151.135 li
.815686 .305882 .498039 rgb
f
476.956 372.902 mo
431.566 372.902 li
476.953 372.898 li
477.936 372.898 478.92 372.787 479.836 372.608 cv
479.836 372.608 479.838 372.607 479.838 372.607 cv
479.838 372.609 479.838 372.61 479.838 372.612 cv
486.318 371.271 491.189 365.551 491.189 358.669 cv
491.189 348.011 li
491.188 348.011 491.187 348.012 491.186 348.013 cv
491.186 188.186 li
491.187 188.187 491.188 188.188 491.189 188.189 cv
491.189 358.669 li
491.189 365.551 486.318 371.271 479.838 372.612 cv
478.922 372.791 477.939 372.902 476.956 372.902 cv
491.186 180.434 mo
491.186 154.483 li
491.186 149.031 491.388 143.78 491.388 138.797 cv
491.388 128.834 490.56 120.053 485.513 113.239 cv
485.514 113.239 485.514 113.239 485.514 113.239 cv
485.514 113.239 485.514 113.239 485.514 113.239 cv
490.564 120.055 491.391 128.836 491.391 138.801 cv
491.391 143.784 491.189 149.035 491.189 154.487 cv
491.189 180.433 li
491.189 180.434 491.187 180.434 491.186 180.434 cv
.933333 .756863 .807843 rgb
f
491.189 188.189 mo
491.188 188.188 491.187 188.187 491.186 188.186 cv
491.186 180.434 li
491.187 180.434 491.189 180.434 491.189 180.433 cv
491.189 188.189 li
.67451 .168627 .313725 rgb
f
483.407 356.431 mo
431.566 356.431 li
431.566 343.356 li
472.556 343.356 li
472.324 330.914 469.295 319.506 464.333 310.396 cv
431.566 310.396 li
431.566 304.009 li
461.903 304.009 li
465.33 304.009 468.36 250.89 470.176 210.061 cv
470.28 206.729 470.477 200.028 470.477 199.887 cv
470.477 199.887 li
470.619 199.85 470.892 193.261 470.976 190.221 cv
470.976 190.221 li
471.212 181.911 471.4 174.748 471.55 169.261 cv
471.56 169.035 471.56 168.8 471.569 168.583 cv
471.569 168.574 li
471.569 168.574 li
471.569 168.574 li
471.588 167.821 471.607 167.106 471.616 166.428 cv
471.758 160.715 471.842 157.44 471.842 157.44 cv
471.842 152.63 471.993 147.962 471.993 143.558 cv
471.993 123.115 468.755 108.169 432.313 108.169 cv
432.063 108.155 431.813 108.141 431.566 108.129 cv
431.566 98.5029 li
432.798 98.534 434.037 98.5688 435.329 98.6265 cv
440.893 98.6265 445.92 98.8277 450.456 99.2076 cv
450.456 99.2076 li
454.455 103.654 459.907 107.296 466.41 109.419 cv
471.146 110.96 478.006 112.346 485.513 113.239 cv
490.56 120.053 491.388 128.834 491.388 138.797 cv
491.388 143.78 491.186 149.031 491.186 154.483 cv
491.186 180.434 li
491.186 188.186 li
491.186 348.013 li
488.048 349.896 485.374 352.816 483.407 356.431 cv
475.97 304.007 mo
478.206 321.292 481.958 334.886 487 341.993 cv
487 304.007 li
475.97 304.007 li
473.634 258.881 mo
473.614 260.478 473.593 262.075 473.593 263.695 cv
473.593 272.625 473.897 281.228 474.486 289.297 cv
487 289.297 li
487 258.881 li
473.634 258.881 li
487 185.438 mo
479.791 195.599 475.207 218.956 473.954 247.518 cv
487 244.426 li
487 185.438 li
.552941 .121569 .231373 rgb
f
476.953 372.898 mo
431.566 372.898 li
431.566 356.431 li
483.407 356.431 li
481.035 360.792 479.694 366.163 479.816 371.941 cv
479.816 372.163 479.838 372.385 479.838 372.607 cv
479.838 372.607 479.836 372.608 479.836 372.608 cv
478.92 372.787 477.936 372.898 476.953 372.898 cv
.631373 .160784 .294118 rgb
f
461.903 304.009 mo
431.566 304.009 li
431.566 304.007 li
461.901 304.007 li
463 304.007 464.058 298.532 465.047 289.771 cv
431.566 289.771 li
431.566 199.917 li
440.314 199.931 449.109 199.941 456.116 199.941 cv
464.606 199.941 470.477 199.926 470.477 199.887 cv
470.477 200.028 470.28 206.729 470.176 210.061 cv
468.36 250.89 465.33 304.009 461.903 304.009 cv
471.569 168.574 mo
459.521 165.281 446.589 163.636 433.682 163.636 cv
432.977 163.636 432.271 163.641 431.566 163.651 cv
431.566 151.135 li
432.597 151.162 433.614 151.193 434.612 151.228 cv
436.719 151.304 438.786 151.359 440.789 151.359 cv
454.014 151.359 464.355 148.95 463.469 134.098 cv
462.905 124.654 450.549 116.967 434.612 116.967 cv
433.614 116.967 432.596 117.029 431.566 117.146 cv
431.566 108.129 li
431.813 108.141 432.063 108.155 432.313 108.169 cv
468.755 108.169 471.993 123.115 471.993 143.558 cv
471.993 147.962 471.842 152.63 471.842 157.44 cv
471.842 157.44 471.758 160.715 471.616 166.428 cv
471.607 167.106 471.588 167.821 471.569 168.574 cv
471.569 168.574 li
.780392 .2 .384314 rgb
f
461.901 304.007 mo
431.566 304.007 li
431.566 289.771 li
465.047 289.771 li
464.058 298.532 463 304.007 461.901 304.007 cv
.835294 .235294 .439216 rgb
f
473.954 247.518 mo
475.207 218.956 479.791 195.599 487 185.438 cv
487 244.426 li
473.954 247.518 li
.254902 .0784314 .129412 rgb
f
487 341.993 mo
481.958 334.886 478.206 321.292 475.97 304.007 cv
487 304.007 li
487 341.993 li
f
487 289.297 mo
474.486 289.297 li
473.897 281.228 473.593 272.625 473.593 263.695 cv
473.593 262.075 473.614 260.478 473.634 258.881 cv
487 258.881 li
487 289.297 li
f
472.556 343.356 mo
431.566 343.356 li
431.566 310.396 li
464.333 310.396 li
469.295 319.506 472.324 330.914 472.556 343.356 cv
f
485.514 113.239 mo
485.514 113.239 485.514 113.239 485.513 113.239 cv
478.006 112.346 471.146 110.96 466.41 109.419 cv
459.907 107.296 454.455 103.654 450.456 99.2076 cv
469.851 100.838 480.129 105.888 485.514 113.239 cv
.631373 .560784 .635294 rgb
f
479.838 372.612 mo
479.838 372.61 479.838 372.609 479.838 372.607 cv
479.838 372.385 479.816 372.163 479.816 371.941 cv
479.694 366.163 481.035 360.792 483.407 356.431 cv
485.374 352.816 488.048 349.896 491.186 348.013 cv
491.187 348.012 491.188 348.011 491.189 348.011 cv
491.189 358.669 li
491.189 365.551 486.318 371.271 479.838 372.612 cv
.898039 .168627 .219608 rgb
f
440.789 151.359 mo
438.786 151.359 436.719 151.304 434.612 151.228 cv
433.614 151.193 432.597 151.162 431.566 151.135 cv
431.566 117.146 li
432.596 117.029 433.614 116.967 434.612 116.967 cv
450.549 116.967 462.905 124.654 463.469 134.098 cv
464.355 148.95 454.014 151.359 440.789 151.359 cv
.807843 .286274 .466667 rgb
f
471.569 168.574 mo
471.569 168.583 li
471.56 168.8 471.56 169.035 471.55 169.261 cv
471.4 174.748 471.212 181.911 470.976 190.221 cv
470.892 193.261 470.619 199.85 470.477 199.887 cv
470.477 200.028 393.922 199.85 393.922 199.821 cv
393.574 187.689 393.282 177.233 393.084 169.751 cv
394.704 169.12 396.454 168.433 397.235 168.226 cv
398.666 167.85 400.134 167.492 401.612 167.153 cv
402.346 166.983 403.089 166.824 403.833 166.663 cv
425.781 162.071 450.082 162.701 471.569 168.574 cv
0 0 0 rgb
f
453.694 191.162 mo
449.585 191.162 445.583 191.087 442.129 191.087 cv
417.33 191.087 397.235 180.894 397.235 168.357 cv
397.235 168.226 li
398.666 167.85 400.134 167.492 401.612 167.153 cv
402.346 166.983 403.089 166.824 403.833 166.663 cv
413.474 164.646 423.571 163.636 433.682 163.636 cv
446.589 163.636 459.521 165.281 471.569 168.574 cv
471.569 168.583 li
471.56 168.8 471.56 169.035 471.55 169.261 cv
471.4 174.748 471.212 181.911 470.976 190.221 cv
470.976 190.221 li
465.902 191.003 459.684 191.162 453.694 191.162 cv
.223529 .219608 .227451 rgb
f
685.459 176.324 mo
683.802 178.713 681.116 178.07 677.644 176.401 cv
674.17 174.732 668.246 170.19 669.903 167.801 cv
671.562 165.412 678.698 167.307 682.171 168.975 cv
685.644 170.644 687.116 173.934 685.459 176.324 cv
.235294 .839216 .937255 rgb
f
546.043 175.867 mo
547.179 178.459 549.958 178.212 553.726 177.068 cv
557.493 175.923 564.271 172.302 563.134 169.71 cv
561.998 167.119 554.575 167.958 550.807 169.102 cv
547.04 170.246 544.907 173.275 546.043 175.867 cv
f
679.828 175.546 mo
677.206 175.546 675.08 174.157 675.08 172.444 cv
675.08 170.73 677.206 169.341 679.828 169.341 cv
682.451 169.341 684.577 170.73 684.577 172.444 cv
684.577 174.157 682.451 175.546 679.828 175.546 cv
.305882 .894118 .960784 rgb
f
552.109 175.946 mo
549.619 175.946 547.6 174.805 547.6 173.397 cv
547.6 171.989 549.619 170.848 552.109 170.848 cv
554.599 170.848 556.618 171.989 556.618 173.397 cv
556.618 174.805 554.599 175.946 552.109 175.946 cv
f
672.708 141.506 mo
672.708 142.099 672.708 142.683 672.699 143.275 cv
672.689 143.868 672.689 144.471 672.689 145.073 cv
672.689 145.073 668.953 245.741 663.974 297.242 cv
663.776 299.294 662.995 301.195 661.743 302.739 cv
660.511 304.301 658.835 305.506 656.887 306.155 cv
642.703 310.936 627.87 313.195 613.075 312.903 cv
600.097 312.659 587.108 310.447 574.619 306.268 cv
574.439 306.202 li
570.439 304.856 567.645 301.261 567.334 297.064 cv
563.494 245.694 560.972 145.073 560.972 145.073 cv
560.972 132.546 559.758 120.649 565.612 111.981 cv
565.612 111.963 li
573.556 100.216 594.157 97.9765 613.075 98.2118 cv
618.845 98.2777 624.464 98.5787 629.517 98.9174 cv
630.346 98.955 631.155 99.0209 631.955 99.0684 cv
634.393 99.2472 636.671 99.4449 638.816 99.7176 cv
640.962 99.9623 642.967 100.254 644.849 100.612 cv
656.2 102.626 662.995 106.089 667.014 110.758 cv
667.192 110.955 667.372 111.163 667.504 111.36 cv
667.936 111.906 668.341 112.462 668.699 113.026 cv
673.404 120.357 672.858 130.118 672.708 141.506 cv
.160784 .701961 .827451 rgb
f
613.818 106.532 mo
613.809 106.531 li
613.799 106.532 li
577.357 106.532 574.109 118.974 574.109 135.991 cv
574.109 150.615 575.824 188.995 575.934 191.341 cv
577.751 225.327 580.782 269.534 584.208 269.534 cv
643.409 269.534 li
646.835 269.534 649.866 225.327 651.683 191.341 cv
651.793 188.995 653.508 150.615 653.508 135.991 cv
653.508 118.974 650.261 106.532 613.818 106.532 cv
.235294 .839216 .937255 rgb
f
575.934 191.341 mo
577.751 225.327 580.782 269.534 584.208 269.534 cv
643.409 269.534 li
644.508 269.534 645.566 264.986 646.557 257.686 cv
591.457 257.686 li
588.5 257.686 578.215 196.816 575.451 180.132 cv
575.703 186.223 575.899 190.597 575.934 191.341 cv
.462745 .94902 1 rgb
f
665.658 219.944 mo
665.658 170.848 li
659.982 179.305 656.372 198.746 655.387 222.517 cv
665.658 219.944 li
0 0 0 rgb
f
665.658 231.976 mo
655.135 231.976 li
655.119 233.305 655.103 234.633 655.103 235.982 cv
655.103 243.415 655.342 250.575 655.806 257.291 cv
665.658 257.291 li
665.658 231.976 li
f
566.4 221.109 mo
564.789 172.032 li
570.057 180.371 573.87 199.733 575.518 223.476 cv
566.4 221.109 li
cp
f
566.795 233.136 mo
576.049 232.926 li
576.106 234.254 576.165 235.582 576.209 236.93 cv
576.453 244.36 576.478 251.522 576.29 258.245 cv
567.626 258.442 li
566.795 233.136 li
cp
f
654.066 305.176 mo
653.833 293.729 650.805 283.233 645.842 274.851 cv
585.705 274.851 li
580.753 283.24 577.729 293.735 577.496 305.176 cv
654.066 305.176 li
f
600.117 98.5151 mo
596.229 102.699 589.979 106.386 583.075 108.469 cv
578.718 109.79 572.507 111.054 565.625 111.965 cv
570.529 104.294 580.813 99.668 600.117 98.5151 cv
cp
.929412 .921569 .662745 rgb
f
574.62 306.268 mo
569.702 305.16 566.295 300.126 566.295 295.44 cv
566.788 289.297 li
571.778 292.321 574.513 299.381 574.62 306.268 cv
cp
.94902 .133333 .133333 rgb
f
574.62 306.268 mo
569.702 305.16 566.295 300.126 566.295 295.44 cv
566.788 289.297 li
571.778 292.321 574.513 299.381 574.62 306.268 cv
cp
f
613.075 142.297 mo
597.66 141.955 579.315 142.114 579.315 134.733 cv
579.315 127.353 597.652 115.467 613.075 114.007 cv
613.075 142.297 li
.360784 .862745 .94902 rgb
f
672.702 143.046 mo
672.708 142.531 672.708 142.022 672.708 141.506 cv
672.858 130.118 673.404 120.357 668.699 113.026 cv
674.018 121.178 672.856 131.726 672.702 143.046 cv
.882353 .960784 .976471 rgb
f
615.616 312.928 mo
614.769 312.928 613.922 312.92 613.075 312.903 cv
613.075 305.176 li
654.066 305.176 li
653.833 293.729 650.805 283.233 645.842 274.851 cv
613.075 274.851 li
613.075 269.534 li
643.409 269.534 li
643.412 269.534 643.415 269.534 643.418 269.534 cv
643.419 269.534 643.419 269.534 643.42 269.534 cv
643.423 269.534 643.426 269.534 643.429 269.534 cv
643.429 269.534 643.429 269.534 643.43 269.534 cv
643.433 269.533 643.435 269.533 643.438 269.533 cv
643.439 269.533 643.439 269.533 643.44 269.533 cv
643.443 269.533 643.446 269.532 643.449 269.532 cv
643.449 269.532 643.45 269.532 643.45 269.532 cv
643.453 269.532 643.456 269.531 643.458 269.531 cv
643.459 269.531 643.459 269.531 643.46 269.531 cv
643.463 269.531 643.465 269.53 643.468 269.53 cv
643.469 269.53 643.47 269.529 643.471 269.529 cv
643.473 269.529 643.476 269.529 643.478 269.528 cv
643.479 269.528 643.479 269.528 643.48 269.528 cv
643.482 269.527 643.485 269.527 643.488 269.526 cv
643.489 269.526 643.49 269.526 643.491 269.526 cv
643.493 269.525 643.496 269.525 643.499 269.524 cv
643.499 269.524 643.5 269.524 643.5 269.524 cv
643.503 269.523 643.505 269.522 643.508 269.522 cv
643.509 269.522 643.51 269.521 643.51 269.521 cv
643.513 269.521 643.516 269.52 643.519 269.519 cv
643.52 269.519 643.52 269.519 643.521 269.518 cv
643.523 269.518 643.525 269.517 643.527 269.517 cv
643.529 269.516 643.529 269.516 643.53 269.516 cv
643.533 269.515 643.536 269.514 643.538 269.513 cv
643.539 269.513 643.54 269.513 643.541 269.512 cv
643.543 269.512 643.545 269.511 643.547 269.51 cv
643.548 269.51 643.549 269.509 643.55 269.509 cv
643.553 269.508 643.555 269.507 643.558 269.506 cv
643.559 269.506 643.56 269.505 643.561 269.505 cv
643.563 269.504 643.565 269.504 643.567 269.503 cv
643.568 269.502 643.57 269.502 643.572 269.501 cv
643.574 269.5 643.576 269.499 643.577 269.499 cv
643.579 269.498 643.58 269.497 643.581 269.497 cv
643.583 269.496 643.585 269.495 643.587 269.494 cv
643.589 269.494 643.591 269.493 643.592 269.492 cv
643.594 269.491 643.595 269.491 643.597 269.49 cv
643.598 269.489 643.6 269.489 643.601 269.488 cv
643.603 269.487 643.605 269.486 643.607 269.485 cv
643.609 269.484 643.61 269.483 643.612 269.482 cv
643.614 269.482 643.615 269.481 643.617 269.48 cv
643.618 269.48 643.62 269.479 643.621 269.478 cv
643.623 269.477 643.625 269.476 643.628 269.474 cv
643.629 269.473 643.631 269.473 643.632 269.472 cv
643.633 269.471 643.635 269.47 643.636 269.47 cv
643.639 269.468 643.642 269.466 643.645 269.464 cv
643.646 269.464 643.646 269.464 643.647 269.463 cv
643.649 269.462 643.651 269.461 643.652 269.46 cv
643.653 269.46 643.654 269.459 643.654 269.459 cv
643.658 269.457 643.661 269.455 643.664 269.453 cv
643.665 269.452 643.666 269.452 643.666 269.451 cv
643.668 269.45 643.67 269.449 643.672 269.448 cv
643.672 269.448 643.672 269.447 643.672 269.447 cv
643.677 269.445 643.68 269.442 643.685 269.439 cv
643.685 269.439 643.685 269.439 643.685 269.439 cv
643.691 269.435 643.698 269.43 643.704 269.425 cv
643.704 269.425 643.704 269.425 643.704 269.425 cv
647.009 266.995 649.918 224.348 651.683 191.341 cv
651.711 190.73 651.849 187.671 652.037 183.225 cv
652.037 183.225 652.037 183.225 652.037 183.225 cv
652.054 182.816 652.072 182.395 652.09 181.964 cv
652.203 179.27 652.33 176.151 652.462 172.807 cv
652.462 172.807 652.462 172.807 652.462 172.807 cv
652.568 170.093 652.677 167.231 652.783 164.327 cv
652.881 161.613 652.977 158.862 653.064 156.162 cv
653.064 156.162 li
653.064 156.162 li
653.064 156.162 li
653.064 156.162 li
653.32 148.281 653.508 140.833 653.508 135.991 cv
653.508 118.974 650.261 106.532 613.818 106.532 cv
613.809 106.531 li
613.799 106.532 li
613.556 106.532 613.315 106.532 613.075 106.533 cv
613.075 98.2118 li
618.845 98.2777 624.464 98.5787 629.517 98.9174 cv
630.346 98.955 631.155 99.0209 631.955 99.0684 cv
634.393 99.2472 636.671 99.4449 638.816 99.7176 cv
640.962 99.9623 642.967 100.254 644.849 100.612 cv
656.2 102.626 662.995 106.089 667.014 110.758 cv
667.192 110.955 667.372 111.163 667.504 111.36 cv
667.936 111.906 668.341 112.462 668.699 113.026 cv
668.699 113.026 li
673.404 120.357 672.858 130.118 672.708 141.506 cv
672.708 142.022 672.708 142.531 672.702 143.046 cv
672.701 143.123 672.7 143.199 672.699 143.275 cv
672.699 143.275 li
672.689 143.868 672.689 144.471 672.689 145.073 cv
672.689 145.073 672.376 153.52 671.809 166.777 cv
671.737 168.475 671.66 170.257 671.579 172.105 cv
670.114 205.628 667.326 262.574 663.974 297.242 cv
663.776 299.294 662.995 301.195 661.743 302.739 cv
660.511 304.301 658.835 305.506 656.887 306.155 cv
643.515 310.663 629.566 312.928 615.616 312.928 cv
655.135 231.976 mo
655.119 233.305 655.103 234.633 655.103 235.982 cv
655.103 243.415 655.342 250.575 655.806 257.291 cv
665.658 257.291 li
665.658 231.976 li
655.135 231.976 li
665.658 170.848 mo
659.982 179.305 656.372 198.746 655.387 222.517 cv
665.658 219.944 li
665.658 170.848 li
.313725 .756863 .858823 rgb
f
643.418 269.534 mo
643.419 269.534 643.419 269.534 643.42 269.534 cv
643.419 269.534 643.419 269.534 643.418 269.534 cv
643.429 269.534 mo
643.429 269.534 643.43 269.534 643.43 269.534 cv
643.429 269.534 643.429 269.534 643.429 269.534 cv
643.438 269.533 mo
643.439 269.533 643.439 269.533 643.44 269.533 cv
643.439 269.533 643.439 269.533 643.438 269.533 cv
643.449 269.532 mo
643.449 269.532 643.45 269.532 643.45 269.532 cv
643.45 269.532 643.449 269.532 643.449 269.532 cv
643.458 269.531 mo
643.459 269.531 643.459 269.531 643.46 269.531 cv
643.459 269.531 643.459 269.531 643.458 269.531 cv
643.468 269.53 mo
643.469 269.53 643.47 269.529 643.471 269.529 cv
643.47 269.529 643.469 269.53 643.468 269.53 cv
643.478 269.528 mo
643.479 269.528 643.479 269.528 643.48 269.528 cv
643.479 269.528 643.479 269.528 643.478 269.528 cv
643.488 269.526 mo
643.489 269.526 643.49 269.526 643.491 269.526 cv
643.49 269.526 643.489 269.526 643.488 269.526 cv
643.499 269.524 mo
643.499 269.524 643.5 269.524 643.5 269.524 cv
643.5 269.524 643.499 269.524 643.499 269.524 cv
643.508 269.522 mo
643.509 269.522 643.51 269.521 643.51 269.521 cv
643.51 269.521 643.509 269.522 643.508 269.522 cv
643.519 269.519 mo
643.519 269.519 643.52 269.519 643.521 269.518 cv
643.52 269.519 643.52 269.519 643.519 269.519 cv
643.527 269.517 mo
643.528 269.516 643.53 269.516 643.53 269.516 cv
643.529 269.516 643.529 269.516 643.527 269.517 cv
643.538 269.513 mo
643.539 269.513 643.54 269.513 643.541 269.512 cv
643.54 269.513 643.539 269.513 643.538 269.513 cv
643.547 269.51 mo
643.548 269.51 643.549 269.509 643.55 269.509 cv
643.549 269.509 643.548 269.51 643.547 269.51 cv
643.558 269.506 mo
643.559 269.506 643.56 269.506 643.561 269.505 cv
643.56 269.505 643.559 269.506 643.558 269.506 cv
643.567 269.503 mo
643.568 269.502 643.57 269.502 643.572 269.501 cv
643.57 269.502 643.568 269.502 643.567 269.503 cv
643.577 269.499 mo
643.579 269.498 643.58 269.498 643.581 269.497 cv
643.58 269.497 643.579 269.498 643.577 269.499 cv
643.587 269.494 mo
643.589 269.494 643.59 269.493 643.592 269.492 cv
643.591 269.493 643.589 269.494 643.587 269.494 cv
643.597 269.49 mo
643.598 269.489 643.6 269.489 643.601 269.488 cv
643.6 269.489 643.598 269.489 643.597 269.49 cv
643.607 269.485 mo
643.609 269.484 643.61 269.483 643.612 269.482 cv
643.61 269.483 643.609 269.484 643.607 269.485 cv
643.617 269.48 mo
643.618 269.479 643.619 269.479 643.621 269.478 cv
643.62 269.479 643.618 269.48 643.617 269.48 cv
643.628 269.474 mo
643.629 269.474 643.631 269.473 643.632 269.472 cv
643.631 269.473 643.629 269.473 643.628 269.474 cv
643.636 269.47 mo
643.639 269.468 643.642 269.466 643.645 269.464 cv
643.642 269.466 643.639 269.468 643.636 269.47 cv
643.647 269.463 mo
643.649 269.462 643.651 269.461 643.652 269.46 cv
643.651 269.461 643.649 269.462 643.647 269.463 cv
643.654 269.459 mo
643.658 269.457 643.661 269.455 643.664 269.453 cv
643.661 269.455 643.658 269.457 643.654 269.459 cv
643.666 269.451 mo
643.668 269.45 643.67 269.449 643.672 269.448 cv
643.67 269.449 643.668 269.45 643.666 269.451 cv
643.672 269.447 mo
643.676 269.445 643.681 269.442 643.685 269.439 cv
643.68 269.442 643.677 269.445 643.672 269.447 cv
643.685 269.439 mo
643.691 269.435 643.698 269.43 643.704 269.425 cv
643.698 269.43 643.691 269.435 643.685 269.439 cv
643.704 269.425 mo
644.698 268.694 645.655 264.33 646.557 257.686 cv
613.075 257.686 li
613.075 181.447 li
614.46 181.431 615.844 181.422 617.232 181.422 cv
628.646 181.422 640.187 181.989 652.037 183.225 cv
651.849 187.671 651.711 190.73 651.683 191.341 cv
649.918 224.348 647.009 266.995 643.704 269.425 cv
652.09 181.964 mo
652.203 179.27 652.33 176.151 652.462 172.807 cv
652.462 172.807 652.462 172.807 652.462 172.807 cv
652.33 176.151 652.203 179.27 652.09 181.964 cv
653.064 156.162 mo
642.829 154.053 631.909 152.857 620.474 152.714 cv
619.703 152.705 618.93 152.7 618.155 152.7 cv
617.939 152.7 617.721 152.7 617.504 152.701 cv
617.504 152.701 li
617.449 152.701 617.398 152.701 617.343 152.702 cv
617.342 152.702 617.34 152.702 617.338 152.702 cv
615.926 152.708 614.503 152.73 613.075 152.768 cv
613.075 142.297 li
614.106 142.32 615.123 142.345 616.121 142.375 cv
618.227 142.438 620.294 142.484 622.297 142.484 cv
635.522 142.484 645.864 140.479 644.978 128.117 cv
644.414 120.257 632.059 113.859 616.121 113.859 cv
615.123 113.859 614.105 113.91 613.075 114.007 cv
613.075 106.533 li
613.315 106.532 613.556 106.532 613.799 106.532 cv
613.809 106.531 li
613.818 106.532 li
650.261 106.532 653.508 118.974 653.508 135.991 cv
653.508 140.833 653.32 148.281 653.064 156.162 cv
.364706 .85098 .933333 rgb
f
643.409 269.534 mo
613.075 269.534 li
613.075 257.686 li
646.557 257.686 li
645.655 264.33 644.698 268.694 643.704 269.425 cv
643.704 269.425 643.704 269.425 643.704 269.425 cv
643.698 269.43 643.691 269.435 643.685 269.439 cv
643.685 269.439 643.685 269.439 643.685 269.439 cv
643.681 269.442 643.676 269.445 643.672 269.447 cv
643.672 269.447 643.672 269.448 643.672 269.448 cv
643.67 269.449 643.668 269.45 643.666 269.451 cv
643.666 269.452 643.665 269.452 643.664 269.453 cv
643.661 269.455 643.658 269.457 643.654 269.459 cv
643.654 269.459 643.653 269.46 643.652 269.46 cv
643.651 269.461 643.649 269.462 643.647 269.463 cv
643.646 269.464 643.646 269.464 643.645 269.464 cv
643.642 269.466 643.639 269.468 643.636 269.47 cv
643.635 269.47 643.633 269.471 643.632 269.472 cv
643.631 269.473 643.629 269.474 643.628 269.474 cv
643.625 269.476 643.623 269.477 643.621 269.478 cv
643.619 269.479 643.618 269.479 643.617 269.48 cv
643.615 269.481 643.614 269.482 643.612 269.482 cv
643.61 269.483 643.609 269.484 643.607 269.485 cv
643.605 269.486 643.603 269.487 643.601 269.488 cv
643.6 269.489 643.598 269.489 643.597 269.49 cv
643.595 269.491 643.594 269.491 643.592 269.492 cv
643.59 269.493 643.589 269.494 643.587 269.494 cv
643.585 269.495 643.583 269.496 643.581 269.497 cv
643.58 269.498 643.579 269.498 643.577 269.499 cv
643.576 269.499 643.574 269.5 643.572 269.501 cv
643.57 269.502 643.568 269.502 643.567 269.503 cv
643.565 269.504 643.563 269.504 643.561 269.505 cv
643.56 269.506 643.559 269.506 643.558 269.506 cv
643.555 269.507 643.553 269.508 643.55 269.509 cv
643.549 269.509 643.548 269.51 643.547 269.51 cv
643.545 269.511 643.543 269.512 643.541 269.512 cv
643.54 269.513 643.539 269.513 643.538 269.513 cv
643.536 269.514 643.533 269.515 643.53 269.516 cv
643.53 269.516 643.528 269.516 643.527 269.517 cv
643.525 269.517 643.523 269.518 643.521 269.518 cv
643.52 269.519 643.519 269.519 643.519 269.519 cv
643.516 269.52 643.513 269.521 643.51 269.521 cv
643.51 269.521 643.509 269.522 643.508 269.522 cv
643.505 269.522 643.503 269.523 643.5 269.524 cv
643.5 269.524 643.499 269.524 643.499 269.524 cv
643.496 269.525 643.493 269.525 643.491 269.526 cv
643.49 269.526 643.489 269.526 643.488 269.526 cv
643.485 269.527 643.482 269.527 643.48 269.528 cv
643.479 269.528 643.479 269.528 643.478 269.528 cv
643.476 269.529 643.473 269.529 643.471 269.529 cv
643.47 269.529 643.469 269.53 643.468 269.53 cv
643.465 269.53 643.463 269.531 643.46 269.531 cv
643.459 269.531 643.459 269.531 643.458 269.531 cv
643.456 269.531 643.453 269.532 643.45 269.532 cv
643.45 269.532 643.449 269.532 643.449 269.532 cv
643.446 269.532 643.443 269.533 643.44 269.533 cv
643.439 269.533 643.439 269.533 643.438 269.533 cv
643.435 269.533 643.433 269.533 643.43 269.534 cv
643.43 269.534 643.429 269.534 643.429 269.534 cv
643.426 269.534 643.423 269.534 643.42 269.534 cv
643.419 269.534 643.419 269.534 643.418 269.534 cv
643.415 269.534 643.412 269.534 643.409 269.534 cv
.517647 .92549 .976471 rgb
f
655.387 222.517 mo
656.372 198.746 659.982 179.305 665.658 170.848 cv
665.658 219.944 li
655.387 222.517 li
.203922 .282353 .298039 rgb
f
665.658 257.291 mo
655.806 257.291 li
655.342 250.575 655.103 243.415 655.103 235.982 cv
655.103 234.633 655.119 233.305 655.135 231.976 cv
665.658 231.976 li
665.658 257.291 li
f
654.066 305.176 mo
613.075 305.176 li
613.075 274.851 li
645.842 274.851 li
650.805 283.233 653.833 293.729 654.066 305.176 cv
f
622.297 142.484 mo
620.294 142.484 618.227 142.438 616.121 142.375 cv
615.123 142.345 614.106 142.32 613.075 142.297 cv
613.075 114.007 li
614.105 113.91 615.123 113.859 616.121 113.859 cv
632.059 113.859 644.414 120.257 644.978 128.117 cv
645.864 140.479 635.522 142.484 622.297 142.484 cv
.45098 .866667 .941176 rgb
f
574.6 157.592 mo
574.917 167.151 575.322 177.15 575.604 183.783 cv
600.842 181.036 625.686 180.477 652.037 183.225 cv
652.331 176.257 652.749 165.88 653.064 156.162 cv
629.786 151.365 602.962 151.292 574.6 157.592 cv
0 0 0 rgb
f
652.462 172.807 mo
652.558 170.345 652.657 167.759 652.753 165.132 cv
652.754 165.12 652.754 165.108 652.755 165.096 cv
652.755 165.081 652.756 165.066 652.756 165.051 cv
652.765 164.81 652.774 164.569 652.783 164.327 cv
652.677 167.231 652.568 170.093 652.462 172.807 cv
652.462 172.807 li
.466667 .807843 .890196 rgb
f
652.462 172.807 mo
652.558 170.344 652.657 167.76 652.753 165.132 cv
652.657 167.759 652.558 170.345 652.462 172.807 cv
652.462 172.807 652.462 172.807 652.462 172.807 cv
652.755 165.096 mo
652.755 165.081 652.756 165.066 652.756 165.051 cv
652.756 165.066 652.755 165.081 652.755 165.096 cv
.505882 .882353 .94902 rgb
f
578.56 156.751 mo
578.56 156.751 li
590.404 154.355 601.955 153.068 613.075 152.768 cv
613.075 152.768 li
601.957 153.068 590.401 154.355 578.56 156.751 cv
.403922 .87451 .952941 rgb
f
613.075 152.768 mo
613.075 152.768 li
614.503 152.73 615.926 152.708 617.338 152.702 cv
615.924 152.708 614.504 152.73 613.075 152.768 cv
.505882 .882353 .94902 rgb
f
620.474 152.714 mo
619.704 152.705 618.93 152.7 618.155 152.7 cv
617.938 152.7 617.722 152.7 617.504 152.701 cv
617.721 152.7 617.939 152.7 618.155 152.7 cv
618.93 152.7 619.703 152.705 620.474 152.714 cv
617.343 152.702 mo
617.398 152.701 617.449 152.701 617.504 152.701 cv
617.451 152.701 617.396 152.701 617.343 152.702 cv
f
623.635 175.548 mo
599.739 175.548 579.971 166.731 578.56 156.751 cv
590.401 154.355 601.957 153.068 613.075 152.768 cv
614.504 152.73 615.924 152.708 617.338 152.702 cv
617.34 152.702 617.342 152.702 617.343 152.702 cv
617.396 152.701 617.451 152.701 617.504 152.701 cv
617.504 152.701 li
617.722 152.7 617.938 152.7 618.155 152.7 cv
618.93 152.7 619.704 152.705 620.474 152.714 cv
631.908 152.857 642.83 154.053 653.064 156.162 cv
653.064 156.162 li
652.977 158.862 652.881 161.613 652.783 164.327 cv
652.774 164.569 652.765 164.81 652.756 165.051 cv
652.756 165.066 652.755 165.081 652.755 165.096 cv
652.754 165.108 652.754 165.12 652.753 165.132 cv
652.657 167.76 652.558 170.344 652.462 172.807 cv
643.804 174.435 631.671 175.548 623.635 175.548 cv
.223529 .219608 .227451 rgb
f
667.014 110.756 mo
659.506 110.013 652.655 108.859 647.919 107.576 cv
641.416 105.81 636.177 104.757 631.965 99.0693 cv
652.206 99.7861 661.746 104.684 667.014 110.756 cv
cp
.929412 .921569 .662745 rgb
f
655.995 306.455 mo
661.22 305.553 664.569 300.854 664.765 296.171 cv
664.639 290.014 li
659.527 292.826 656.391 299.579 655.995 306.455 cv
cp
.94902 .133333 .133333 rgb
f
719.98 212.58 mo
720.732 214.488 718.564 218.673 714.049 220.635 cv
709.533 222.598 704.379 221.596 703.628 219.688 cv
702.876 217.779 707.305 212.246 711.82 210.284 cv
716.336 208.321 719.229 210.672 719.98 212.58 cv
cp
1 .403922 0 rgb
f
820.224 213.171 mo
819.566 215.118 821.936 219.18 826.541 220.896 cv
831.146 222.613 836.245 221.335 836.902 219.389 cv
837.56 217.442 832.867 212.155 828.262 210.438 cv
823.656 208.722 820.882 211.225 820.224 213.171 cv
cp
f
822.642 157.388 mo
822.597 312.792 li
822.597 317.73 821.703 322.624 819.982 327.182 cv
818.82 330.266 817.278 333.193 815.424 335.919 cv
815.424 335.941 li
811.916 341.081 807.314 345.281 802.062 348.275 cv
802.04 348.275 li
795.918 351.828 788.879 353.772 781.595 353.749 cv
759.317 353.749 li
751.899 353.749 744.727 351.739 738.515 348.074 cv
733.398 345.08 728.93 340.969 725.488 335.919 cv
723.656 333.215 722.137 330.311 720.997 327.272 cv
719.255 322.669 718.338 317.753 718.338 312.771 cv
718.338 157.388 li
718.338 144.154 724.952 135.066 724.952 135.066 cv
733.307 122.504 743.987 104.343 765.686 104.343 cv
775.295 104.343 li
798.204 104.343 807.624 123.334 815.245 133.904 cv
820.05 140.786 822.642 148.986 822.642 157.388 cv
f
752.094 107.046 mo
751.089 114.666 743.246 126.034 738.71 129.833 cv
736.118 132.022 730.659 134.026 724.961 135.054 cv
727.688 130.967 729.508 116.645 752.094 107.046 cv
cp
.556863 .709804 .74902 rgb
f
814.954 133.498 mo
809.949 132.537 805.341 130.861 802.994 128.984 cv
798.503 125.409 790.777 114.653 789.235 107.079 cv
796.392 109.945 802.945 114.738 807.731 120.673 cv
810.869 124.563 814.954 133.498 814.954 133.498 cv
cp
f
817.771 228.019 mo
817.771 310.044 li
794.249 341.589 750.798 344.328 723.924 317.753 cv
723.924 220.31 li
751.488 193.309 794.606 196.96 817.771 228.019 cv
.0705882 .0784314 .0784314 rgb
f
803.648 214.008 mo
796.655 218.656 785.014 221.695 771.83 221.695 cv
755.854 221.695 742.135 217.226 736.191 210.836 cv
745.42 205.316 756.101 202.188 767.495 202.188 cv
780.925 202.188 793.393 206.568 803.648 214.008 cv
cp
.231373 .239216 .239216 rgb
f
767.571 193.096 mo
784.76 193.096 800.331 200.818 811.784 213.326 cv
813.818 204.723 814.948 195.34 814.948 185.504 cv
814.948 144.222 795.237 110.756 770.923 110.756 cv
746.608 110.756 726.897 144.222 726.897 185.504 cv
726.897 193.308 727.603 200.831 728.911 207.903 cv
739.631 198.626 753.023 193.096 767.571 193.096 cv
1 .462745 .101961 rgb
f
736.734 185.503 mo
736.734 147.046 753.843 115.387 775.842 111.232 cv
774.226 110.927 772.586 110.756 770.923 110.756 cv
746.608 110.756 726.897 144.222 726.897 185.503 cv
726.897 193.308 727.604 200.831 728.911 207.903 cv
731.689 205.499 734.654 203.36 737.766 201.49 cv
737.103 196.336 736.734 190.995 736.734 185.503 cv
cp
1 .537255 .223529 rgb
f
777.409 193.096 mo
775.748 193.096 774.107 193.188 772.479 193.33 cv
787.712 194.648 801.433 202.021 811.784 213.326 cv
812.372 210.84 812.86 208.272 813.291 205.665 cv
803.075 197.752 790.733 193.096 777.409 193.096 cv
cp
f
766.897 187.193 mo
757.021 187.193 747.587 184.612 747.587 172.282 cv
747.587 151.068 766.579 135.061 766.579 135.061 cv
791.108 135.061 795.627 185.853 785.572 185.853 cv
781.361 185.853 774.014 187.193 766.897 187.193 cv
1 .529412 .14902 rgb
f
804.944 252.083 mo
804.944 287.454 li
818.219 302.485 li
818.157 310.431 li
815.274 314.297 808.353 321.882 808.353 321.882 cv
802.04 302.738 li
778.489 319.853 736.728 303.095 736.728 303.095 cv
730.059 324 li
727.802 322.302 725.61 320.066 723.599 318.078 cv
723.599 306.901 li
736.728 286.717 li
736.728 250.228 li
723.599 234.191 li
723.687 220.31 li
725.876 218.164 728.307 215.751 730.765 213.942 cv
738.515 240.509 li
741.42 238.676 li
757.284 232.733 li
776.076 232.174 li
782.064 232.174 802.04 243.369 802.04 243.369 cv
811.588 219.294 li
813.979 221.663 816.379 225.293 818.412 228.019 cv
818.412 231.655 li
804.944 252.083 li
1 .403922 0 rgb
f
738.515 348.074 mo
733.398 345.08 728.93 340.969 725.488 335.919 cv
723.656 333.215 722.137 330.311 720.997 327.271 cv
730.807 329.238 738.225 337.773 738.515 348.074 cv
cp
.956863 .0588235 .0588235 rgb
f
819.982 327.182 mo
818.82 330.266 817.278 333.193 815.424 335.919 cv
815.424 335.941 li
811.916 341.081 807.313 345.281 802.063 348.275 cv
802.04 348.275 li
802.241 337.729 809.905 329.015 819.982 327.182 cv
cp
f
804.947 246.103 mo
796.477 237.315 783.264 231.655 768.404 231.655 cv
756.149 231.655 745.015 235.507 736.734 241.786 cv
736.734 296.275 li
745.015 302.553 756.149 306.406 768.404 306.406 cv
783.264 306.406 796.477 300.746 804.947 291.957 cv
804.947 246.103 li
1 .592157 .313726 rgb
f
738.513 240.505 mo
738.513 240.504 li
743.851 236.853 750.225 234.158 757.23 232.753 cv
757.229 232.753 li
750.225 234.158 743.851 236.853 738.513 240.505 cv
757.341 232.731 mo
759.172 232.368 761.047 232.093 762.957 231.911 cv
761.047 232.093 759.172 232.368 757.341 232.731 cv
757.341 232.731 li
.286274 .203922 .145098 rgb
f
736.734 241.786 mo
736.734 241.786 li
737.314 241.347 737.907 240.919 738.513 240.504 cv
738.513 240.505 li
737.907 240.92 737.314 241.347 736.734 241.786 cv
757.229 232.753 mo
757.23 232.753 li
757.266 232.746 757.304 232.739 757.341 232.731 cv
757.341 232.731 li
757.304 232.739 757.266 232.746 757.229 232.753 cv
1 .486274 .0745098 rgb
f
741.539 299.411 mo
739.86 298.441 738.236 297.413 736.734 296.275 cv
736.734 296.275 li
736.734 241.786 li
737.314 241.347 737.907 240.92 738.513 240.505 cv
743.851 236.853 750.225 234.158 757.229 232.753 cv
757.266 232.746 757.304 232.739 757.341 232.731 cv
759.172 232.368 761.047 232.093 762.957 231.911 cv
764.744 231.742 766.561 231.655 768.404 231.655 cv
783.264 231.655 796.477 237.315 804.947 246.103 cv
804.947 246.656 li
796.661 240.341 785.503 236.459 773.209 236.459 cv
773.087 236.459 772.964 236.459 772.842 236.46 cv
755.437 236.57 741.539 251.076 741.539 268.482 cv
741.539 299.411 li
1 .647059 .364706 rgb
f
979.612 182.104 mo
978.149 184.952 975.78 184.186 972.716 182.196 cv
969.651 180.207 964.425 174.792 965.887 171.943 cv
967.35 169.095 973.646 171.353 976.711 173.343 cv
979.775 175.333 981.074 179.255 979.612 182.104 cv
.454902 .776471 .25098 rgb
f
856.603 181.559 mo
857.605 184.649 860.057 184.354 863.381 182.991 cv
866.705 181.626 872.685 177.309 871.683 174.219 cv
870.68 171.129 864.13 172.13 860.806 173.494 cv
857.482 174.858 855.6 178.469 856.603 181.559 cv
f
974.643 181.177 mo
972.33 181.177 970.454 179.521 970.454 177.478 cv
970.454 175.435 972.33 173.779 974.643 173.779 cv
976.958 173.779 978.833 175.435 978.833 177.478 cv
978.833 179.521 976.958 181.177 974.643 181.177 cv
.552941 .847059 .32549 rgb
f
861.954 181.653 mo
859.758 181.653 857.977 180.293 857.977 178.614 cv
857.977 176.936 859.758 175.576 861.954 175.576 cv
864.151 175.576 865.933 176.936 865.933 178.614 cv
865.933 180.293 864.151 181.653 861.954 181.653 cv
f
904.902 92.9496 mo
895.351 92.9496 li
881.927 92.9496 871.045 103.832 871.045 117.255 cv
871.045 131.032 li
904.902 131.032 li
904.902 92.9496 li
.937255 .803922 .254902 rgb
f
930.436 92.9496 mo
939.988 92.9496 li
953.411 92.9496 964.294 103.832 964.294 117.255 cv
964.294 131.032 li
930.436 131.032 li
930.436 92.9496 li
f
971.381 325.543 mo
967.748 336.367 957.442 343.332 946.101 343.755 cv
945.734 343.765 945.367 343.774 945 343.774 cv
891.635 343.774 li
883.663 343.774 874.948 339.379 869.518 333.017 cv
867.484 330.626 865.895 327.943 865 325.101 cv
864.2 322.598 863.776 319.981 863.776 317.28 cv
868.247 142.343 li
868.247 120.696 881.649 92.6778 909.895 92.6778 cv
926.656 92.6778 li
949.64 92.6778 968.304 120.696 968.304 142.343 cv
968.369 145.11 968.444 147.83 968.511 150.513 cv
968.567 152.63 968.614 154.72 968.671 156.781 cv
973 327.003 973.499 320.094 971.381 325.543 cv
.376471 .678431 .176471 rgb
f
893.448 343.772 mo
891.639 343.772 li
883.662 343.772 874.947 339.382 869.518 333.019 cv
874.59 331.134 880.868 331.799 886.209 335.303 cv
889.583 337.52 892.041 340.513 893.448 343.772 cv
cp
1 0 0 rgb
f
968.671 156.781 mo
968.614 154.72 968.567 152.63 968.511 150.513 cv
968.567 152.63 968.623 154.72 968.671 156.781 cv
.662745 .827451 .552941 rgb
f
945 343.774 mo
944.595 343.774 li
954.252 337.628 961.169 328.057 961.169 317.28 cv
957.518 174.112 li
957.647 169.622 957.777 164.833 957.895 160.132 cv
957.895 160.132 li
957.895 160.132 li
957.895 160.132 li
957.895 160.132 li
957.895 160.132 li
957.895 160.132 li
958.157 149.581 958.364 139.454 958.364 134.014 cv
958.364 117.704 956.209 104.918 935.809 100.535 cv
929.697 95.7045 922.608 92.6778 915.052 92.6778 cv
926.656 92.6778 li
949.64 92.6778 968.304 120.696 968.304 142.343 cv
968.369 145.11 968.444 147.83 968.511 150.513 cv
968.511 150.513 li
968.567 152.63 968.614 154.72 968.671 156.781 cv
968.671 156.781 li
971.387 263.585 972.596 300.656 972.596 314.8 cv
972.596 323.198 972.17 323.513 971.381 325.543 cv
967.748 336.367 957.442 343.332 946.101 343.755 cv
945.734 343.765 945.367 343.774 945 343.774 cv
.25098 .560784 .0980392 rgb
f
869.269 232.387 mo
869.264 177.322 li
873.497 186.806 876.19 208.611 876.928 235.272 cv
869.269 232.387 li
cp
0 0 0 rgb
f
876.555 288 mo
875.079 304.135 872.603 316.824 869.274 323.46 cv
869.271 288 li
876.555 288 li
cp
f
869.27 240.764 mo
876.902 240.763 li
876.914 242.995 876.927 245.225 876.927 247.489 cv
876.928 259.967 876.755 271.988 876.42 283.264 cv
869.273 283.264 li
869.27 240.764 li
cp
f
966.294 231.75 mo
964.324 175.668 li
960.435 185.474 958.524 207.774 958.743 234.953 cv
966.294 231.75 li
cp
f
961.007 288.641 mo
963.06 305.024 965.989 317.861 969.554 324.504 cv
968.285 288.39 li
961.007 288.641 li
cp
f
966.594 240.281 mo
958.965 240.545 li
959.034 242.818 959.102 245.09 959.183 247.396 cv
959.629 260.104 960.232 272.341 960.972 283.813 cv
968.114 283.566 li
966.594 240.281 li
cp
f
958.364 134.014 mo
958.364 139.454 958.157 149.581 957.895 160.132 cv
957.649 169.948 957.349 180.141 957.122 187.219 cv
957.122 187.228 li
957 191.35 956.868 195.623 956.728 200.009 cv
954.835 240.527 951.691 293.233 948.134 293.233 cv
886.967 293.233 li
883.212 293.233 879.918 234.578 878.073 193.459 cv
877.922 193.459 li
877.857 191.746 877.771 189.035 877.678 185.76 cv
877.452 178.24 877.16 167.755 876.943 159.67 cv
876.774 153.591 876.651 148.875 876.623 147.784 cv
876.623 120.781 872.962 96.4331 917.424 98.899 cv
955.033 98.899 958.364 113.732 958.364 134.014 cv
.454902 .776471 .25098 rgb
f
956.398 328.71 mo
956.167 317.709 953.139 307.624 948.176 299.569 cv
888.039 299.569 li
883.087 307.63 880.063 317.716 879.83 328.71 cv
956.398 328.71 li
cp
0 0 0 rgb
f
924.632 141.759 mo
922.629 141.759 920.561 141.704 918.455 141.629 cv
902.528 141.062 881.649 141.907 881.649 132.519 cv
881.649 123.131 902.519 107.632 918.455 107.632 cv
934.393 107.632 946.748 115.26 947.312 124.631 cv
948.198 139.369 937.857 141.759 924.632 141.759 cv
.545098 .807843 .396078 rgb
f
888.472 226.322 mo
887.598 209.518 900.686 195.402 917.149 195.402 cv
956.872 195.402 li
956.971 192.176 957.067 188.995 957.157 185.927 cv
920.451 165.569 li
877.678 185.76 li
878.263 221.033 882.978 293.23 886.969 293.23 cv
893.574 293.23 li
891.578 279.317 889.814 252.189 888.472 226.322 cv
.592157 .937255 .368627 rgb
f
957.895 160.132 mo
957.885 160.348 957.875 160.564 957.875 160.781 cv
957.64 170.391 957.339 180.301 957.122 187.219 cv
930.421 183.915 887.87 185.233 877.678 185.76 cv
877.452 178.24 877.16 167.755 876.943 159.67 cv
878.092 159.548 879.541 159.407 881.244 159.247 cv
897.706 157.713 937.574 154.786 957.895 160.132 cv
0 0 0 rgb
f
927.814 181.176 mo
902.506 181.176 881.922 171.398 881.244 159.247 cv
890.589 158.376 907.483 157.056 924.056 157.056 cv
936.677 157.056 949.11 157.821 957.895 160.132 cv
957.885 160.348 957.875 160.564 957.875 160.781 cv
957.875 160.781 li
957.687 167.238 957.678 167.643 957.442 176.009 cv
949.376 179.228 939.052 181.176 927.814 181.176 cv
.223529 .219608 .227451 rgb
f
967.431 332.975 mo
962.269 339.759 953.845 343.772 944.997 343.772 cv
943.611 343.772 li
947.466 334.847 958.394 329.682 967.431 332.975 cv
cp
1 0 0 rgb
f
445 628.003 mo
445 637.718 li
445 651.051 455.809 661.86 469.143 661.86 cv
482.575 661.86 li
482.575 628.003 li
445 628.003 li
.937255 .803922 .254902 rgb
f
444.492 602.47 mo
444.492 592.917 li
444.492 579.494 455.374 568.611 468.798 568.611 cv
482.575 568.611 li
482.575 602.47 li
444.492 602.47 li
f
518.763 551.286 mo
521.128 552.748 520.492 555.117 518.84 558.182 cv
517.187 561.246 512.691 566.473 510.326 565.011 cv
507.96 563.548 509.836 557.251 511.488 554.186 cv
513.141 551.122 516.397 549.823 518.763 551.286 cv
.137255 .207843 .556863 rgb
f
518.31 674.295 mo
520.877 673.293 520.632 670.841 519.499 667.517 cv
518.367 664.193 514.781 658.213 512.216 659.216 cv
509.649 660.218 510.481 666.768 511.614 670.092 cv
512.746 673.416 515.744 675.298 518.31 674.295 cv
f
514.921 560.443 mo
513.225 560.443 511.85 558.567 511.85 556.254 cv
511.85 553.94 513.225 552.064 514.921 552.064 cv
516.618 552.064 517.993 553.94 517.993 556.254 cv
517.993 558.567 516.618 560.443 514.921 560.443 cv
.184314 .27451 .654902 rgb
f
515.865 672.921 mo
514.472 672.921 513.342 671.14 513.342 668.943 cv
513.342 666.746 514.472 664.965 515.865 664.965 cv
517.259 664.965 518.389 666.746 518.389 668.943 cv
518.389 671.14 517.259 672.921 515.865 672.921 cv
f
653 641.91 mo
653 648.8 648.859 658.221 643.456 662.466 cv
639.88 665.261 635.626 667.115 631.014 667.115 cv
485.734 662.645 li
467.767 662.645 444.482 649.242 444.482 620.998 cv
444.482 604.235 li
444.482 582.729 466.303 562.588 485.734 562.588 cv
593.781 559.304 631.089 558.062 632.312 558.184 cv
642.778 558.946 652.586 569.11 652.982 582.456 cv
652.99 582.663 653 582.221 652.99 586.277 cv
653 591.858 653 605.939 653 641.91 cv
.258824 .337255 .898039 rgb
f
653.003 640.247 mo
652.958 643.928 653.128 645.161 652.779 647.452 cv
651.96 653.14 648.888 659.725 645.052 662.958 cv
642.184 665.353 637.418 666.65 634.028 666.85 cv
633.079 662.199 637.361 655.035 642.779 648.55 cv
646.02 644.697 649.65 641.824 653.003 640.247 cv
cp
1 .133333 .133333 rgb
f
631.024 566.033 mo
485.734 572.132 li
467.776 572.132 444.492 592.847 444.492 615.85 cv
444.492 614.965 444.492 614.127 444.482 613.337 cv
444.482 604.235 li
444.482 582.729 466.303 562.588 485.734 562.588 cv
593.781 559.304 631.089 558.062 632.312 558.184 cv
642.778 558.946 652.167 568.354 652.563 581.7 cv
652.571 581.907 639.955 566.033 631.024 566.033 cv
.121569 .176471 .458824 rgb
f
478.83 572.537 mo
489.048 572.537 519.247 573.595 528.192 573.989 cv
527.353 652.869 li
520.198 653.185 492.879 654.188 490.264 654.272 cv
467.838 654.272 447.622 657.937 449.666 613.472 cv
449.666 575.866 461.983 572.537 478.83 572.537 cv
.368627 .470588 .968627 rgb
f
556.386 661.63 mo
514.787 661.635 li
521.952 657.402 538.424 654.709 558.565 653.971 cv
556.386 661.63 li
cp
0 0 0 rgb
f
598.399 654.345 mo
610.59 655.82 620.176 658.297 625.188 661.625 cv
598.4 661.628 li
598.399 654.345 li
cp
f
562.715 661.63 mo
562.714 653.996 li
564.4 653.984 566.085 653.973 567.795 653.973 cv
577.222 653.972 586.304 654.145 594.822 654.479 cv
594.822 661.626 li
562.715 661.63 li
cp
f
554.522 564.78 mo
513.419 566.573 li
520.624 570.493 536.98 572.474 556.903 572.34 cv
554.522 564.78 li
cp
f
596.251 570.246 mo
608.252 568.245 617.649 565.355 622.504 561.813 cv
596.035 562.968 li
596.251 570.246 li
cp
f
560.775 564.508 mo
561.001 572.136 li
562.667 572.074 564.333 572.014 566.022 571.94 cv
575.337 571.534 584.305 570.969 592.712 570.266 cv
592.5 563.124 li
560.775 564.508 li
cp
f
636.802 574.499 mo
629.065 574.731 621.972 577.76 616.307 582.722 cv
616.307 642.859 li
621.977 647.811 629.069 650.835 636.802 651.067 cv
636.802 574.499 li
cp
f
477.588 649.248 mo
469.792 649.248 456.921 628.379 456.921 612.442 cv
456.921 596.505 463.255 584.149 471.037 583.586 cv
471.527 583.55 472.002 583.533 472.46 583.533 cv
485.163 583.533 485.61 596.986 485.153 612.442 cv
484.682 628.369 485.384 649.248 477.588 649.248 cv
.47451 .54902 .976471 rgb
f
611.043 643.929 mo
611.043 582.762 li
611.043 579.201 567.275 576.059 533.633 574.167 cv
529.603 574.016 525.693 573.873 521.938 573.74 cv
521.938 653.155 li
556.016 651.39 611.043 647.92 611.043 643.929 cv
cp
.368627 .470588 .968627 rgb
f
555.482 642.427 mo
541.527 643.299 529.806 630.211 529.806 613.748 cv
529.806 574.025 li
527.127 573.927 524.485 573.831 521.938 573.74 cv
513.419 612.313 li
521.938 653.155 li
556.016 651.39 611.043 647.92 611.043 643.929 cv
611.043 637.323 li
599.489 639.319 576.962 641.083 555.482 642.427 cv
.6 .686275 1 rgb
f
609.728 583.225 mo
534.745 583.225 li
532.846 583.225 531.307 581.686 531.307 579.787 cv
531.307 577.937 li
531.307 576.038 532.846 574.499 534.745 574.499 cv
609.728 574.499 li
611.626 574.499 613.165 576.038 613.165 577.937 cv
613.165 579.787 li
613.165 581.686 611.626 583.225 609.728 583.225 cv
cp
0 0 0 rgb
f
609.27 580.013 mo
536.253 580.013 li
536.253 577.359 li
609.27 577.359 li
609.27 580.013 li
cp
.478431 .552941 .827451 rgb
f
609.728 652.355 mo
534.745 652.355 li
532.846 652.355 531.307 650.816 531.307 648.918 cv
531.307 647.067 li
531.307 645.169 532.846 643.63 534.745 643.63 cv
609.728 643.63 li
611.626 643.63 613.165 645.169 613.165 647.067 cv
613.165 648.918 li
613.165 650.816 611.626 652.355 609.728 652.355 cv
cp
0 0 0 rgb
f
609.27 649.144 mo
536.253 649.144 li
536.253 646.49 li
609.27 646.49 li
609.27 649.144 li
cp
.478431 .552941 .827451 rgb
f
552.872 644.746 mo
548.749 644.746 li
548.749 581.856 li
552.872 581.856 li
552.872 644.746 li
cp
0 0 0 rgb
f
600.461 644.746 mo
596.338 644.746 li
596.338 581.856 li
600.461 581.856 li
600.461 644.746 li
cp
f
521.941 653.157 mo
506.495 653.702 500.106 653.918 500.106 653.918 cv
499.776 652.487 499.475 651.097 499.193 649.666 cv
497.15 639.746 495.955 629.938 495.541 620.282 cv
495.494 619.021 495.447 617.76 495.428 616.508 cv
495.193 605.892 495.917 595.464 497.527 585.252 cv
497.583 584.913 497.64 584.564 497.696 584.226 cv
498.308 580.452 499.052 576.706 499.908 572.988 cv
500.04 572.988 504.614 573.12 511.127 573.346 cv
511.88 573.374 512.727 573.402 513.715 573.44 cv
516.275 573.524 519.061 573.628 521.941 573.741 cv
518.59 604.019 521.96 653.129 521.941 653.157 cv
f
499.193 649.666 mo
499.155 649.666 li
497.141 640.028 495.936 630.174 495.541 620.282 cv
495.494 619.021 495.447 617.76 495.428 616.508 cv
495.428 616.508 li
495.428 616.508 li
495.447 617.76 495.494 619.021 495.541 620.282 cv
495.955 629.938 497.15 639.746 499.193 649.666 cv
499.193 649.666 li
.509804 .588235 .976471 rgb
f
499.268 649.666 mo
499.193 649.666 li
499.193 649.666 li
497.15 639.746 495.955 629.938 495.541 620.282 cv
495.494 619.021 495.447 617.76 495.428 616.508 cv
495.428 616.508 li
495.221 606.042 495.917 595.558 497.527 585.252 cv
497.583 584.913 497.64 584.564 497.696 584.226 cv
498.308 580.452 499.052 576.706 499.908 572.988 cv
500.04 572.988 504.614 573.12 511.127 573.346 cv
511.88 573.374 512.727 573.402 513.715 573.44 cv
516.388 581.506 517.988 591.84 517.988 603.077 cv
517.988 628.818 509.593 649.666 499.268 649.666 cv
.223529 .219608 .227451 rgb
f
652.979 582.454 mo
643.506 578.296 634.341 567.279 632.311 558.188 cv
642.922 558.628 653.353 568.98 652.979 582.454 cv
cp
1 .133333 .133333 rgb
f
278.966 464.156 mo
278.966 660.297 li
278.966 669.179 269.203 675.956 259.245 678.844 cv
259.22 678.844 li
255.794 679.871 252.345 680.41 249.262 680.41 cv
209.867 679.994 li
206.931 679.994 203.603 679.505 200.275 678.599 cv
190.806 675.981 181.41 669.863 181.41 661.495 cv
181.41 464.571 li
181.41 453.658 187.185 446.367 195.039 441.693 cv
204.435 436.065 216.84 434.157 225.992 434.157 cv
237.761 434.157 li
246.863 434.157 255.158 435.601 261.863 438.708 cv
271.675 443.309 278.134 451.505 278.966 464.156 cv
.996078 .862745 .239216 rgb
f
267.438 442.037 mo
270.472 446.277 272.372 451.54 272.795 457.971 cv
272.795 654.135 li
272.795 666.095 255.04 674.248 243.08 674.248 cv
203.693 673.828 li
197.338 673.828 189.134 671.551 183.169 667.55 cv
187.817 675.304 200.742 680 209.866 680 cv
249.252 680.421 li
261.212 680.421 278.968 672.268 278.968 660.307 cv
278.968 464.144 li
278.307 454.096 274.06 446.885 267.438 442.037 cv
cp
.94902 .568627 .0235294 rgb
f
266.431 653.296 mo
266.577 656.596 266.768 659.885 266.981 663.185 cv
267.126 665.513 265.792 667.698 263.605 668.625 cv
241.201 678.106 218.808 678.05 196.404 668.471 cv
193.442 667.197 193.292 667.523 193.857 655.5 cv
194.445 642.959 195.812 616.979 195.574 561.727 cv
195.41 531.417 190.615 506.451 191.863 476.462 cv
192.928 455.382 195.271 441.531 226.994 441.179 cv
273.11 440.667 266.533 457.668 268.495 476.098 cv
269.728 505.077 265.746 535.981 265.658 565.591 cv
265.601 583.437 265.366 601.183 265.523 618.885 cv
265.613 630.373 265.859 641.84 266.431 653.296 cv
1 .898039 .25098 rgb
f
200.585 663.581 mo
200.844 659.918 201.068 656.209 201.259 652.49 cv
201.853 641.553 202.234 630.418 202.47 619.304 cv
202.884 599.604 202.851 579.993 202.772 561.728 cv
202.716 551.364 202.122 541.675 201.416 532.206 cv
200.305 517.373 198.915 503.081 198.859 487.531 cv
198.848 483.922 198.904 480.236 199.061 476.461 cv
200.11 455.695 202.422 441.954 232.819 441.213 cv
230.977 441.168 229.038 441.156 226.994 441.179 cv
195.271 441.531 192.928 455.382 191.863 476.462 cv
190.615 506.451 195.41 531.417 195.574 561.728 cv
195.812 616.979 194.445 642.959 193.856 655.5 cv
193.292 667.523 193.441 667.197 196.404 668.471 cv
208.707 673.73 221.006 676.118 233.307 675.633 cv
233.514 675.621 233.719 675.61 233.921 675.601 cv
226.407 675.271 200.028 671.611 200.585 663.581 cv
cp
.956863 .956863 .384314 rgb
f
276.165 564.492 mo
276.164 532.82 274.763 508.717 274.763 508.717 cv
274.763 508.717 266.826 533.005 268.646 571.336 cv
276.165 564.492 li
cp
.196078 .207843 .188235 rgb
f
269.065 579.704 mo
270.837 616.412 270.838 650.005 270.838 650.005 cv
270.838 650.005 275.094 606.998 275.997 575.245 cv
269.065 579.704 li
cp
f
183.869 564.492 mo
183.869 532.82 185.27 508.717 185.27 508.717 cv
185.27 508.717 193.207 533.005 191.388 571.336 cv
183.869 564.492 li
cp
f
190.968 579.704 mo
189.196 616.412 189.195 650.005 189.195 650.005 cv
189.195 650.005 184.939 606.998 184.036 575.245 cv
190.968 579.704 li
cp
f
183 508.717 mo
183 508.717 174.497 510.959 170.479 514.978 cv
166.46 518.995 169.544 524.135 169.544 524.135 cv
183.869 519.275 li
183 508.717 li
cp
.996078 .862745 .239216 rgb
f
276.865 507.553 mo
276.865 507.553 285.369 509.795 289.387 513.813 cv
293.405 517.831 290.321 522.971 290.321 522.971 cv
275.997 518.111 li
276.865 507.553 li
cp
.94902 .568627 .0235294 rgb
f
238.353 473.256 mo
222.901 473.256 205.646 470.362 205.646 463.532 cv
205.646 451.909 225.221 447.321 225.221 447.321 cv
264.371 447.321 267.676 463.307 261.64 469.343 cv
259.151 471.832 249.196 473.256 238.353 473.256 cv
1 .937255 .364706 rgb
f
205.646 537.856 mo
205.646 537.856 202.282 614.014 207.481 616.461 cv
212.681 618.908 254.736 619.06 258.865 614.932 cv
262.995 610.803 260.701 543.727 260.701 540.026 cv
260.701 536.326 209.928 532.044 205.646 537.856 cv
.956863 .956863 .384314 rgb
f
248.369 466.313 mo
253.065 466.313 li
253.065 468.008 li
241.635 468.008 li
241.635 466.313 li
246.354 466.313 li
246.354 452.57 li
248.369 452.57 li
248.369 466.313 li
cp
0 0 0 rgb
f
234.072 458.983 mo
235.583 463.599 235.549 462.978 236.384 466.244 cv
236.431 466.244 li
237.232 463.031 237.597 462.442 238.721 458.983 cv
234.072 458.983 li
cp
239.133 457.426 mo
240.736 452.57 li
242.798 452.57 li
237.553 468.008 li
235.148 468.008 li
229.88 452.57 li
232.01 452.57 li
233.66 457.426 li
239.133 457.426 li
cp
f
219.474 452.57 mo
219.703 452.96 223.07 458.732 223.23 459.029 cv
223.275 459.029 li
223.576 458.412 226.697 452.762 226.803 452.57 cv
229.093 452.57 li
224.375 460.381 li
228.91 468.008 li
226.597 468.008 li
223.622 462.729 223.642 462.784 223.138 461.777 cv
223.069 461.777 li
222.266 463.47 221.673 464.358 219.565 468.008 cv
217.275 468.008 li
221.97 460.495 li
217.16 452.57 li
219.474 452.57 li
cp
f
212.846 468.008 mo
212.846 452.57 li
214.839 452.57 li
214.839 468.008 li
212.846 468.008 li
cp
f
218.194 581.43 mo
218.194 572.989 li
246.113 572.989 li
246.113 581.43 li
218.194 581.43 li
f
218.632 580.751 mo
218.632 573.668 li
245.675 573.668 li
245.675 580.751 li
218.632 580.751 li
1 .427451 0 rgb
f
238.957 580.751 mo
238.957 579.31 li
240.398 579.31 li
240.398 580.751 li
238.957 580.751 li
cp
0 0 0 rgb
f
235.721 580.751 mo
235.721 579.31 li
237.163 579.31 li
237.163 580.751 li
235.721 580.751 li
cp
f
232.486 580.751 mo
232.486 579.31 li
233.928 579.31 li
233.928 580.751 li
232.486 580.751 li
cp
f
229.25 580.751 mo
229.25 579.31 li
230.692 579.31 li
230.692 580.751 li
229.25 580.751 li
cp
f
226.015 580.751 mo
226.015 579.31 li
227.457 579.31 li
227.457 580.751 li
226.015 580.751 li
cp
f
222.779 580.751 mo
222.779 579.31 li
224.221 579.31 li
224.221 580.751 li
222.779 580.751 li
cp
f
237.339 578.96 mo
237.339 577.519 li
238.781 577.519 li
238.781 578.96 li
237.339 578.96 li
cp
f
234.104 578.96 mo
234.104 577.519 li
235.545 577.519 li
235.545 578.96 li
234.104 578.96 li
cp
f
230.868 578.96 mo
230.868 577.519 li
232.31 577.519 li
232.31 578.96 li
230.868 578.96 li
cp
f
227.633 578.96 mo
227.633 577.519 li
229.075 577.519 li
229.075 578.96 li
227.633 578.96 li
cp
f
224.397 578.96 mo
224.397 577.519 li
225.839 577.519 li
225.839 578.96 li
224.397 578.96 li
cp
f
238.804 573.39 mo
238.804 574.832 li
240.246 574.832 li
240.246 573.39 li
238.804 573.39 li
cp
f
235.568 573.39 mo
235.568 574.832 li
237.01 574.832 li
237.01 573.39 li
235.568 573.39 li
cp
f
232.333 573.39 mo
232.333 574.832 li
233.775 574.832 li
233.775 573.39 li
232.333 573.39 li
cp
f
229.097 573.39 mo
229.097 574.832 li
230.539 574.832 li
230.539 573.39 li
229.097 573.39 li
cp
f
225.862 573.39 mo
225.862 574.832 li
227.304 574.832 li
227.304 573.39 li
225.862 573.39 li
cp
f
222.626 573.39 mo
222.626 574.832 li
224.068 574.832 li
224.068 573.39 li
222.626 573.39 li
cp
f
237.186 575.181 mo
237.186 576.623 li
238.628 576.623 li
238.628 575.181 li
237.186 575.181 li
cp
f
233.951 575.181 mo
233.951 576.623 li
235.393 576.623 li
235.393 575.181 li
233.951 575.181 li
cp
f
230.715 575.181 mo
230.715 576.623 li
232.157 576.623 li
232.157 575.181 li
230.715 575.181 li
cp
f
227.479 575.181 mo
227.479 576.623 li
228.921 576.623 li
228.921 575.181 li
227.479 575.181 li
cp
f
224.244 575.181 mo
224.244 576.623 li
225.686 576.623 li
225.686 575.181 li
224.244 575.181 li
cp
f
268.73 487.212 mo
236.952 469.145 205.063 479.52 191.657 485.911 cv
191.613 502.442 193.156 517.705 194.32 533.611 cv
230.423 523.178 258.753 530.547 266.848 533.164 cv
267.725 517.737 268.76 502.276 268.73 487.212 cv
cp
.196078 .207843 .188235 rgb
f
228.993 528.228 mo
247.851 527.774 261.601 531.468 266.848 533.164 cv
267.725 517.737 268.76 502.276 268.73 487.212 cv
255.006 479.409 241.261 476.912 228.993 477.107 cv
228.993 528.228 li
cp
.290196 .298039 .282353 rgb
f
266.625 657.203 mo
266.555 655.901 266.489 654.6 266.431 653.296 cv
265.923 643.116 265.672 632.927 265.56 622.723 cv
244.484 628.977 208.698 624.891 195.072 622.763 cv
194.68 638.804 194.163 648.973 193.856 655.5 cv
193.832 656.013 193.81 656.5 193.788 656.969 cv
219.6 663.997 256.124 658.91 266.625 657.203 cv
cp
.196078 .207843 .188235 rgb
f
240.82 577.809 mo
221.168 577.809 li
221.168 576.279 li
240.82 576.279 li
240.82 577.809 li
1 .580392 .2 rgb
f
218.632 573.668 mo
221.168 576.279 li
221.168 577.809 li
218.632 580.751 li
218.632 573.668 li
cp
1 .462745 .101961 rgb
f
245.675 580.751 mo
245.675 580.751 li
240.82 577.809 li
240.82 576.279 li
245.675 573.668 li
245.675 580.751 li
1 .196078 0 rgb
f
200.275 678.599 mo
190.806 675.981 181.41 670.706 181.41 661.495 cv
181.41 660.321 li
188.53 662.499 195.479 668.616 199.712 677.327 cv
199.908 677.742 200.104 678.158 200.275 678.599 cv
cp
.937255 .027451 .027451 rgb
f
278.966 660.076 mo
278.966 660.297 li
278.966 670.059 269.203 675.956 259.245 678.844 cv
259.44 678.33 259.661 677.816 259.905 677.327 cv
264.31 668.298 271.602 662.059 278.966 660.076 cv
cp
f
195.039 441.693 mo
194.99 453.585 189.264 463.642 181.41 466.872 cv
181.41 464.571 li
181.41 453.658 186.412 445.883 195.039 441.693 cv
cp
.607843 .807843 .807843 rgb
f
262.685 439.106 mo
263.68 450.956 270.787 460.41 278.874 463.004 cv
278.874 463.004 280.451 447.321 262.685 439.106 cv
cp
f
418.035 465.91 mo
418.035 656.056 li
418.035 664.659 408.567 671.228 398.911 674.033 cv
398.891 674.033 li
396.831 674.654 394.76 675.087 392.765 675.332 cv
392.322 675.389 391.88 675.426 391.456 675.464 cv
390.694 675.519 389.96 675.548 389.235 675.548 cv
351.052 675.143 li
350.336 675.143 349.603 675.115 348.85 675.059 cv
347.72 674.973 346.553 674.823 345.357 674.607 cv
344.567 674.476 343.767 674.306 342.967 674.108 cv
342.563 674.014 342.158 673.91 341.753 673.798 cv
341.226 673.647 340.69 673.496 340.162 673.317 cv
340.03 673.28 li
338.214 672.688 336.417 671.971 334.713 671.115 cv
333.555 670.541 332.435 669.91 331.391 669.214 cv
330.863 668.866 330.355 668.508 329.875 668.142 cv
328.896 667.407 327.993 666.607 327.212 665.76 cv
327.014 665.553 326.826 665.337 326.638 665.12 cv
326.459 664.903 326.28 664.688 326.11 664.461 cv
325.931 664.235 325.771 664.01 325.612 663.783 cv
325.461 663.558 325.311 663.322 325.169 663.087 cv
324.087 661.289 323.466 659.332 323.466 657.214 cv
323.466 466.324 li
323.466 455.746 329.066 448.678 336.68 444.15 cv
345.781 438.691 357.81 436.847 366.685 436.847 cv
378.092 436.847 li
386.911 436.847 394.957 438.24 401.452 441.261 cv
407.537 444.106 412.281 448.394 415.122 454.311 cv
415.137 454.343 li
415.41 454.913 415.671 455.493 415.908 456.094 cv
416.003 456.329 416.096 456.574 416.19 456.818 cv
416.463 457.562 416.708 458.324 416.915 459.115 cv
416.99 459.379 417.057 459.643 417.122 459.906 cv
417.188 460.179 417.254 460.452 417.311 460.725 cv
417.433 461.261 417.536 461.816 417.63 462.391 cv
417.668 462.616 417.705 462.843 417.734 463.077 cv
417.771 463.285 417.8 463.511 417.828 463.728 cv
417.875 464.075 417.913 464.424 417.941 464.781 cv
417.979 465.157 418.007 465.534 418.035 465.91 cv
.878431 .862745 .780392 rgb
f
323.466 635.797 mo
323.466 657.215 li
323.466 665.326 332.574 671.256 341.753 673.794 cv
344.979 674.672 348.205 675.146 351.051 675.146 cv
389.238 675.549 li
392.226 675.549 395.57 675.027 398.891 674.031 cv
398.915 674.031 li
408.568 671.232 418.032 664.662 418.032 656.052 cv
418.032 635.797 li
323.466 635.797 li
cp
.172549 .172549 .227451 rgb
f
418.032 502.973 mo
418.032 465.924 li
417.226 453.661 410.964 445.716 401.453 441.257 cv
394.954 438.244 386.913 436.845 378.09 436.845 cv
366.681 436.845 li
357.811 436.845 345.785 438.695 336.677 444.15 cv
329.064 448.681 323.466 455.749 323.466 466.327 cv
323.466 502.973 li
418.032 502.973 li
f
418.035 465.91 mo
418.035 656.057 li
418.035 664.659 408.567 671.229 398.911 674.033 cv
398.911 674.033 396.106 674.922 392.765 675.332 cv
392.322 675.389 391.88 675.426 391.457 675.464 cv
390.675 675.529 389.932 675.558 389.226 675.558 cv
351.052 675.153 li
350.336 675.153 349.603 675.125 348.85 675.059 cv
345.814 674.83 342.935 674.193 340.03 673.28 cv
338.205 672.678 336.407 671.963 334.713 671.115 cv
331.031 669.275 327.277 666.602 325.169 663.087 cv
330.958 666.965 338.911 669.167 345.066 669.167 cv
383.25 669.572 li
394.835 669.572 412.049 661.676 412.049 650.08 cv
412.049 459.925 li
411.635 453.694 409.8 448.593 406.854 444.48 cv
410.863 447.416 413.979 451.257 415.908 456.094 cv
417.082 459.025 417.763 462.495 417.941 464.781 cv
417.979 465.157 418.007 465.534 418.035 465.91 cv
cp
.376471 .372549 .407843 rgb
f
406.638 526.768 mo
407.391 513.807 408.135 500.443 408.106 487.784 cv
408.097 484.198 408.03 481.035 407.88 477.496 cv
406.039 460.179 412.045 443.891 370.814 443.644 cv
329.582 443.891 335.589 460.179 333.748 477.496 cv
333.598 481.035 333.531 484.198 333.522 487.784 cv
333.493 500.443 334.237 513.807 334.99 526.768 cv
335.688 538.817 336.462 551.526 336.496 564.245 cv
336.597 595.151 337.259 627.278 335.216 658.852 cv
335.075 661.11 336.364 664.037 338.482 664.932 cv
349.219 669.477 360.016 671.797 370.814 671.86 cv
381.612 671.797 392.409 669.477 403.146 664.932 cv
405.264 664.037 406.553 661.11 406.412 658.852 cv
404.369 627.278 405.031 595.151 405.132 564.245 cv
405.166 551.526 405.94 538.817 406.638 526.768 cv
.905882 .854902 .937255 rgb
f
373.414 443.68 mo
373.249 443.689 li
346.038 444.424 343.965 457.732 343.024 477.854 cv
342.305 496.696 343.841 513.47 345.071 530.955 cv
345.733 540.414 346.299 550.08 346.351 560.508 cv
346.421 578.212 346.456 597.224 346.082 616.32 cv
345.959 622.494 345.777 628.678 345.559 634.833 cv
344.244 634.315 341.413 634.202 338.983 634.352 cv
339.523 619.172 340.037 596.019 339.897 560.508 cv
339.845 550.88 339.34 541.676 338.722 532.631 cv
337.685 517.261 336.335 502.381 336.387 486.748 cv
336.396 483.811 336.448 480.847 336.57 477.854 cv
337.493 458.061 339.497 444.847 365.47 443.718 cv
366.324 443.68 367.195 443.661 368.083 443.651 cv
369.32 443.643 370.548 443.633 371.776 443.651 cv
372.325 443.651 372.874 443.671 373.414 443.68 cv
1 1 1 rgb
f
415.316 563.185 mo
415.315 532.483 413.957 509.119 413.957 509.119 cv
413.957 509.119 406.264 532.663 408.027 569.818 cv
415.316 563.185 li
cp
.196078 .207843 .188235 rgb
f
408.434 577.931 mo
410.152 613.513 410.153 646.076 410.153 646.076 cv
410.153 646.076 414.278 604.388 415.153 573.607 cv
408.434 577.931 li
cp
f
325.85 563.185 mo
325.85 532.483 327.208 509.119 327.208 509.119 cv
327.208 509.119 334.901 532.663 333.138 569.818 cv
325.85 563.185 li
cp
f
332.731 577.931 mo
331.013 613.513 331.012 646.076 331.012 646.076 cv
331.012 646.076 326.887 604.388 326.012 573.607 cv
332.731 577.931 li
cp
f
329.158 508.304 mo
329.158 508.304 320.916 510.478 317.021 514.372 cv
313.126 518.268 316.115 523.249 316.115 523.249 cv
330 518.539 li
329.158 508.304 li
cp
.878431 .862745 .780392 rgb
f
411.383 505.718 mo
411.383 505.718 419.626 507.893 423.521 511.787 cv
427.416 515.682 424.427 520.664 424.427 520.664 cv
410.542 515.954 li
411.383 505.718 li
cp
f
378.663 474.746 mo
363.684 474.745 346.959 471.94 346.959 465.319 cv
346.959 454.053 365.934 449.605 365.934 449.605 cv
403.884 449.605 407.087 465.102 401.236 470.952 cv
398.824 473.365 389.174 474.746 378.663 474.746 cv
.941176 .909804 .945098 rgb
f
370.422 615.236 mo
360.374 615.236 350.99 614.62 348.738 613.561 cv
347.452 612.955 346.707 607.697 346.309 600.203 cv
346.385 591.953 346.403 583.784 346.394 575.798 cv
346.48 575.807 346.568 575.811 346.657 575.811 cv
372.555 575.811 li
398.454 575.811 li
399.758 575.811 400.827 574.807 400.928 573.528 cv
401.027 591.398 400.629 609.995 398.547 612.078 cv
396.332 614.292 382.868 615.236 370.422 615.236 cv
400.807 562.195 mo
400.476 561.213 399.548 560.505 398.454 560.505 cv
372.555 560.505 li
346.657 560.505 li
346.553 560.505 346.452 560.511 346.352 560.523 cv
346.352 560.518 346.351 560.513 346.351 560.508 cv
346.345 559.131 346.329 557.769 346.305 556.417 cv
346.601 545.482 346.959 537.364 346.959 537.364 cv
348.43 535.369 355.554 534.601 364.144 534.601 cv
379.802 534.601 400.326 537.153 400.326 539.469 cv
400.326 540.785 400.626 550.38 400.807 562.195 cv
f
346.309 600.203 mo
345.944 593.306 345.873 584.517 345.948 575.709 cv
346.092 575.752 346.241 575.782 346.394 575.798 cv
346.403 583.784 346.385 591.953 346.309 600.203 cv
346.2 560.547 mo
346.234 559.133 346.269 557.756 346.305 556.417 cv
346.329 557.769 346.345 559.131 346.351 560.508 cv
346.351 560.513 346.352 560.518 346.352 560.523 cv
346.3 560.53 346.25 560.537 346.2 560.547 cv
1 1 1 rgb
f
333.54 485.125 mo
333.53 485.993 333.524 486.875 333.521 487.784 cv
333.493 500.443 334.237 513.807 334.99 526.768 cv
335.087 528.442 335.186 530.131 335.283 531.829 cv
355.983 526.823 386.076 526.034 406.354 531.655 cv
406.449 530.016 406.544 528.385 406.638 526.768 cv
407.391 513.807 408.135 500.443 408.106 487.784 cv
408.105 487.324 408.103 486.872 408.1 486.425 cv
385.898 475.357 357.11 476.152 333.54 485.125 cv
cp
.196078 .207843 .188235 rgb
f
369.591 478.269 mo
369.591 527.776 li
382.699 527.551 395.845 528.742 406.354 531.655 cv
406.449 530.016 406.544 528.385 406.638 526.768 cv
407.391 513.807 408.135 500.443 408.106 487.784 cv
408.105 487.324 408.103 486.872 408.1 486.425 cv
396.5 480.643 383.103 478.1 369.591 478.269 cv
cp
.290196 .298039 .282353 rgb
f
406.053 652.785 mo
406.053 652.785 365.853 661.677 335.395 651.905 cv
335.395 651.905 336.451 630.219 336.687 619.273 cv
346.535 621.034 405.029 619.052 405.029 619.052 cv
405.12 630.367 405.479 641.503 406.053 652.785 cv
cp
.196078 .207843 .188235 rgb
f
341.753 673.794 mo
332.574 671.256 323.466 666 323.466 657.215 cv
323.466 656.076 li
330.368 658.188 337.104 664.116 341.208 672.561 cv
341.397 672.964 341.587 673.367 341.753 673.794 cv
cp
.937255 .027451 .027451 rgb
f
418.035 655.839 mo
418.032 656.052 li
418.035 665.235 408.568 671.232 398.915 674.031 cv
399.104 673.533 399.318 673.035 399.555 672.561 cv
403.825 663.809 410.896 657.76 418.035 655.839 cv
cp
f
336.677 444.15 mo
336.63 455.678 331.08 465.426 323.466 468.557 cv
323.466 466.327 li
323.466 455.749 327.294 448.765 336.677 444.15 cv
cp
.607843 .807843 .807843 rgb
f
402.376 441.706 mo
403.341 453.193 410.104 462.293 417.942 464.808 cv
417.942 464.808 419.588 449.605 402.376 441.706 cv
cp
f
398.454 575.811 mo
372.555 575.811 li
372.555 560.505 li
398.454 560.505 li
399.825 560.505 400.936 561.617 400.936 562.988 cv
400.936 573.328 li
400.936 574.7 399.825 575.811 398.454 575.811 cv
.976471 .0117647 .0117647 rgb
f
372.555 575.811 mo
346.657 575.811 li
345.285 575.811 344.174 574.7 344.174 573.328 cv
344.174 562.988 li
344.174 561.617 345.285 560.505 346.657 560.505 cv
372.555 560.505 li
372.555 575.811 li
.219608 .156863 .678431 rgb
f
395.284 568.158 mo
372.555 568.158 li
372.555 563.455 li
395.284 563.455 li
396.583 563.455 397.636 564.508 397.636 565.807 cv
397.636 567.105 396.583 568.158 395.284 568.158 cv
.984314 .403922 .364706 rgb
f
372.555 568.158 mo
351.759 568.158 li
350.46 568.158 349.408 567.105 349.408 565.807 cv
349.408 564.508 350.46 563.455 351.759 563.455 cv
372.555 563.455 li
372.555 568.158 li
.533333 .490196 .792157 rgb
f
696.588 636.509 mo
696.588 651.107 li
696.588 656.901 701.284 661.598 707.077 661.598 cv
707.077 636.509 li
696.588 636.509 li
.937255 .803922 .254902 rgb
f
696.39 591.165 mo
696.397 576.776 li
696.401 570.866 701.193 566.079 707.103 566.083 cv
707.089 591.172 li
696.39 591.165 li
f
971.492 652.351 mo
971.492 658.556 li
971.492 663.103 967.807 666.788 963.26 666.788 cv
963.26 644.117 li
967.807 644.117 971.492 647.804 971.492 652.351 cv
cp
.74902 .00784314 .00784314 rgb
f
971.492 566.883 mo
971.492 573.089 li
971.492 577.636 967.807 581.321 963.26 581.321 cv
963.26 558.65 li
967.807 558.65 971.492 562.337 971.492 566.883 cv
cp
f
783.72 562.447 mo
783.72 663.736 li
710.553 663.736 li
707.14 663.736 704.522 661.686 703.315 658.843 cv
697.179 644.235 694.12 628.584 694.12 612.95 cv
694.12 597.412 697.141 581.883 703.165 567.416 cv
703.993 565.431 705.489 563.896 707.296 563.097 cv
708.219 562.673 709.235 562.447 710.28 562.447 cv
783.72 562.447 li
.764706 .956863 .945098 rgb
f
785.614 662.117 mo
784.689 663.736 li
710.553 663.736 li
707.14 663.736 704.522 661.686 703.315 658.843 cv
697.179 644.235 694.12 628.584 694.12 612.95 cv
694.12 597.412 697.141 581.883 703.165 567.416 cv
703.993 565.431 705.489 563.896 707.296 563.097 cv
707.249 563.19 li
695.042 592.197 695.033 625.478 707.399 654.607 cv
708.671 657.591 711.458 662.353 714.536 662.353 cv
785.614 662.117 li
.352941 .407843 .403922 rgb
f
726.479 655.986 mo
712.891 653.457 li
709.026 652.737 705.826 650.016 704.255 646.336 cv
704.014 645.618 703.779 644.9 703.552 644.179 cv
703.427 643.639 703.334 643.086 703.277 642.521 cv
701.274 622.729 701.271 601.372 703.246 581.636 cv
703.8 576.103 707.734 571.654 712.836 570.692 cv
727.302 567.963 li
716.557 584.669 726.479 655.986 726.479 655.986 cv
.854902 .980392 .972549 rgb
f
704.255 646.336 mo
703.962 645.648 703.725 644.927 703.552 644.179 cv
703.779 644.9 704.014 645.618 704.255 646.336 cv
.65098 .709804 .705882 rgb
f
735.664 657.027 mo
760.102 649.354 li
760.102 576.875 li
735.664 569.003 li
735.664 569.003 722.146 603.113 735.664 657.027 cv
cp
.196078 .207843 .188235 rgb
f
743.507 661.598 mo
762.327 652.916 li
783.71 652.916 li
783.71 661.504 li
743.507 661.598 li
cp
f
744.131 564.268 mo
763.488 572.53 li
785.296 572.056 li
785.614 563.459 li
744.131 564.268 li
cp
f
766.037 641.674 mo
766.037 646.352 769.567 650.145 773.923 650.145 cv
778.862 650.145 li
778.862 619.795 li
766.037 619.795 li
766.037 641.674 li
1 0 0 rgb
f
766.037 619.795 mo
778.862 619.795 li
778.862 606.202 li
766.037 606.202 li
766.037 619.795 li
cp
.396078 .478431 .47451 rgb
f
773.923 575.293 mo
769.567 575.293 766.037 579.086 766.037 583.765 cv
766.037 606.202 li
778.862 606.202 li
778.862 575.293 li
773.923 575.293 li
.0313726 .262745 1 rgb
f
771.02 644.746 mo
769.656 644.746 768.55 643.641 768.55 642.276 cv
768.55 624.686 li
768.55 623.321 769.656 622.216 771.02 622.216 cv
772.384 622.216 773.49 623.321 773.49 624.686 cv
773.49 642.276 li
773.49 643.641 772.384 644.746 771.02 644.746 cv
1 .145098 .145098 rgb
f
771.02 604.387 mo
769.656 604.387 768.55 603.281 768.55 601.917 cv
768.55 584.326 li
768.55 582.962 769.656 581.856 771.02 581.856 cv
772.384 581.856 773.49 582.962 773.49 584.326 cv
773.49 601.917 li
773.49 603.281 772.384 604.387 771.02 604.387 cv
.14902 .368627 1 rgb
f
966.732 554.626 mo
966.732 669.327 li
790.826 669.327 li
790.421 669.327 790.025 669.289 789.64 669.224 cv
786.873 668.725 784.661 666.513 783.955 663.651 cv
783.795 663.03 783.71 662.362 783.71 661.684 cv
783.71 562.249 li
783.71 558.052 786.892 554.626 790.826 554.626 cv
966.732 554.626 li
.764706 .956863 .945098 rgb
f
790.969 554.624 mo
786.963 554.624 783.716 557.871 783.716 561.877 cv
783.716 613.092 li
966.735 613.092 li
966.735 554.624 li
790.969 554.624 li
.647059 .768627 .776471 rgb
f
929.982 640.247 mo
802.903 640.247 li
792.306 640.247 783.715 631.657 783.715 621.06 cv
783.715 598.003 li
783.715 597.942 783.715 597.882 783.716 597.821 cv
783.716 613.092 li
929.982 613.092 li
929.982 640.247 li
.854902 .980392 .972549 rgb
f
929.982 613.092 mo
783.716 613.092 li
783.716 597.821 li
783.813 587.308 792.367 578.815 802.903 578.815 cv
929.982 578.815 li
929.982 613.092 li
.796078 .886274 .890196 rgb
f
859.581 643.487 mo
823.878 643.487 li
809.336 665.274 li
859.581 665.274 li
859.581 643.487 li
cp
.196078 .207843 .188235 rgb
f
867.032 665.274 mo
942.441 665.274 li
922.164 643.487 li
867.032 643.487 li
867.032 665.274 li
cp
f
859.581 579.388 mo
823.878 579.388 li
809.336 557.601 li
859.581 557.601 li
859.581 579.388 li
cp
f
867.032 557.601 mo
942.441 557.601 li
922.164 579.388 li
867.032 579.388 li
867.032 557.601 li
cp
f
783.713 636.509 mo
929.982 636.509 li
929.982 651.728 li
783.713 651.728 li
783.713 636.509 li
cp
.956863 .0431373 .0862745 rgb
f
783.713 571.194 mo
929.982 571.194 li
929.982 586.434 li
783.713 586.434 li
783.713 571.194 li
cp
f
952.751 577.985 mo
947.438 583.298 944.461 586.276 939.148 591.588 cv
939.148 635.331 li
944.461 640.644 947.438 643.622 952.751 648.934 cv
956.826 648.934 li
956.826 577.985 li
952.751 577.985 li
cp
.196078 .207843 .188235 rgb
f
966.731 554.626 mo
966.731 669.327 li
790.826 669.327 li
790.468 669.327 790.063 669.289 789.64 669.224 cv
786.873 668.725 784.661 666.513 783.955 663.651 cv
784.793 663.755 785.489 663.83 785.706 663.83 cv
961.621 663.83 li
961.621 554.626 li
966.731 554.626 li
cp
.352941 .407843 .403922 rgb
f
714.536 604.387 mo
714.536 622.216 li
709.507 622.216 li
709.507 604.387 li
714.536 604.387 li
cp
.956863 .0431373 .0862745 rgb
f
703.724 616.003 mo
720.318 616.003 li
720.318 610.6 li
703.724 610.6 li
703.724 616.003 li
cp
f
744.131 564.268 mo
744.131 564.268 746.036 556.099 749.452 552.43 cv
752.867 548.76 757.235 551.576 757.235 551.576 cv
753.284 564.09 li
744.131 564.268 li
cp
.764706 .956863 .945098 rgb
f
743.507 661.598 mo
743.507 661.598 745.561 669.775 748.961 673.46 cv
752.361 677.146 756.741 674.351 756.741 674.351 cv
752.766 661.575 li
743.507 661.598 li
cp
f
728.626 395.511 mo
728.626 503.97 li
695.354 503.97 li
695.354 395.511 li
728.626 395.511 li
cp
.309804 .278431 .317647 rgb
f
996.213 474.098 mo
996.213 487.982 li
992.387 487.982 li
992.387 474.098 li
996.213 474.098 li
cp
.576471 0 0 rgb
f
996.213 414.37 mo
996.213 428.255 li
992.387 428.255 li
992.387 414.37 li
996.213 414.37 li
cp
f
656.707 404.068 mo
656.707 496.489 li
656.707 505.116 649.714 512.109 641.087 512.109 cv
616.83 512.109 li
608.204 512.109 601.211 505.116 601.211 496.489 cv
601.211 404.068 li
601.211 395.442 608.204 388.449 616.83 388.449 cv
641.087 388.449 li
649.714 388.449 656.707 395.442 656.707 404.068 cv
.0980392 .0588235 .0588235 rgb
f
799.626 391.535 mo
799.626 507.228 li
799.626 511.428 796.221 514.833 792.021 514.833 cv
757.943 514.833 li
753.743 514.833 750.339 511.428 750.339 507.228 cv
750.339 391.535 li
750.339 387.334 753.743 383.93 757.943 383.93 cv
792.021 383.93 li
796.221 383.93 799.626 387.334 799.626 391.535 cv
cp
f
977.87 391.535 mo
977.87 507.228 li
977.87 511.428 974.466 514.833 970.266 514.833 cv
936.188 514.833 li
931.988 514.833 928.583 511.428 928.583 507.228 cv
928.583 391.535 li
928.583 387.334 931.988 383.93 936.188 383.93 cv
970.266 383.93 li
974.466 383.93 977.87 387.334 977.87 391.535 cv
cp
f
994.3 408.871 mo
994.3 490.609 li
994.3 500.265 986.473 508.092 976.817 508.092 cv
725.357 508.092 li
725.357 391.389 li
976.817 391.389 li
986.473 391.389 994.3 399.216 994.3 408.871 cv
cp
1 .0509804 .0509804 rgb
f
994.3 452.501 mo
994.3 408.871 li
994.3 399.216 986.473 391.389 976.817 391.389 cv
725.357 391.389 li
725.357 452.501 li
994.3 452.501 li
cp
1 .423529 .423529 rgb
f
565.037 476.967 mo
565.037 490.882 li
565.037 499.871 572.323 507.159 581.313 507.159 cv
585.819 507.159 li
584.454 476.967 li
565.037 476.967 li
cp
.937255 .803922 .254902 rgb
f
565.037 422.397 mo
565.047 408.476 li
565.054 399.488 572.344 392.208 581.331 392.212 cv
584.477 392.213 li
584.453 422.406 li
565.037 422.397 li
cp
f
686.281 391.389 mo
686.281 508.092 li
590.07 508.092 li
580.375 508.092 564.559 495.876 564.559 485.563 cv
564.559 411.206 li
564.559 401.984 579.544 391.389 588.214 391.389 cv
686.281 391.389 li
1 .0509804 .0509804 rgb
f
564.56 411.206 mo
564.56 417.948 li
564.56 408.726 579.544 398.13 588.214 398.13 cv
686.281 398.13 li
686.281 391.389 li
588.214 391.389 li
579.544 391.389 564.56 401.984 564.56 411.206 cv
cp
.878431 0 0 rgb
f
610.146 396.628 mo
614.873 398.035 li
641.88 406.05 li
641.88 492.948 li
610.146 502.141 li
608.148 494.787 606.609 487.72 605.447 480.998 cv
596.373 428.716 610.146 396.628 610.146 396.628 cv
cp
.196078 .207843 .188235 rgb
f
610.146 396.628 mo
614.873 398.035 li
621.03 404.24 625.433 420.126 625.433 438.741 cv
625.433 462.728 618.141 482.176 609.175 482.176 cv
607.878 482.176 606.636 481.773 605.447 480.998 cv
596.373 428.716 610.146 396.628 610.146 396.628 cv
cp
.392157 .4 .388235 rgb
f
687.98 398.862 mo
646.826 398.862 li
641.509 398.862 637.198 403.447 637.198 409.104 cv
637.198 489.166 li
637.198 495.491 642.019 500.618 647.965 500.618 cv
687.815 498.031 li
687.98 398.862 li
1 .231373 .231373 rgb
f
687.84 483.195 mo
687.955 414.225 li
690.977 414.225 li
689.992 483.061 li
687.84 483.195 li
1 1 1 rgb
f
654.78 485.255 mo
649.163 485.255 644.609 481.676 644.609 477.261 cv
644.609 421.374 li
644.609 417.427 648.681 414.225 653.704 414.225 cv
669.631 414.225 li
669.629 414.307 669.628 414.389 669.628 414.471 cv
669.628 440.431 li
686.281 440.431 li
686.281 414.225 li
687.955 414.225 li
687.84 483.195 li
686.281 483.292 li
686.281 456.157 li
669.628 456.157 li
669.628 481.472 li
669.628 482.456 669.779 483.406 670.061 484.303 cv
654.78 485.255 li
1 .427451 .427451 rgb
f
631.106 504.928 mo
656.936 495.591 li
686.281 495.591 li
686.281 504.827 li
631.106 504.928 li
cp
.196078 .207843 .188235 rgb
f
631.106 394.33 mo
656.936 402.947 li
686.282 402.947 li
686.282 394.422 li
631.106 394.33 li
cp
f
573.787 492.745 mo
601.211 485.255 li
601.211 485.255 594.717 453.869 599.894 421.945 cv
602.354 413.241 li
573.787 405.82 li
573.787 405.82 563.659 436.994 573.787 492.745 cv
cp
1 .333333 .333333 rgb
f
640.179 505.686 mo
640.179 516.104 li
640.179 518.055 638.584 519.65 636.634 519.65 cv
634.685 519.65 633.089 518.055 633.089 516.104 cv
633.089 505.686 li
633.089 503.736 634.685 502.141 636.634 502.141 cv
638.584 502.141 640.179 503.736 640.179 505.686 cv
cp
0 0 0 rgb
f
640.179 385.89 mo
640.179 396.309 li
640.179 398.259 638.584 399.854 636.634 399.854 cv
634.685 399.854 633.089 398.259 633.089 396.309 cv
633.089 385.89 li
633.089 383.94 634.685 382.345 636.634 382.345 cv
638.584 382.345 640.179 383.94 640.179 385.89 cv
cp
f
958.521 433.11 mo
958.521 439.401 li
743.637 439.401 li
743.637 433.11 li
958.521 433.11 li
cp
.196078 .207843 .188235 rgb
f
747.306 430.69 mo
747.306 441.822 li
733.127 441.822 li
733.127 430.69 li
747.306 430.69 li
cp
f
748.796 429.658 mo
748.796 442.854 li
746.349 442.854 li
746.349 429.658 li
748.796 429.658 li
cp
f
985.865 434.311 mo
985.865 437.893 li
958.521 439.401 li
958.521 433.11 li
985.865 434.311 li
cp
.372549 .364706 .407843 rgb
f
958.521 431.633 mo
958.521 440.879 li
957.593 440.879 li
957.593 431.633 li
958.521 431.633 li
cp
f
958.521 415.875 mo
958.521 422.166 li
743.637 422.166 li
743.637 415.875 li
958.521 415.875 li
cp
.196078 .207843 .188235 rgb
f
747.306 413.454 mo
747.306 424.586 li
733.127 424.586 li
733.127 413.454 li
747.306 413.454 li
cp
f
748.796 412.422 mo
748.796 425.618 li
746.349 425.618 li
746.349 412.422 li
748.796 412.422 li
cp
f
985.865 417.074 mo
985.865 420.657 li
958.521 422.166 li
958.521 415.875 li
985.865 417.074 li
cp
.372549 .364706 .407843 rgb
f
958.521 414.397 mo
958.521 423.644 li
957.593 423.644 li
957.593 414.397 li
958.521 414.397 li
cp
f
983.502 493.437 mo
983.502 497.027 li
741.791 497.027 li
741.791 493.437 li
983.502 493.437 li
cp
.196078 .207843 .188235 rgb
f
983.502 461.837 mo
983.502 465.428 li
741.791 465.428 li
741.791 461.837 li
983.502 461.837 li
cp
f
782.302 463.633 mo
782.302 495.232 li
779.601 495.232 li
779.601 463.633 li
782.302 463.633 li
cp
f
808.5 463.633 mo
808.5 495.232 li
805.8 495.232 li
805.8 463.633 li
808.5 463.633 li
cp
f
834.699 463.633 mo
834.699 495.232 li
831.998 495.232 li
831.998 463.633 li
834.699 463.633 li
cp
f
860.897 463.633 mo
860.897 495.232 li
858.197 495.232 li
858.197 463.633 li
860.897 463.633 li
cp
f
887.097 463.633 mo
887.097 495.232 li
884.396 495.232 li
884.396 463.633 li
887.097 463.633 li
cp
f
913.296 463.633 mo
913.296 495.232 li
910.595 495.232 li
910.595 463.633 li
913.296 463.633 li
cp
f
939.494 463.633 mo
939.494 495.232 li
936.794 495.232 li
936.794 463.633 li
939.494 463.633 li
cp
f
965.693 463.633 mo
965.693 495.232 li
962.992 495.232 li
962.992 463.633 li
965.693 463.633 li
cp
f
695.672 396.015 mo
695.672 503.466 li
695.672 506.021 693.601 508.092 691.046 508.092 cv
686.281 508.092 li
686.281 391.389 li
691.046 391.389 li
693.601 391.389 695.672 393.46 695.672 396.015 cv
cp
.0980392 .0901961 .0980392 rgb
f
669.628 481.472 mo
669.628 486.886 674.212 491.274 679.868 491.274 cv
686.281 491.274 li
686.281 456.157 li
669.628 456.157 li
669.628 481.472 li
.0313726 .262745 1 rgb
f
669.628 456.157 mo
686.281 456.157 li
686.281 440.431 li
669.628 440.431 li
669.628 456.157 li
cp
.396078 .478431 .47451 rgb
f
679.868 404.668 mo
674.212 404.668 669.628 409.057 669.628 414.471 cv
669.628 440.431 li
686.281 440.431 li
686.281 404.668 li
679.868 404.668 li
.0313726 .262745 1 rgb
f
676.167 485.026 mo
676.028 485.026 li
674.296 485.026 672.891 483.621 672.891 481.889 cv
672.891 462.097 li
672.891 460.363 674.296 458.959 676.028 458.959 cv
676.167 458.959 li
677.9 458.959 679.305 460.363 679.305 462.097 cv
679.305 481.889 li
679.305 483.621 677.9 485.026 676.167 485.026 cv
.14902 .368627 1 rgb
f
676.167 438.33 mo
676.028 438.33 li
674.296 438.33 672.891 436.926 672.891 435.193 cv
672.891 415.4 li
672.891 413.667 674.296 412.263 676.028 412.263 cv
676.167 412.263 li
677.9 412.263 679.305 413.667 679.305 415.4 cv
679.305 435.193 li
679.305 436.926 677.9 438.33 676.167 438.33 cv
f
%ADOBeginClientInjection: EndPageContent "AI11EPS"
userdict /annotatepage 2 copy known {get exec}{pop pop} ifelse
%ADOEndClientInjection: EndPageContent "AI11EPS"
grestore
grestore
pgrs
%%PageTrailer
%ADOBeginClientInjection: PageTrailer Start "AI11EPS"
[/EMC AI11_PDFMark5[/NamespacePop AI11_PDFMark5
%ADOEndClientInjection: PageTrailer Start "AI11EPS"
[
[/CSA [/0 ]]
] del_res
Adobe_AGM_Image/pt gx
Adobe_CoolType_Core/pt get exec
Adobe_AGM_Core/pt gx
currentdict Adobe_AGM_Utils eq {end} if
%%Trailer
Adobe_AGM_Image/dt get exec
Adobe_CoolType_Core/dt get exec
Adobe_AGM_Core/dt get exec
%%EOF
%AI9_PrintingDataEnd

userdict /AI9_read_buffer 256 string put
userdict begin
/ai9_skip_data
{
	mark
	{
		currentfile AI9_read_buffer { readline } stopped
		{
		}
		{
			not
			{
				exit
			} if
			(%AI9_PrivateDataEnd) eq
			{
				exit
			} if
		} ifelse
	} loop
	cleartomark
} def
end
userdict /ai9_skip_data get exec
%AI9_PrivateDataBegin
%!PS-Adobe-3.0 EPSF-3.0
%%Creator: Adobe Illustrator(R) 16.0
%%AI8_CreatorVersion: 16.0.0
%%For: (\702\750\762\740\753\750\751 \702\750\752\762\756\760\756\742\750\767) ()
%%Title: (Car parking set.eps)
%%CreationDate: 4/1/2019 12:42 AM
%%Canvassize: 16383
%AI9_DataStream
%Gb"-6D6G;,E@(Bc!<9sU!!_N#kdp=J;nEn)p?e`t"3WSJHgHGL+PP)KggcL!1eE&%^OG45'9Q;F'J4#mJ(Z\$8DP"dn!+b.0.0Nm
%_&p=7s6Wm[^\d;_0Ac`d5CFsIi?trP%k2Yu><>%Ed3&;&Is^q][pT0d]jAF&oBhl_^\[(G5.lC:p?SoShgb1q_q.,$GlIC%Y9&/d
%qNpn/Y93bI[pOOQra-^QI.@'X5M7beJ'pOXo\C=%5CNRjbLbW6V#5I6Rdt)E^4#apkC<3mQ[f&/_bVBNb`nI?Gh0Y+g.l9n`nr3e
%TDclu-Mk^9Dn`J<[#=L0If@A@Y4lC'rdOdS5C`RRG@,jkiUo.uhLG2_s"MariVfsoI/W#r^Aa*fLHYY-m?bTaiq56Kq$-\84PE$N
%L-Mg[Z*QS/G>'MMVLIT]T8_2>gKOP!*QNPtA^-"&Ug>.d>0Dsfhr3=>IeWPCIerQkhS0!em0A,@:ER=H`Ol/jSikPL*;Y0bVk8J9
%`S1oQp!pZmm.NMP9CM.Ymlu=!KcP0)imTPeo+ge^cN!W%rpo`;?bZKY55>".^;UKVl,2:XZ1%4\YCHKdT/HF5rqoi9^\Z.Js+<9-
%P@@<eo7K2FZ+Ff;@AWg^-I:$43VI%5q>YnaS-eA8.h$gC^Tc&\k9&RZo%dA3c1]4C)7fPZs5OXY5!M8Vg-8p%0t5&,YC2EUXe,"u
%qd7[O0)K_J+8u3+D1(s"gTTUfCudbZlnXT]a.N;3p[ROLc_'*EM,3_#2IG)BqT9#o([lk<s*ASPhs;'7rlQ=AK$XG_]cHV1/"HBu
%+8qW,D1;0p?[QYhpr=K5J,?92q<B'YJ+B?V5CNP1n)$>,O10&AH2k]Ep?)s9rqHH92ZE4)a+%02rk$U>^FRk6f9?3c%`qm5\c$lu
%q"G$l6QQ.:krc1Z]:$<GT/#]fqg+=,hu2gNJ'6*i48\O@62t]?Emt$c#Q4D0*<5Ts5M1WR:[iSiaLWJKf/V'&CC(MLr?:OR?L7.S
%^JQ(pY#f!/o@kqTrsIA=^HT=0lLTeGIf85,^WX=g`>>_mHMufRs6ss>Q2bA"gNt!\5L/A#NU`[&JINU;O0cUPJ$LU)l+;GR]6S6<
%jEJ1PRj,VQDoRF>c[LQ)]#3X%I]#iProP:sA&&!-o<82]0.78Ma;9In>O9,^JM-W-gt=?0rT2qOs5Mkd?h1pohok]Ko+pUOhL"t<
%F6n8)WU-gY.M%kkP&tJ%VVrWF_`?h'euV%(OO[q0Yaa<)p,g"GDr,s<lHd5nMuN55fDkX8Qg`g]nS`p1\XXRgDo2ff]EO<fN50V,
%YANc%fK,]FqZ"SLm%&XQ]2,ST8+mO^Fb;g8J)%`prU]>.^3KCq&$LKUO71s'YRcgKqDNG5\ZDISmlbbj$@ViU52>nfn*d'VhJf?>
%r0/X"pdK7DHg$<kU?IG$iRH4Ur^qS*+/,41h?$[(G:r^kW>g!1oC2&:G@nU;cVjPAmdl?dH2Z!WIsh%?GCTYOonRa0J'5]]62_>_
%^+u2Ui>:CcqrY$)Z?1RJ2&:Cc-!EIsAH_iX*+_>u:AjA<`92!Eccj&7RZB]/ahM^qQA68`?2+-S&$J3IB9qjZ++F.IMf8"CrmS(<
%bidm.@*T9956'\6J,@?KbYVV[NG<s\7]Ne[j;YY2S3$X-a3j%fhc=&@R<)CNrnt+!+)\!L*Ng's,j4+sEV)U<C_okXSc41Cpi[Pm
%gn4Q"cLTu\J'39<&9jgpGk(A&K^fqokL9A!q_(-_GkpaYhr*7Z)g7qo+6W\%j@;5l_u?!Ck5TJ1-.;h.np`MUs*t!Ys2P%4qlTYH
%)5$j$iq@`mhoktFA\V%4VrcRGjM/q=q9R&fr)\f9U]7@kI`Wh>T1Nl$N3^Tanm#Le=7rKu_V/b.UFuGWW6b-JI8rLKLHU<iOk*]S
%Z`Wqq4h$dFeL*RrTCug1g05YIp=3O&mq%"!595MBVCCiY`u&m!nMFR2QfHUYB!R1Fe%Xl/'E:5?(\?a92*YA)aR)V:]6IO#hP'B7
%e&l%P^Wt`h^WGBmmtndqqtKHlQhGd&T:PKWrpP<U\8V7,FoUeS*e"'Cs5r^Xr:e.e$i`BEmj3F+7f<))J"O_6*WEs+qZ"e>AIa^B
%?aF,6hh^/;5>(W0P.gM[PZHT6X(FTnn?7`J0]WjrG"K?bQ`obRs.8WP_L>;S>P=Qafk5bJKA`R8Od?ft:O_raL):/7Z6(0?+6Add
%E"`-D_L>;S>P=Q[)uOjUfl2;H_>%:1ZO-0DO.MR6m)@lra*i"^r-P19Q/10cM\e%<?E=t7`NZ&h?ITe1-<>G4fH>HN\,H6sip#]A
%4jBnpe=YGnI4@,ae'h_mai90#eFS!kes^C,Lhnt):$L<r3c)UFZA3k:Z26AENT+BA\_3o62S.@"CfnEW(\)=:rlIY0ZrtaGqrC7*
%,KuO]=+>>JpMoJ8HNa@&oCcDfJb4;oIs;2O00al_:Xc5=T(#DC@VfLKS"S"QC:<S\f_9f.PPE6HF14_X(-kMN_k(_fY<#AY1fFOV
%HtqR=\NH-kMP?Lga^tm/RU>Jsq/lG7bMV<WBo*/MDa-tUlMp=fbG=sJ?i@Zf7BcL6^<f^mcbEf>XWI0[Z[M+RT=ipVT/HhDCa_F#
%OEb?jj01gICp5`81rBODZ9e-"#1H3a<1hmK9/akK%CYsnGFcMCQbMX,qi>C'N/HYNq(LFonQ'$]FB:Ft2MYP*:iV`%/4Mak]q`TH
%J]XT-Vhc[VrEe1lH*NqndmOiqm>6F/nq,?/-HRW"Z>"n^P&+f>MJ.T`Ri30n_K<hV^6MRZ\D&\.=8:MpkW;F)/.1!KqS[CNn`#)V
%\R]Z_s8#*sq>K2@BDcugBT/2Sm/#%p/M:HbDg-QR\*H_GH%i_[pOkJ;n*lSk*'4W/K+<B[AV9fD%<m3:=7_^AX&l`M^Y32O'NO*)
%?:V>/k>I>Z>g#,CFD0m)37)"*6"Qmh?&STamqkFD$iKTQ]tm,Y.pOhU)U&&_?'^JA(T(qS6L"JEDuTXrd;O?'r7Ms;dsV'aa4t8J
%m:b6gk(;OaWadforHQs(Rr`m<R\=h6qm2^u?'R=\S"=D`E9<&jqenTZXQbs^`I>qC6UM]=2-VYOeg$G<EDGaZS9$+.I\(?K7l(5/
%jedKooBG,u_]BIQg<q\cS7C6&i9BW-oR&f':WkR+s!?@8FIoeG8$cJRGPFOsQ1p.6WZ?V#`2\*bXQ7Q7<OsB7>*$oZ[]:M@HQW'1
%H67Y8O61N_(FA5%JD@T:%Ur+m`'pq.R4ha$051kB>(0<.KBC&bN<M*IkcY\H-A*A\'>4hG/'L(7I=k#H@%)</'`N[J=a15*%"mh/
%_DGc]l/j93[VfnW_7YCdDrJh:"nNS0TarqFi!pLu%BXjK*Gd#[`W,;]_dR^bhWflra&LJeomBj2aK'jVOn(N_%i(2=N/J#uV*Hn;
%\R[u@8Jt)?5p9)O_.;1f6^S<k3662lnNc]^QHLs*%U*R%,\0N#0l`Wq1aq.TfLCQt]Yj)C>lO!`g$IEoAhb[>Su]QC@?9qh7e8-7
%[>W`&j41`?bXA;);)*HTJ(e5I.j#kr#jFNBQCF2d1aHd%daO3GdVgAm3IF]u5VkPtN>mkI(crX!5(627k1^_68!1e'7a`fijVgdi
%h`6'@BfoflED5%64%E<1W7&2mW7&1:8(KJEdoWmf@YA%-(k#C'A]t&&=Pc7'.$Nh_0;C)<fTRt.cQ$@sjO.Aqbd>'BY'Cmj00-U-
%V7S+-1e^f+Xl!ZTqM6o7E]$R*QuWUDr*]/EhjB33n`%$:L8XEFBIkDN$$PFf0H(XnpiL;5mu@U2"_j.H-.4+u(2QZD*tP8MH+K%A
%f.GE'(_OO?QoIUTpQ(6!s4Xue0bL;/gnR4taL0A9+YcHhUZ=@m'/PA"<aL(@ijar8X%qr,e4;6,m"BP.Frb-YHE6etX8DACaf%XA
%npAWaS*P7;5gJ$&`t8jI.7Q@)H#2L^a_2a3po_o"Onp"S(8G67`qo*QGHPq`G)Gt[N.G7Y?lESr?P3<a@e;0[?]?:"EA*7\1US(i
%>)[ZRlB/5ehtG1+U$2S^4-F:XXXok8cVLb"'l>kaQE;#XD6:T)Dj]Rn3kT]dl)R21g9@qB]_p8c7t+GUb8E4ZnG,dIR+_Lsc4o%\
%\4Q#GC:p9^nU`C4UasjV7)4@5kW$XtG]J#%1J1U`+$(5THHCCC@R6k[)$N>0W%dX\0])DaELnOIGQoBS^N7?5hTkR$Zgijre*dpU
%YrVS@7;]1^)q,EQ9jbQ;Dlo[)B3:uYY_%ZZK.G7VY:LVCK-?P\+A4e4D0oht%AB(8#$V;L/_*<r[]t$1kjm.YjU3#mX4TSh)!s4^
%.g%J^+dc=hQCi"n5M>7l2Te,Ac%Y]O_n<Za2BSN-?9HmL0e_;D9=($b(_q]3qC+aV#bJkf[lJ+4Ai$bKE039\n/l0"5K:WkN/@QO
%'>JBXgk$h&jbcI^,N=!ZaX*P_&WUE5&BMcX8N-S:*:5BW"uN47QpLYa*I`p!rd3dTM&mB];;#jYl2UXmIsqc4SprrRn_!1SgRYOg
%?@Y@Zm;X.:IE6+cg<_=\h'`0k2ueIo^X\(6.NeZPf@p5mp@nSudXSO.4oF[*Du]"jnG+FolK?eC/eoa_p_)$D>jpWIDrQ1TIsO8u
%DjK6UJSb'nJ+WBlS!WU#!4)It_lk/2b&]fFd>Rbf^NfPDe"?DNq+Mo]cX+85o2#)N#h/b=kJUI$(EDspi;`M7s6"<CQBupa5M$[f
%;(6R&jD=N8UHW;7[Hc,f3AZDQc(1*]_r&,h@AQ+.^cRMO\882@4+Ym$K83lbg*D#qJ7r@)?n,'i-`%rPLGq>ucGqb3K/Cn_6`V;X
%qY=7B=sgI4eFGr!bl!KVB-,Wfh/XPI1HjHM[BnKa=OLX@=a'LFluM-+jOPDbGs(A^IQ<VGCX86Jfst>)I@D?,gPpefZ!Bt/f>A(j
%c"fp44/-mFBOs_BZYW30o(dAZ%@t15gT?IUA=aC.IWj>V4AI]?+',h:4T3r:IpC(@RrIm,1jdk9+4b\\Anl,91nbAXr+N)]T'\#1
%2X@n`WCrDoY@<[KmCk#(]mLmTE+Y=)oft3kPdOl!6^"<fRgP29ntUW?KE1=QfW"I&f!J6'q(5=)ia;'f=$NQ`HRJOO'!UN+isQCc
%QB#F@BFrgo/d6IP+,@BXEFcO%Q0g.Eo?hXt#"sA<CY5?FGYH*5&I(^sWDh6.IGm+>?M#'Go7Q_s0.AV"=^?W#,YX0gINb9qYG2m$
%BYK?EOj`9@W$SW^hb92Lo@a`"O2Ll?MG5biHfH\uHf.J4]'s:h^pN+:@95FoDQY$=5\pupRQ":C8o4<kPUo#6OWJ.00m[Y*fY-MW
%QT=H_Ze<+RlPqfmEOQVM)h5-eaNpuH69M<e,F?[rRl38aVb\@+qS$)GO)k#UNOp@FXOB,@'hIoFLMLIt3,h(D"1&:U?<=A/7"?1c
%@iV@/d^0U@q.PDqce@D&mDt_P7b6M1>4p8Ye,dD(LsL6rPVDfI_O52=.mhB]DUJVY!t'blTOfbib)QO^5nfX)OY=bC6O`4`(Vm?n
%Rs5<%Bla*T_6<5EcaQTs'iS6^263U\JqA+YG.2&ji9BSgVO`hK&>(Z2-g"XMeY'e'e9EO3B(dOo3_YXH<'e:5:J/kdLQk./Jcho.
%JP?UoB1nJ7eeIaUijbkP#-#9DC_&TZc\%?U!F@Q7\!9EXe\5drVCkBTbFGGEm4PGf4+((UbI3!rgc!Z55Fe]>N#biRAdC78`P(Up
%I4beeXg,VL]]9c.K@Ja%UmuK;'RV'.+7,RK"]1E8me`QB0]fhn/Ul>lZunBFRdRK9N>''`DnpL+5j-cei=krtholk'4J9=R,7_&(
%+eT>>a%O##(`K)+^eI7c$6**P%_O)lWOdM!dfl8qqg+c[-8ib=Zl9c;'6"uR*T9Bt>RrncjiIur9[f_pS]Vod!*I)/f)9R@ZrF#L
%jB3,0PYFE%DgU1?FY?k[.^j1aqb!QICbB>Tq62f4`PKOr(-sa(qLD2DJ)F>O]"'4F8F9Zj6M#n@RobC'J5/#9:;b0Vn01VE5DG/;
%8EWTK($oZp%$NuXKFM-!XHiCVF1H&>TAA90e!#P\"WLf\a&G6-L3eV][$=f5"lJ!lEt$6[Gr6"tcHk5L1pC7<j)`rV3)%Tm>!79&
%fHPm3b8/$$)eY%-A[PCHCd#Z4a,G/Q^naEV[N(3PA[>nA)4B)5_1<=9HU*R-F(.ic'2WEX?qJ5gS(V]o,g94D?gOncQTLK^,$Sp.
%'Il6D1f"FA?lZcFKn$>Ik[s5X_qBsu0JP"?X1:oI]S8km63nM@;q=XYNeR;R2?iU^"+"?q0<T<4ou2,+807I81/2+n)^3ZmIY?24
%2Ps&_8hES<e`rb]<GW=uEr.Ps!(YS):O<28)Pkk!'H@G5d-W7f35q'Q[3'$RDdk;e^078JmD&hWT/k()E8slK2rOsSh2U7Wjmr*+
%->f9Afna5o4qrAC'MB>l&_<,AS&*IGH'GQHTao>K.K1XRJPs/JIV8kQ1lRV#3r6.!,JNcJ[$P+OcWKp^(f2P-R#Do,4_5_'-ctu2
%dUFhuJ]AM(i";E*0:J7C-#37]4nSuf8NW,]UD7rcL)k%/Cu=HMf[D#L%*PT<K9(4c_ebfZ7JiSHBJ>WDd'5e<L""Q6lX;F]a-e8:
%O'@B6)bA#rEN>Oc0`e[3O2G$K<GSEqT&#^7bYT_n^(:FjFPVTJkt3<rMdV.SPWP-?-RMM59R@&h_1Q,Jbg[+qH#cVbICg_cipLY)
%qVu*<Je0c-d.YI[d2p>BY7HUIdn*G!p/o;R\.-gdS]1sGS'^T8A#qeJREr@ugj:fsbbhD"EO_cCEYUXdZtHcqAH#pUB58Sq0)^VN
%2:GA)Blg(\b`OYd1VeqinbJ%N$4$m.cF-H>BWm/Y@"Q<cooRA'%m0-cE-Z2p4\,QYCfXtrac#2`if$6ck@uV`.WD*F-nCQ+d`ae@
%n-Nt,nMO`EY-QTJ%>D6jeki:m43[/6*q0bY$FFE?+p>KGc#9b:HT*`+.[DfhV("KpA#3IJ8]1Y0%?^tn7%?!Y'3P'GoCXhHmBFEB
%[pQQe"6mn($EJYk#\^V3^nI0hqs>\uTYee)a"9t9PNifKcqTGhm9g[LM8k\Y<k'77G+*i+hJPrRpIia3D4BKqg3K?lTr7N<c/e4V
%GM"u)*/F8OYhH_0Ct=aHJ#q\.eheg/#:V$6Sm&rQQrp+=!WqDWeK.&)E]\WbA[PU:+D2)aSB"YM$Kcf,VGsP_0Tb7^iZ!)$O>b$k
%nXKY"*IY-,><:T"[*s)j_UX>]/Vfg4g@bR7k1/>1h409*S:YPj["K2&.:O6<j%IhB/)3KC8MMtNC4SlgLL`j\N'3AFrJ#BMe/Hj*
%9("r?/7j&TpaA<]Vn?l1Q>kdGY<W)/JO=epl3k>?I9[Y9_f-R)D6"sI$>a,X&:9(9GUft_A-eYb:_%q(1FHqG28HmUL5[f"&X*5V
%krHI<-[gQ^Xq?uEMo*W9$"PiN&I*u1p>n!sZ7-=&EhMD7@)rWUR]l2qetL:GZ1i5C1bb^C?Oqa+,K^.#<CQWV)9^A5pYu]jXR)]Z
%oA`$XJ0E?'#*TXnZMV#FG^9GdlLFpEfQ9^$,C:@EOc9\ee(,<3P;hW-$qgmJ\qDPgp9_4`H\;d%Y[Za^RBu1$Cmq\!;epDi(4?qP
%*YkjpLV]Y/YQBl.*_+>3`YZW3Y)AX4,@#gdO0Orfb6Sh71EdS!N`;M9`EpC'=K!`:$]T>FEGCc#ApBOG;.,s3RnNbFpl9=&p98*u
%1ec$mA^]:HB.'+rBt+e0!2!`A3ST='H,T>#"$k<021\e>/<:f=IE:(3j'^1Vi$+dEfl3jp88oa-Wpd;WZ[Bj-\nY:"]o4ie7>$@s
%&X0!KR1V%)gY4lC06ZadQbldu7jRf[hDVK1"mH9&YUSo==);nC?U!%)2S;i74PTGJ\5FdpG$djV*u(YD."2;cEe=t,d9a*AAni!X
%=M??\[igql!4*[5J$'iEJJsn49q008o";mO+mrGsW!Dh++>MnBP#6$L63<[0,Y's\`#0'ImEciR;X78:E[YlQg!bW+@#39<<JR?:
%0pE8;_SXA?0AB/B_aFB-*V?96(ZUPDYLnu.7X$JBS7U.h2.?:>`c*P9'H.0VS0#S&#UDE1Q`s5c>ZO&.+T5,D-7MF^SJ"[P4=Wf$
%-1I,*B_KV<l*k&[K\"1m1Ac=2$0STA.Boa)!U&22RkD.+XU$hAm,MR75Y'jb%-7`3dTeOHE]`&CKtulo)Of?F2JRBi#3.%Upo7_J
%rf"*oQkPAbkYRr04@IY3R.]R&24P$YC$,7`#LW#6n=VAO:oKI(?Af&>8Os/*X!DuhqaanH&2uT"4;V;aJes$X#hMHQKG#6VEP'b,
%rfWPt5R(o3iI\jk`\bM@LUTET>jl?qjqSXN`ZPj?6W>ct%3C2RBUP^"PfoO%\4K1WgcK^q1iX?RCdSil/)l2KKDW_N%uD0%j,P"n
%01H)NY1^A*RtUBBa//Er9j9.[Qf*$+2`Ut]o#1luJg^'Wg$ktL]:0_F(CKLeJcl@,:QD9:>QNal*'664(i"1BbRk*p.7^1q$h[+!
%HZJ@XA"?-$_/<_N`6/TAY4[VG;SoKPW*am76V[hO5itN)^l0q,Y074P#uT?4=-*nAkKna("&PN]"rUJ"#NZ)JkVD.>%-ZD,?sN)X
%hO22TBh"mP;=cF8ONFu0NQsC!??d-'aYaVP2n_L?NO(=[%(--7@"O%oaE!!n_sU>TFu>[&)>8GXM?f=M':KC\^CL_X4^H?:lL6Kd
%3FQ1A@pXtP*-a,lQ@P7^k3WNdKYej+>`"Q7Z0ApVBqkYO=VEWnZhq7m3!W>qE$]cR=CW[+]bUqlFf-?fk1+:)a(9pNn:2K1b;4as
%9lr;\``J"A%Ak_Ib]S0#2]nKKo8o-UHa0U]T7&p#Rp8%=66TbVkW*N*E<ZGb2%X/1m_e+#(;1(HC_WKYaI$Cp@1Vre+h.Zi:"`2r
%Z&g9.Rh$NsS!tIAJ\pPiZ\n[+s)p:3EB+.mi>?1,\Y0RLBj.^/Y-h1R&E+Oh_OAeZBB($L2jrI=^ZTVtM?X?^X]Or1Lo(LPV%>I&
%Ae4%;)C'&$'u2dd7Nj<5%^&-j+N$Er7U&;^Yms,XV!?E(pk02TNL><*;[OH61Imkt4GqG7W_,MH1pA#p5VnF%6[1)d:jsD`f`nO;
%RgcV'2ou%@1C&UL%s&*qBd7(uk.'(PZ=1GXZ==bI+[=Cs9<$UC@2<W-]BkkO34i$>["`Z2nHb=M1+'!)!seNt5lEeRdh+$6Xs,k&
%9Zk1k+bHLG,fqmpq0^:?q^)MNPRdls%9:f,9>]XE7B6i!AFEq'0uSMT?[l8,[@pin3&%aJ$h062a2j]%flI9@E,V,6LlZ7)3u$SJ
%,Z;=dmZ@].Zcsh/*1/*`)?W$\D[9EUn.UuVWX+1Fp?9q5Z<&t59VZAo7/1ar"YAL#CS&m:gu#r!W6fT-RJ,e4cmI!:\b.g8l\Yo"
%oKaT%K5<7WS>qam\[rAA$Zs?S#]Z?@_Qm'?R8Hn[ag5dq)Y:2I+;oMW"<7G?k2[p^IN(tMIE)f,GR..02*>FhcghWT(gr``\3>Et
%JY4,nf%dL9#Np]p&anjeT-mc]#j+_G-d<:bKt8AH"fqO!gW(<g;'8TIbUfi'35$<]_fKAeioArV3Z3bJ?o:8WO9;L`R:4;>,3o;W
%^@,=/#C*:"S?+-CBj01/SB<":bqLqe(Ws;CW-TWcTM(&&)ZtR!8am`8L"%(T83-C*LpB=a!$0&rOttCG*3K0%LatqV4@j,eL?!Y7
%k4G<(E7P]40T_5IK**u<N$i+8X,;NcJi2LYR;VM22hm1uR+Q+=,;ErGNdbl`+l"^qA4\JJ[![uoT7b]'YQKjGppRrS,,=8T.k<r&
%hhHui/Z=IVYOg"3Lc$:.`?+',r-6:X+<AdB>1]0OKb3\lZK=/oC.%(K#2dDL40Ilf`dnh!r:6f6F=7]$.L[g535?[sA(]6GNJZT=
%dU9t^T;a8g8p&BE/-Oo3c\X'+!4^Oa03,p5UB%b`AR_HdgG@Rd5T["1rhWa9fcZi-RS:M9Zmd+eo$d*kKOC9RO>?Kuh45EV3B\uq
%8[l5AF2;;*rW5V:*gMSTY!>\@X,!n#..99_W.B5Jao*4>Z!p\".FrXP6X_?e;-^2a$*Z:BDe0#)-qk=qU#f]R>F?UX52;jq(Bj&E
%(tWmueeu!u&clA?m+&J"\.DD^aVT,f*X`!.`Mek=T6R24W@#>_IW;m-47NPd&!estU_mW_-OU\$h%ncVm^APj5Bh()2e=3Bg""N9
%kba2I]/cNu.G'7#^/[%e=O#%qOjaO9/D&$q=g'2f>ke/BSj5\m&\]t@LH26l<!PqOEt8#bm86e:2'uXX@@et\<t`"iW:CYsDWY0N
%J"&^a+Me+@#p**?$EL)U@0idP!p$dA&,$VNQs-*&i"E\$iX>NF]]12CE]LG/+S^NL(a^ugK0j3ZX#NMQgYb`FLlgq=Q8>lMNMR1/
%XY[E/(;f1+7_2C&^cc4=98/Z^f:fpi*(k(c]Z2COO#Y@=`,;0PY!NUA<XG7;4#P64.H6(V!\5,&7$8@s/&B@\=]6lqK!U/2P6/rg
%Zj]c-\4#"@T)6%!!&[(t$;Hn)J7)R&*[2iCa^/1;`k8_Nl/l@\<dAOUPcDFll%",D3EQElEN^]<Nt*V)7gS1T\Z\H7'Kf%TOgi#]
%QmVa?XRX3aW$2ge+fm.T3YJuEHqZcmOI98^C$ls$0$rNcLj[84H/:I,J,UttrsaDbA+C30dUAFg@(1f'2l(,Kj3OL+4F2)pi!$a3
%0(js*Ah4LZ+ju9&+26N.-9\uYW>HaOgeGUtK`,<6L1'n9<:>?V+qhr"b0t.'n=sH7<3DW$Y^s>bA?4(bg:h=FqW'>i)%<XV:om7!
%^/[Q?i11Z[f%(k4X9tHJ>B$ktp1$FDCj:+'#p<Wa+VOVcbY*>G#WA3DkcoeG',DbpJ74ij[08@k/-,aC@nP*)K3a%tieS:jK*qti
%LZ2P(n^Nh*.@(]d,K(+3LB=6+7PrL63Ltp;Z]mW0!s-(S#[kGH!(DJV-bSe)&W72M,PbISSjOX,'SVG6RHTI[N(b2!J7tGNSP`6D
%R_X\fV`Y[95FOo[!3Vgm=$Y&E7i/YtiNtmD+;V'SEQA/(^ntE^8V:We,1rDBN-i*1i!t\T*m.TWLCk'[^s;"<>J*6O*F+T1n5(gp
%mrB"sN&SmLJA6fgPld?;aKFcpI>7fn2@^4<5%2@1-I3kppBqSFi]SrC:T\dJcTCnVR5tG/'gjm'i@&-a/HV9]-&r50WBWucig0Y8
%m$6h/`<>/<,iN]>6uO1!9$[85R<tX)L"k+c&<t<j`)jV_43YJ!f4Cm$Yfr@_^:ueW#n+!N2+.'8]T7\H;f\rLK-k_4%Yl)H35jT7
%g''%kkN^"G&!'=lSo_jiDAY_=cYZ*:MO+@&fHDo'3TT1'#6G+q.G3=X0ka$#@E];X7#]LD#1I_35+BTs#4MeO-CgY:(b[EO3#Sjj
%G%`<iarOW7jPlOo#Jpss6C3<=-4+('9R%[kLL:oaSQ3^=k$nX`I/>UL'-O-ZgL0mfTg"m+K)eq2;4lU'D*o/A<Wm4`dLAYUJd2^!
%^kHm;"=LiHhGb*nrXGETJ-@h^d+Mi!nG!#l^L53iieBTV]GcAJJIjiWb!6J(0_Z,'ShX#3),<iC,m%n03KAEDB0J&>>q3YF9hltE
%#saV@]OqYTbg#h5F*JA2?E7sM!Et@',dNS,FS7'U*73iV]jaM;;:(2mFC2A)Dl,5m>Ft#Gf:4d;'?[X3!.\q_#93"9_%8)CRh)m_
%M:Dg>+u6K7b,AeeO$:lhKV9uO3o&6W4@]&V-Iagr/cb,[SP3]OJtQ--&m&O:3X4;lft4$DqG9Kq4:j4G%D`N/++T+"oRr<gWl*ln
%3"Nq">Rbd4=J/mC1.)@m)UeeN<^?R4Htn8:OQjgG]?9KI9Il2S7G.sD:Z+D\#f]jK"0AUtWZ2eKL/.s*%lpU.m[Us5"ePe\o:&9?
%cmeCC*.^+h!&k"2/B5Q^(q)C"&4/FEOE-%1!Mbep3/G"A:j(b<db*aJ.`]BU/)hWk)R1dPa2"oB"Tu@XFmj[IaGORjH#Zqs\HYDS
%\Qr&;[-s+OJ<Zrb>hYVO!kr.kScQI\<,)'dT)`)cm*l!n_]Sj:Rh+u%qW5VU?bCW0oB+d\J,]Ed[[R!$`6;)j1a`RG87#<dAV^Le
%J6982OCLlh&MT!XW#2)]a<JX^#iL4MHA7UNf-#m8P/Af!QsMj1OG"8icc4U$YK@P/*6[FU7!a>+EKd.*$?PXE3:r?mlLMMK$.`,K
%oc/b/j$_-+*>J9SbgtOuATWX2:=TUO)j7\FQ5fs[=*Vem'9!$Fj:Xbr5<AA^Z3i<p5*W;*B1*J*;K3$he5tDZ;si/c\AS9oW'NJ/
%!$L/'?68rS>Jsd!O@,alOW<P:FBnEUaY3ljG.-QB.6ZNF"?V9eTlLF%Ip/RgE#_RCI2l2UCFIq-!Ggiaq1,WD?uVTNYs07V6$n13
%1MiJ(7T1$H6JG=Bd(3?%:3=V:op>aKZM*C!9,gMHjurr.!K+L41kt]NDB;]8EN^;]U6hbSTem1$fIJ%L?E>!gOmGFa7T;eFlHgPC
%8MmSlceAQAX$`8..GpXq)_utg`e\2,eqW*Dj9b;8k\NshB[A>?A=TXB%*02@:-Ylnp#8g4I^l[7Sr:L(r05ES'S7B?dViKP\f;)"
%b@QOMDDVk8UZ6X(gim,FrNO1HG]Vag!,M`c7MrA6^@@L#F+b:j%lY5Pjm'LS#8IeWMYH<!F"%6`Bc5(dn(k5+@XU(C6CD@$/Joob
%@+`Iok4^eR"6"X'&dN7\j@m,N[\=l\X6TDr26Rge0f`[jEKUdWMSn8)UGIZ0i]`A,,,4%$+!H.:4GQrm*lh`j0'?[+/nk@3Ua7Ct
%,p-b>No-la^kqnqfM(`H)*d,dmFce_L5oDa3!0EdA]-c0qZ(u:D"kRX^K_NE)$6(R<@Jjo@$&9b38m*PPK%Qd#Zfr&MZS>pSsa>k
%.Ql\12<m6O;!-"ZIURoL@JqupjP+90d]3%o>j-/p4:;&EO^oGEilHi?5)X(Sj.b58G:QBj\)E_4;m>>jqf+6Z:#e#c-"3]!F9(nT
%`[,XIX7!nWJDPg%,R90K<FS0dn%$C7+*7u5_QAZVr[Tbm1olc;K?H'OJp'iH_5<se\1YhL&&[)1%qc!Y8CjR:Qis&Ke6\O2Yca,F
%N>\T1nI`#+fIZfJMkTb*ptE*\YSXt,L-YuY*L3^r4IB>I$2=B^TRcRb8C$fU1)UP29ll]@;jit5$d:Ci.HTi_7`@:;Tdj9,!eLKR
%>`AVpoK5rHMXcJ/+S-gi!skP(5Wrm@?r+6f6KJb.XSIPJ^lG1PC2^'oeHQK'"W;<!QkQX;(@ucdq@!Vi9M'6RkhthD0=sYNI%Ee?
%@T+goJlj6RW_S^j*$lbk&8C_&kjaT_]S.LU,i[<]TnL`p]MsZL$dqiHj(!Cg$bd1gcsGg&80=Fq$iYmHPe]UGG_D0Gi`4V,Nl>e4
%M3m#]FGMf_P&`Do0TD/VjMrL%77'tdS0/K+;%dZ!JVPn_BJNU!-3;La#["[(Z4Xjmn,^c?0!(>\!u^YTcQNNQ_Ws8V;CfsT,'J>b
%_!_O@"H]l=!2c3-(S'GA@JbJ^__Dj^d(t$n^l_aj;Ut$kmWH,YJk8O_%E7d<kWc^9^nLk\:3iF1[<j>/1BWi.O9hMT)0Ku3%$*o<
%K.epeUDW**6uCj$Ae4DC[_h="0(V>D5_PabK%g[tRmUj)"QM2Q$W@BF9_`MbLFD>*N/jIL\Q]fHQ[jpedqn+,=Mc0q7*m;;Nm#Hk
%J02umAB!X%F9'SG?\_PS8:2PC3\^X@4*>LGna)Dk`k'!?><3Ta@R2<W5_ZOM'p_No(OB)nStne%/BK&#jTUiU=ikl(1Q7'RB3m6H
%aEZb9+XR`PQKMOK5qXjDH`.340eEK88Vl`:i]`1@5ns#,NW^LkrMZ\<nF@J(TLLW!)jO63`;g!lR6cm^R"m4Y>L?QJR0A7*?qB=`
%2/*8YFQ0CWWt,"l?%T^J@/JVtYH2#Z_#_f^nB"u:0ig3pL9k6<jMXP)@^UNDlTj%g/G_^j%RHq`TU?n%6Q*LnnUq6A?<=9pI(L0C
%"i[:Yp+g[/6;7\t8$tPM2B+uS=L+!L>(kI'U.C6DRs5Y*/s.q,l#N<6Ilk!ioEeFZ-cX/Va6jl;B5!93FTe%$<kKi+V&#XjX-c5^
%*iZ4Zq)Q&9!&k?_%g\q>lA$ciEkY$6jrp*GUeK;@/l=;bZJ7nN$31^a[mC?k;8A=#$E,@d%-]`R+"*ehThL?anu@Xa7/HTI_t%&=
%LtTF;`HCipHp!,PVBaB"b:rM4GSDt%n75/*\BN1d@uZ&((i'0R$F;]Z"Y-[p93*1pN&Ums=0ehUG6rYRYjZOSN)J`Hq6s!(#+$qq
%ngm`m\il=61-\B0;,:9LN%)S-K5`AHoqHCR)-!9HbEO6]YJsXNU+X3mbuic'iuUa)!:;et\/^8-[4EuOmTupq!HAmRAOa&;GZsGB
%U;NQPb9;,T9p"?P8!_8,NgP9*4Ou`g-ShY*P*g2Jo:";/"8.IDA+R!+TB0AX?^i+YWEkUN2?iB#!*Q&Y26cs3H)!01O#i+:RW<H(
%`,aP$>JlL?W`<aCJn?GETcX;iXA3,"S2nPQ>un@E<QP^E_Qq/E/_"M)BQ"jA3'WQeE+s8ie9&Z,#S=5C$N_St+P;6&8?;HIH!8u-
%Dr\JMQ!#%-4hcbQP.kP!9#dSr6j%7gNeJ<A4B-<0$69>?c-,[fI\l+:%V5kj*L9Pb"LX<N@N4E]'OYW?Q&a4hKi'mI?S4:UThls&
%aLJE=C5P(S[E\5(Ke@KUV^Th$1]clC?nlEd/lC9U#pfi-Bh)`Jj<7umN%QXEYn1m(B?uf._"!t+dd6!2BL#^0os,.c%8?VuD8H@3
%(BD$tP;F?>Q,jk\N`+$F`KXA,(+Hb1^6*Ah<Cg'-RT//q-)qIE4UBBK/jI.^#]\iA-jUZ*9"sRe0N;>&Xmo@AEE?p,%<,jKl0')s
%G01j;fhXPln^[$TI\XRun/>?-=(t>:ICJ+FL,l9#a\dYV2X-aAfa;ecfb6dVr>R<6/l#2(VW+Z,@!;CB>Zt3e$6dou]0$eeSPJLY
%K^5=^.:GrgI2J(U.*A7j%7*G)<7#<,CpO(&GQgpl8T$Lsa\JXE6OeZ_(;H!)4rZ)P_%&u^2A%tE&od&+&0`Cp)^.[Qf=cL\>PCH[
%nnX3m$Q*LfUs=t9:bp>Q6GSOd]=:?j42"$-^)=Qg@0k9oLpbXK7D9Bp)jDF\C^cMu?"A#(BV["3ZtYRV.Kj43^'oR*rf3Ojeo#9u
%CJcN4;M,BITWY%Y]JU;;5=p^P"UBB_:a>[hS2bKfQuXu3YdBJNW]Rm(PBfZQqKt4/TP8A:%Br)%&$F)p?Sa:SM[iN;Vs,r&EMK6G
%PEsPO$caJd75,n)F9lKl*Tg6b/NDa0GHJ0>BWt`_,4B4n#_C`U;tFnq[LU9L=5`DRi4*1=[WH\"WXsEo!1ZpT2P#)'k%fhks%F=S
%VsU,WJCg4.DaH`Z2"#8%(3(3d#@/WNM8n@Non_pnHj]e]+fl*J!:mDY%@."`%ck8&NY,,tC/9g^YW\,#.gUEdUCb8!8Df@P=c8Ed
%'8f.+-6p5>[FLFU2gf"ARi\:1qDhcH<sfA^U&g@4B>c^o8![5liB/JXPoD9q1GMu;-9$67LpqA0>X!QRN7kF%N(ed3O;[Zl3TbiG
%OL\sG3nY6iBAh=DR&'\XYPUElC'h_&4;J(,(oPuLn)O2C+iQdn8ik`;:;j`fX?r?5ceF!l(;PMJ9uWAtp*3UG;GQ`[.d5j\#Cf#%
%B7j=3d0f%F&qo4C'Z^XFIXuk3f'qo@%[frA';S&'QS'%+H@TOsGrQnLM(-.eP_l-ib@u^:ec+q\JICsXf>nR+Q4_&_Weh;^,:8JL
%W61\&&[)m[VD<?Lmh,hC86f"#G=)"`aP'IO1%mRIRI9t\B5J4mm#6";dY".dLh1_\(lrrC<F>7To;o$Z#6HK$3;\NUV;_*1guh'.
%%>E@*3Tsb,6SWp^H#0Bobs]W.UGp,LbA-P0+oE6)@&u-#N7CQi!fcNmi=6@NKq.:X`)K$^Jb\Js(\j-E^/t>Ypemj/XNKgkObc&L
%1"P((6i$[=9Gs'B.ReBD)X]qW#B30pSPb/c+B#;hlFum*;"r,_RNO96b?erfP+VkQ"7Z<Npo+l@\.$caAlWbd!"?E#6jkbM7h,j-
%KZ!aL&iCB$5p8eDO$q(J8=0).NZ\B?5*MJ>0$NKs>9%=CXuqN)I,s+L,E4lFS">+K_b:'l+6m\"Ha;No@/MBZJ+iKC^O#eRS%##>
%Ak2WqIe/RaHi<B5c^s%olIVZArs(;$Hdh$Pe^q^"s7"ucrYg:b0'i'--Je44SC%W7Y$UP_a-aOH+Zm`f6Z_C_3_%=#6jmDC\l'Ud
%=?Np.k2Vd*bYENoRhiN!/+54jnlb+P4bd`f=5L%!nA1L0]943;KM9*Ik<-aBmPZJSYt\0W8pSX5A.gS4L,4nK2]fgtYE.n-JZV>j
%=KiejQ4!meOW?A'bV4Gu>fT*ZVcl"/1$V1<JOG;c@K!.R'q\1?="-.W/*n&8P2J@'`VFXp1rhIUR"OP2_EcH/A3$e]20F,3j6D/!
%B/rHZ[c&RPEnl&=]s/OZ%k:<t-TPc_^8@+T(h"P$KIb(t+sFMXPN!G@\P*T'[YX^/4?k#L"rnbnH1Dn5Z%R"<@rD%%\;_qBl_HGY
%Bh5fIbf7.rlh)K3j+`4+e\??gJ_MaFhh'GsNh&-WY-c1LC>Gu2h9!DjWH"O?[(9-R_cJ7HX5`\2L/>3BBT.)fX+sLJMT^9P-_'X.
%(\VN9\0u1*dhtZ<QEqI(5&NEl1!,AE&=_LcN+!>L#O>@/A%Ku&9ZEiR7J`:jG^/^&G`9n(@AkMdN0i/]h,oV5<B>ht@Q;K<);bc2
%@r/&gB/%=[XSiocna]!Ik:_Rt"ag2;?TbquU;:/p=UjOOaGY',n2,%<`;l+<d0T#HQ3foE"EcF88[@F5W1X[1A:qI\l_JS5PIc"V
%hJUi^7(n_=cq@+EXn=alJo+sMkD]hMbJaqQ@_@/CA:qGFHk*$dYJeE'JM+cCXI0Ma=Q_9u.ZV<tNON$<<B%TF">h1rVCO`-OEVp%
%k.!^5_g./SjRd^ZMUBZfD=R0^C9SJ+l@R)'8("%bToD-FnPTO8&/L&q'R[mC@oPCu@L+^!Juojj$H1GHX;L]ZSD\Q41M#K+<AEV:
%4P#&N!oHL=mY.Ta_4,=Zo+Z6WfdM$4@P"E2P&Dnj+Gke2(*pk9M9n1PMOP9Pgc11\6Pb<L(^pqBUd7idJd8Yu\1n[VO/iFM1!6)-
%V'%2+p)u3=PHb\0OU6QDdh<B[?fkrJL0XgQs%6$[QEE&'2fVoR173n1A&nAT0b^n;\E=t]#(4SVJQ=t<q7+fb=0Gd7>%02,%@&FT
%R6d.T54>;c8/YA=*)f:W)POXO.>b;m7!F(!F+USL#`4sR!Tm1*`3kJWpdRbY>]Bre0`p7?oH5B5c%V1O2_JRN<N?6;EV<rmR#!sb
%k0CK76^k9=ceRtO`$kTb!(e`[@+erI0Pse(J1Xh8io&;l%Uu:A`F$[;O+Xb;rN%Db%WDjY@U+bCs%Y-#:s+iqkt41aMNDtD'XP$3
%]PK'd7/@l5aH_)h"o2`29g+HXG.fKe+HZZIJ2gk\LRYp5:,@iU3D#$8VH/fcT:EgWQq"/5.#5(`ahaiV!k)76H6jP#qB&D9_)KS@
%Mo$;##k#qfgFrs=Z![agE')#7'jSWcO[@ThSlEVK]#.,GVIAs2G7b%[StUuZi5RP]]*IJ1cjW:^0QlA+_t\G'N#TlX'?`a>$mT<g
%dleP&)lfiW]+YT?kj'/['Xj_5K3fBuV;Ab:@AAsVeZ"6'-cGogAmqpmJ3)m`/;sucDV05g!O#`WDd),bD(0A(_F.QIFd!.7p#%Bq
%<)4V;L@W&U$A65/jfZEJ9\0;hl\*-J!9N:Und,CW=)-T>_Bf%qD:8f$40<O9'@'6=GsNdI'k@_&@2r5"SOg7)NG[hj7N1#\b,,b'
%7;q;-,)kko(,\/YE>Pgo-3rsPT"OJ*_T72eZ=O#rcohd=iI`AKXH*X?D=j!27/Xl'$MCCR0!H)$erRn);*E=HaW1fAi><qbn=b6p
%SN.OOG%7&\_0AEAU^]MdrbeOJ=M#.<$I3&;2mJH\cJV<=iPl]ChI!?'RkXV6n`&[=?K,_2dfgtSGDsc^N&mWCWIhH$$#^2)ZE!\u
%_%b+a8j8)`Qf+Z`T&:b4[:t4ieHb7h=Ft&[7M6]Xi!<YH%QO>=kZ?`L?Q"Gm@(OKm&OplI.)/M>fA=6i",AS_JPkK]o58SV+*';X
%i5JB5h:05J)h:3fbeOH(C<bTKHb$CX_$g_l$EM-u)>G>uXirj_0]oF7XIU:)-b-8!CRlF>?kIB.GA^ef`"M8HeA/<+b1OqR$r+3S
%-O'dM,hSNT(YH_:FlT>&VFOrV@Kj3nMA[":ARHTgN[%)GTf!Zj\WHsRQ-sW.)M<\'gqj3@6p2C`pkTScCh;k,"?r?]0,T6P^+&YK
%#`L/h(f>kq(oX%$Q(S562EGZ5gt7.^huMUJAAB<s@'NZF#pBj[b+/l!HODK>!bTtAfaWT:^c!aq)\6o]XBX$O,Maql-AS6PKoN5\
%^bFP?Ri<WgGh#-&.uXt:,f2W%$K)I""#+[FF/I1^bdTq0Op`$HYUBpLi;Ws]!Qm.\J+;u<,.l;'(6>^(qeu!cpE9J>!e;,f9+`55
%\rdMCl<fVY/<Z&b%Rsm\HWT36fI,$2_>=V"#K#\toPFj[i8?-S09,pN$CU_(nG^H$NV@W)SbKU%l)8CHrdJ\GSoue3da!8aV>XDd
%PIXhG;tXV*:&>=6`"H276Mm70-^QdZ0D8ni+D?8P8POUoDR@.m'4;m:]oXWm'=>N2"d2#u7/I@V#!^+QAG>m9XM:"hG&FCrW<<HM
%Yl9NgeVVb>TcqnfR&_1l08\Tj1(rn+N`:`Y=FWnQ4+bTLK],3J!a'+6`F#M*QY=S30?eIm8:SVO>K]V7b6K;I.7esa:W^_A:S+dQ
%]o4X9J!gI%g,_fTq15J8Dkt-=<@K<XUq_.U8tZ=OYD*$UE*(IpVW\;"Fj=@bbVD`MSA/k]^`_m$o+tI>(-=L*ED&pS"m7O7b$a[t
%oJbkS((AVu_R)j6)l165E6R3AIsIu#CX2cL#pG,@q?mV12t!c^Us&Ec5gj#X79T>lBn%"-AB+,]qTDR'k*=Ep145m.SBoF0**@Q_
%r<6+gE>06PCQM@*1)ct'BMPEoGur;KeY;!Q.=\n_BIDgn:;g=n/)N#>62\MapWKe-l:@H8(QY;th2UrK/V!"Npq)\6)1q;nBo1n-
%q^:2QU64^]k@O55Tf8J.(BQA@hoL7ZFtd6ArB_Vr7]6*BgrZ,O(M2rMS34QFcP>o:k^e*dEo)(jq:l,K#15(giUiM/g;k!t5Ar[!
%Mm\sJnr$$U")C[&MeuS@=,pY/MPte<iPGm<Mfjb]ZCW-):@O__-Ys0B?O#[RXs.A8ePRl`=,()I23MMU__9n0UXm`[bEmp4\M=";
%N'GH3puOD-`ZY&Q^kmV<JmY@)g=QPCb0d<'$%A;]!GfT4i"pT3gF!8U=_NJB4:$E+,[sN^')]$u"l^02n-b6%RH"^jHnVQ?]MeZ*
%MC%+.IT](!G^!!^6GVs,NT(c&?j?%fJ4#5p;#F5,Nc\?[?_TIc!-3s([WcGC@13)8('CWQ2i_8(3UM./n]T`j)!W*U.B&)@1r#,-
%Y7WV+!W*SSD^#Y=]T`7[8<dYHr)/'14\1#N@)nlib:dtJk_l"n=+(od&!gR5eZ$H(/AI:pBaC#3#Y<)N/ADn'df%>[/#g4>i;)Jk
%=Fo^!^C[X/ji6o8*Ys!Xi;$Aa#Vqt$[D)Ar\FKKsR9D85k8/Q&\>TYY02UKDWHh:2?Xg];pFV=oFlHu1q;jMipQam-;C.dMZqJ>^
%;'&$S7Le5S)p>E-i`Z'e@S,5&$$JS<r,20$NTHK2T]W6&r8L.j,f+2D;(80Qgh;-[(?R,\INe7Cb@uDS@=7!&o:'q#$"s(q\]?TF
%/AK"!YN82l-d+.a<7Y0Ur,T2G^=Wb^?ii&]Gbb'\3XaT+@/7cmWpC+Z?b?e%6/5Rk!Rl8d@V>MU&/2i6=FO3?/u!QU?^;"P=q\1\
%+\P+?SE6*W4"4gF/AIFtedIdN8c1JWoR4dH^UODCZ\RK.-dAj9-$%`s^X0U2;EN.,L;E/!RU8Zq\-:,1c;&n5d/65GAa;hWb7spi
%GC`;,%O[bWRU6@j^!lo=HH^=5bqE^d\3+JK@I8$N[hE_9<$*SfK&i8Dd[W4J0,2q&jj*H*jlVCp$:-Gsf*I]"%c)2j439./LU6MG
%mDB?n."21YL6[$qpgmAjKom7qld#Ijqd=K)FJnm#@j_s]lStE-f6M_j=Lao,^G:;/D9HL@3l9)KC>[[X;Yt@";u9<sSV+6b4LV=h
%\ha-mYGL);M/>:eI=:]Zl5LqFoX1/9DSdiNkJ9BcKYGpYmXrl1*hFg#35BV?RN%gdoP3T_o>Q!;^'cjVH"\&PaF&b%2[V1pi>CLG
%nc]7#W=#h&^8,nRAJ=l[44VU9MdSIX`/VbQ64E]un\mCU9T]#n,#4H].u,c%i`T5T9_T\7NbhfopbF1fe"+=a]/:0'^6jE..h2X<
%&Ubb(r4ScblDnat?8OK*.PKG$HPX!H9&<4/BTAM'`\H\<):Z?-;ekT5[um'9*@ng?ia*m3e#:RH$dQ#>gRYd>O@PQ,3bpCs`G0B@
%dM(aYb.)NdZL9@QE(/H<qLJrbE+eOVI:Vud]b:&0B#&-CI(e?a`h;WD"WK-l=12EN]0SS?=YEG-0[?2hpH6QOWcrY>Ff+$Z-@Y<\
%m6&(TpL*p>]/cYp.IW32-s)R<@*qq1l8pRX>sZm(P[ZS'?;c9'_+tCWRkS3%T/R$DDY1Tj\U]=((Z9b.E]H37pkGK]DreQ(Z/j0S
%$eLYl41of![]dof>NWl:i6*8[m>6X35lSpK]:<[b89s1?3WFVN;\@`cp0]6s0;JYD.j.:q8ioUil)6Srm\Q0t32]m(&N0pa@Thd+
%ib$4PK[a="H*P^n2$YQ`N6rgf7i#*"cd1JsH/W`d=W!C9]Ve,DH(2"=)Pe;u0C9-0E)?,JZk/e5"2VXfn;WTT>8KTI$NX166-2b#
%bIt*D]JS#\o1mD#)@Ep4F%Y<X(b*ecIee2`jCOto>2r)o9.@4H:<BR+>oB,_QU*X[oNs%m)01;I'9p-Tc/@hTah+&liPrrs-`>]@
%N4doQN'^Q5fB=.0(jXXE;aucP&\WXtma,C/h,&$P6RVj=7c&sW"X,P"*cZB_6=*-b0KauLQb`iMD*c7di!>P2=$kb\<B;9Va!7H`
%&FuDe0<Tu@=/hoq*a/h9?;b=@ETc@._S.M)/F!^c,3Q6,GY]6>.j$EAO''b]O&oS&D/MODHqCnC2a1QtVnakn6=,mYO[i0S^IrEB
%DJZrc<B2-\FW\i\X;m6rN9pM"Y$AVuV6K+#a`rN8<GQI%=[:=tio65b9Yl<.niS*bM_`QD]f<3+]F"kK'#oj-Np,"?2I8kXEk9`i
%,0g;R-.mI?X1'53A`60dG:m2Lj)Q@#0nUB8l=m2/m7+u$=]*-b@<ocVC4h1`pp@PNn,creJggjIL@^`9"7M&cC0(JniE^e^Is2=)
%fCct3#S%1(YO&l7_uY!"jLZH+jcMIs0$-C\^N8jqhh`$ncFjSeW7ot&hBa>p\.e?)kboZ]h9Kt7OR@;<1#=m6M+&!g09c:s:Qe`N
%Y81/5A32`i>rJiT]$:V+=eD;Jk1d!Jo"*69&dkk_B%ocC80CNVC_nXs/Up0s$U5?Y[G]bm6dY#M<4gce=T-7H$iCD0(-'\oRj4c?
%H$7"3>ONiL-k8Zq2)oauC.gM%/l4M-^#/U-+WRV&H<m1f=rWqW([)q81cKI2`aI6Kgq$5)7PDg7NR'\k0$<Aa;0VRA)XhVTSQ6OA
%22#aP=`m$__:C56WnY0:E,b*:)@/IR2bI?]&P3@&?'s/6#k&l?cq1Bn\cB>EgZs6u88Sj7f7h0F5)#a!3@FV3Sp.<JflZ0o@GD'T
%/h1Uuc+%cX/pEA.8p>PfVI7gU>++`'=!h2Q@1fXQ,$i!biQhai0&Y?;nm,sO"/d.j]$!J(6)';)\BlSMANg))(aQ[)\.9)*knsC=
%Ke@*Vl,Gc<mW()%@*i1#5J@`n+rN\&=H=<-f=;+nG;Emf#]qN7`")q*6tXo\2M!JjkZJ#GAC+nKF@7"!5o7^."+J(ZS"f)aPsP.,
%=c[#Uf82eebCTo9>]1=fUgRTO`@5nsRq2hJVpJGD\CN`q/e'X\ob_<J+P2j$l'ZiRm*9S&%nr_04R-nKcs>$LhALDIlRa1?Ud9TT
%5<5M,M8*3='=[4If89c>cCTsSR)HOtkH\j/.NV.KguYBE_2,.bS/[eBF097%>/'?ZY$K9=#']L'?b2E`dXZO/7"p6^QIlVP#4Z#]
%fA$XN)(uDss6r;3/0`$gO[5,$IHNk<=:41qPm+;^Yc2[m+WJdf3gW?EOp#n[T,Zpg;s3T9)g*dNaJ:n:l<I=EcaB`nR7aO>ZG#`-
%*U]-rFY3e^;/PT'g<-/.^!pB*aF^*&bdiQ.ZS-"MMQoM\;=DVsbF9u('Bc7V$5(4eXB0q0]b0F*b,N+ia5O&<M0#ZY0Y;5@\[2f7
%P<3=K]:g.U\Ie8uDT')-9QBOHS4i>T4NV!VV952$:7OsA'e_1qF"tJ@Hj4SnP+?1?M0$ebJ^5FV\OsU![&J,/);n0$;<O)fKgcGG
%SI5I(^nAtQ7\TK:FY9@'LdD8f/d4[C\OZ<\7(X,q,,M1RhBEiPjDb?C0(rsbM160$!gLNW@M%]Xo7reD7U2U0b(WC<Eu.c3o=YsA
%%+809D_=p@*%3c&>Y(:-PGo&?-/.6BS;Sp1"&Cl8>gg@&B+<j*#T1\mi`lguYM=qT8VC%XYnl,GbXaE%S2ckUZ.S53S=9f-Y%8:0
%U)LPQ_4d_,liE/Tk(Pcr8[P7/i`t>aPLZ>O8]>DpDT')Il>fXiRnE8b,U^m6!$:!V3#>KPm".3`]C@I4EA#S-S.>7'!<VDDEGO_j
%_^?et25kT*i5V=78tA'\Ve9fj=E,"je"tjAF-4UVb\Za6h>7NLgf&/<ce["lcV;6;(?E"\2K.B]WV0&Ub9C_H5s_!`KUNesS4GpQ
%Q`N2ABOoTMc3.o8;dr/rbd4O+K>-UQ1t?LhFQ]a9r)X`&2qhLlMIH>bD(`/IC:P7#HhO2>$Z.NL)%Wk_Us6m*&jR[TF#gWjYC5dZ
%;JA6QD_<ri+;hc%&C;c8n`E/1A8Dh?;W-AHKqO$JH1ib./mgOG5UXigdPo%4Z33eo0&&>E>^U;*X+E<t,R?cn@teL:?Di#mc6\\u
%Mo]4'4?F/EB$SBbA*^<[F"YB_<Y#34MeDlEF"Sc_O5H=GGt.@%#'2BtJ'<rYF"S_)Z(8hDZq-UJFlHZ[X<`N,i`s@[8-3`RcJ??3
%SBI14Gsbea8A$U]^YO]e+kGjti`lbV;;K1$gdS<G=5mJBq5&[&=3PI/WH?*lOei9NbddiW1(>5I\Nm0N,:d58.;G+8e@>tpo@4(g
%/uq?rS8qA0c2^'*Prb6Q:HF1[3%'<:E=6Zs\YmrVN7aW<qr`jQpg]fkhnf/%<>N,,0!)T5aA89^(IgU%[,B.s\/<W])eEng$tD*U
%G2^J#@I@+js.(gpKL>+9)CrUJ0Iu1"\MK[R?HI6H%JK*BK6:52Pj@hh4&[bh,Z,97BFAoY&]9McOig:?hKX'l.L/=loAh*sL>q28
%TEPEOHc05nEZkQj4\0T*"$G_Ca@-75C5$O6\Nlf(p5ThQ0")Rc6Acm%gSc[8n`,dHf]GZMirW^$Yf4=<5_nT:>e&RVKd#;T/J,N1
%d!M0"(]kM!\M)aJ!"=FW9%p]r^k#ZN-cRa/D:Ynl\1fcqr!XslALG3eCee4H%+\p;7#>-*n-YWs(P$`!*UG6e#S<W>'B2?9<+PLW
%i]MatDa)rSe:@6fLKi,T+H$XER9<L?`J?eigapi7'lN+a=ITV`+gtB/&MBT'Or@SNE"VQ;-OVQlCpZGX/HE6RK01_%&jcl?g(>%/
%3,"G=`BtDrR\&@AE)F!a0B`8BUe6/Ej7KgrARL="fl)G'am9_;>'YWV&-r[3>8WQ?+Fg3r6b&C!2J9`m)=1tK*FASe,J?N\?8D@&
%_auP6nJ90,g#L5"$Wp0teoiUm7#T>SK'sI'Z7J>pPO93I88_^G]>Z;Y/FjW+6Bk'T#YufaEBTFc1./hcHC^PiQC7^)mR4Mq_QjK>
%gSgqYRTh-:d;nZtEm%2nV/DIN>nH<A\&GDXD]H4d*bMZa$N5K]9s"W;/Y]pT\Mo+E;KAS@q/+g%"8E[V^9HGU]X-?ZLk=_2[fo,(
%l>)"+(0=,RFh=br7'-J&#\I;.>^;W0Cl8Y)q@Th]+VB6'33+Wu:G@]se.us'Yg=>e/VHYQ"Jm\00bLJt7U,A4O-/jh[R!b(KXTM;
%`JYD`@M;Rp)kS]g$#J.bZRt",&Pgf,;@4oB/"%u(Sll#i3YLeC>M`>fW2[X%]J8*Fg&YXY&\VP)cOV($A4la/Ze-Io$2knr[b(cp
%99@e8)oXZn%bk5gX1]ruWt-=-fJ]b%NsKQa=7HnYk?h#l[tDC1".(-d.snB)km0bD)cf_r9:`[1&LWrf2t#D=1Ac/kf2e33T$4T=
%AoiDh>h_Xo[!?GNYGb3#Ma:4hS[EXHs*ECp[?IB]jK-=ha[a'Ceq.[hFSF'_Mr8.8e$;&WpJgI4X]@ub9ia=qTAs1ag$>@">dZK2
%5hiQCC)mMjR;0iZn1dcl>Ar)VVcN-+AuW14U*X\.[>8q.$V;qi/K7#97kGlJjWfZ:+r_mHC9t,"5u>bYk>q'L[(q._Z.WjMHSkCW
%(-*thTT8Y!3N[^^=uSBWA,":`e?i<k=Wi!bVEM^d6nTLXVF?$`Rs#1qEj-6[k3'i\Ms.ja^1YgcVaGouo,iD$0`L$JDs1.okSlH4
%cjCUV5tr:l<P_@e'H3@VDT&o$lsX9*0.eZl@E\p-D=dVA)_3KSe.Osp\J#`7L0cKbm@f"nI?0[_b7ooBaAW-D)MGKYAa/m58)(\L
%1P4&JUk2&ERT\"9Ga@\AURasj/0T]4%BI=EBL2XXBX*bX(.'Pj_*koJJV"Q_K!l>Mo>X.Ua>ocHTV4dl&E@A:G<o\7o0u&.VeW_n
%KQar1)=4ZHZ]-mN=p4>\au1[7:eKBn)/*OW7R.p0i1D%8PT%3?_hhf>m'?\O19fcTR:Nr5p[$bN;U:(OQtM20Xb(e@3"a,hG8@F9
%.Pb02Gan&a@%A<uoY$C4%W>r!S?p*V3PdD-TjDif).a"d/),tCiTtZ(p>DDD;D4tK2rcH`G=C>_(ujJ^.&GE!W=#GDURRfLj:c@9
%e,(^#g[+PBi]"0rl(52%c-ARo3n8'-AZne6_3#F"ZZCFCT\u6/Nr6E9bYCrq#0Z?_Wq-O[=ch?L`MZLl=UK6''XKo8k05T<)BDM6
%)o:l%4392W8c%;kK3jjT0"KfkAO4Cj0N4(V0!F-dgp2<shV[IkQCUd9)8ri%JuIbZH"CtKD!-2@Pn!`NbpnWu@]<n"b+eN_7>a$%
%=bIp>4.c8^<0\&[ZKF6NN3Y6;RSG7mQ0&DHfU21f2HbPi`E"KIfbsUIi.rE(RG_sfZCk,>c!X))lrb]u/Fh+tIDd?<@ZdF`P=Cj3
%,Aj#'ZGR8!2\OdE`4qWaMrY@Se<hV;X9h;6G@Qa%LbOm31<@=J-&#c(aDShZ6hV4O7(,2Uc/p]#3KRZN$<\Qh\=<@.W35C,.HJT(
%[)DZYViV(j^@c0C"\X;)*MN)F_M-)QOuu[1826t#-f`lmYTZ&+#m;f=^6-Hf8e]jKboM`/)VMuu3d(XUnVoRF#u.j9F66U$<C;,,
%L6h1j74`L!nq$Y9ibs@7[[Moag:X][=qm(1d`,;j(K3NT3!:Pn'6&gqd(7)d>?ddU,3*=P),!S^<AnFTa4AK+%rO'!#A*8j7iBMD
%>g3.4l'aYV=E&8oNC;L:XrO&6jH(o=$aW1#NrJVA<q'^14j2nU52m2RXrH#V<GK5f_!"ORZS[51HSfl=&^I$7*n2)*am:SJ_usCE
%L5aUdStZ@,@Q=T+-.@_/iGDn]FJ<u5VTU=\.73!u7T/%H4LhnnPbjGR"=T4,E8i,QGUul\F_1#)%VheY:VE)_-7LKP$&P9%H]+re
%[<X_:/WrnKk=(mU3(hF':E^mL!7Sc#K`jt=QU;_(%;/ae.+;&N'"GSV3LcID+ojfN(P_(#bLncj?8ZW8/p0T8#@m_27TCPh]R^-W
%;PKA4lkC<C=PTa%`u_@9?ctX[rN,0k072>cBOtJJ6+c`oU"_FR@bHj"hCH+"[dU'49ji1gcM'ttC,"+&Jg&0O]]jgJ13+Ha:)Nbq
%XF.gO3oIok!Oq7n`J0>5oI,Vr'="9)MYI5p*NtS,`45&1jl&_t4C-INYZ6'&l8[20CX[.#TWAr00t_pfgLi3dTu@.CR/Bp&ld0-n
%/cs`bZX!\00+\bWf>nKj8WMcsb40Z*^2+oSM^U:BCD^iOUj]^+(>4Eunh6(QWe:a6jTS5IqJp:+0OXb*:WJ7bCNL<H@;O:P!,"K^
%:\94NTNe:KdF?kgP:R'2g"(JS>ISeb_rMskNP\ja+q`=P37B&t@q\C%Ki-2&-1Au"SOXIpH^@HhK+3AE`#81*ND_(U[IVKk@NcN4
%NuYMhU3`(fSr)i-M'n1!b'P8bqs`SL2X47#$#&S)^?7h*NU$tLR'eM2Q"/Tg!&8O#2k8,5_50FqHgGfAP_6*hM3f:kG]?6]E54?`
%erKYH<Mr%r$6+XS.m,%E8NS0])^,oV`Y\bhJTh-p_B61agEZT4TP=X#C<,S'I/LWn%0VH"a-nEZX=.8@QQ-me3WktID8PtMRJ&-l
%QATet=d/eD'bn].c;(Uir$FT80cHQjps?YO#OW<dkJUhUUi>HoHGQ4/q'FuQP<0/")_61a5R-9DXYEN-[F^rlKUAkN#Pc4JNDQa2
%^q-5M$ZCtO)pgiI7Ed*\!$>(^e.$r9`,\+p0L$g]boed0aPtS5Zm<GMOa%#c'<.]l2pD1_#nJFU8tigK"'lY6@sI^/Kntr8Y9<ZH
%mB6pQ.Z$nP#Ve,<A7ETVmK&4Sfk7mKRjfe5j[OA?(u-FW_!YZjk*['IjRTU`?u_aj)Ol]RM5E1)QtSh-Sif!qoH4mg/I=M8NDN;7
%W[0XFS4r!/meZRDWBUB83>SpQ!.;a-5.F.EcdiUe'$%/H!B63O`QNoHi-#=[(4CEsNZesC(_UA[fH$(8;inA4Z,P5bJKGps"XIn(
%JP-!D:'lb)0EC^d38i<k#t2d,=k4]R!Xj;F-Xbb8@dkq?'GUll7*/"pWoMt38s#:20hIVooFg[QgZfJQ=nN9D`E1>QLfj;5]c!na
%d+)RI1d'EdR;J@=[/'*OmXuFA@]9V2'nV!]Tb,<!"Y0OeaWsio:e].>86?l;*Y@%@OO-0DU=Y;jUY_8rGZ'/H;=0aOc9@k:#^/3)
%(+!jB2=K2'G=9YU(lR[\@aP@CC^k5tq\"S1>mt=E(@75Ob'CFLbMKslFd/_YnCMURn::qN*'[I78t`41;&SlM^!)[4F6JR!FNU1d
%MMMrY$ud::HoqHNfJd4MMh2u*&__3D#S)FJFK65"'M72jV*tH;$,tGm79=GQi0A.=Mg)Z4O3-0b[iX@>d.Mgla]e5+1"Db)d?rr5
%`1_NiZ0DV_2LOAgF<mP2OKd`"8+QP^!V#NML:b@M;F;1N;l?9.CksU\PoXU"4QCc<0$WRYgbpJN_oG`=$er.jHeFWrZObSrO:qQ>
%2,s+fp-2KH?e#u%P'6[2,<?)&:gLof3hk:/PQT1?mQ%K6E&g>Y_nfC(CdqYpBWXXMahFnFnJndCrQmoN71MjJ[IUf2gp5B\^f8PR
%AZ]%ID;8W@_L49!---P+=Jj28"DR@6!H#MFcs=$-R3%0NK_kXD&;Q#R,)-[*3H&X>l_1ph<1U9YYqQ[eA'P#0HDX;YKiu'")&I*a
%.n;`hKeb._R$dULG)>D"WcGE.Np*+V`H&nA4E_7iX,X`2D5f+Z?O0TXjreQ+Ce_i5L^@_?Eb)q8;^YWUP1h25e&8>jX]#ACaDc3t
%n##+O8WZ<tU1`7@UsqG9L'(]B/,5fH0bQh5#WP"&p`i>1PJ'^*j+I?.?8$kC78X<`52[([2[ooY<7mB';VDb]#"B/g(PT@Z-(Zg-
%YVAC*/uleYZ&+Te8*R0_H.joE1A_d?@1`a/6bE9CmQ-QY"[N7p6RFLZGHiG_A=7o-(46!&j1L>&TG'\m>-H_?FGUP+Yk--\h*[s.
%e`OM:KST(B6e\&lRp:Z["D0k]k<4.-"9Y^B^Zc;k7U;J5fk'e)b@3C:'=nfpXdoRr?MDKAf0.":L>F,m$1iZa?V'HRc(e/hSo/hc
%/2cV1LDo#C7D9/Dkc"_O\OJrWW;W^d#k&kES@TFY1!WuW#hRo)01TRlE,h=]dsKa^\fRpaiPYa7nJSUJ*$l_oJ^bqt.coV<nO$Gi
%a@#:]p^?8>]"AO'Q;Z-cge][s5T^JI\;GYdk>Y+6H50Ku"5f<`%,#KQk?QNu)e:q_D'=:1Zsl2BbN)cMPVP(q`U)ZO#W@rRrJ+K4
%&`i//UkJi#ED/*MWA9T6"?@aNjZESA7>0e;C[cXo;i\hbA@q3bIS?@%6WGiA'9N-[`CCPX8&c!r`rdL$f5l?nQ@CcBY(F;")Sm<=
%aXA3(W&,j06J>o>57f#3,b*,M(2kc;:1K&s5Zbl9#P!pFk9^Bf_EX`L+E;,uHC4S#3B/QKLQWoi?'dt&5Dqu:?G(H0iclj1H$HIt
%FjMUrJ03e=LU\OYNS-.;BLsQmd6gklQr.Vr<!=bi3iM_g"l$AA`dGLiGl1M@7J#7;5UESImE^kp:QD\?8Pu'O_sogk_<F,D0".Vc
%O<MW?[nf*(/s<P&PM'[*1):>Y&$$N)@2CQSErW1=lfI-1Q!D!1;J%3`@P'KOBHuRncc@Q2>tcKi:'a/f2Ff[n+pA/OWuidhnHpCN
%,joh$nb0U^dWQs.a'f)I5SA$HU+()!$uca^jQqmVSqF"A6t*X?kW(q!2RjtkLA4`'lJjYi<k)o7#5>cg)Q6Gf7:O*2+PFn6DN>D5
%KHLjU5+=Fr*cT()oQeH15J8*rdm2qB\uMJ"W%B\T]I9DV1bBKqdB=UU3`WsL4>N[/I\`>-iR>+\9L]I&E)QJS,agWLmDRDV`;6T'
%8LVlR8fF3[=/Venp9@A`9L2,\]^7$XOdjUK<?iQO]an3lo/P&G;Dnem%DW"?MHE5.q/-ZQ<hmbHScf+bJ;Rm6o0=4e&2W1a;o/-[
%7.1,B7(KZM!?fR=gL>J.DsPB0IIltu](Mb[EkH7Dk'&X:VA22g-if(]/'6ZdnL>fdKOBJ@%jC6T+e:="+^pcSpZ)"$K_L?Ba'?q8
%$/^?!O[AI@,S;;2]0@:h6HSZcOH7Z);:LGSaUuf523LPF<:Mc*^a127h'8&u\lj3\B'^5E<C"R0^FX"^af9PdM540=&0cnPDTZL5
%JqWGM^e5r/JlQ)7#r^^7!0(OCkmYSCKa*Cs\fC/D8O"/IOk-?]V&>X0+VQSp>&le_gc$`\EbK)K.:,9gOmFaCc^F`+d9L-fhP2Lo
%b94nEL#bL-mlT_H2@NX#W<7dV[`2<%gNLkYL^-i\;\cJuQX]6DCBO0IFm@&\`t02:@!iqg`WtBpob84,%`cZ]<)l!]P`i@oat_"l
%3#Q$)$Pm]aK>!,ii<oZGC=ZF7BQog\g3)!)b_Cq@f8'8k$;`:o=-\B>MrImHhZ<22kF+b"18pbs2K<>qjNB)!<ug+_-u>b?WNd[(
%V&7Z*%Q^&i!;I@9hBmMn1`I;heg&K%MB=LN.XXiU``5?H7hS\Lln_fKgs[F?S@n3n:'BKmqZ%Zn3OiD#OgFd/i\cO3`]iI!5f:o(
%i"(o3B`M2@dfER+c/q/?"C9g5Dl'DqKR_Gsr%Wf<ZkbE"eVD2#a3]FhFN$%Q<1N>V0ljr(B\bsG+Z5\>?;Rq9`":*iRDSE'6IGa3
%mOL&d"0c(glSd\bbr_7J:m#1F9lK]!D^.3=#,T2;ThupZS:tEM-\5#]agNDE(J;&)hfSo3%Ojn74*`:eH9_N6OI'cd)Kf=<=Toa6
%/rTf4gb#:_OAm).hB*='c[FT;RVM?;g]bk`>)mJ\e*X1O1e-tNG!$%>EbJCqoanj;-HG\!*qmu4=NVt\LT54;&fFO&mF%"@js!@-
%(o3H)V>X4\M*gRR`#JtM4[pa9DQt^tKou"\jiB1f@)][*+k/jM$-EFNPMCfH$F;L[4lr1sLLR[cc+Y$().rc0mZe-@>g!S^,/h\p
%@o2c-Qj6<^WsaepP:/Gpg73Hh#tqBlea8K4Ng$4s)>,VVZu.rdgC9GV\kt:uW5I<GLrM;$W,TkB[lZOhWBs`&KMsSc(+LIN@G3kg
%GOD-"9,-t_8d$j8=tV<6qVjAR5F2W[T,m^6%i(N8F\3Wnh3f_&%b.21hRnZ&K7S0<DP,]R[QFs6H6!>_Z)&Qg_P?iZ%?^U%i*pe.
%8@g]Th@OjP?SIZ7Hk1/E!soc+mP;dCO$']M$s7,Y"[i+:Y!<%7arC&4Z\1]ZiDe3FL2XY[Y6D?WFq+Fmosu,%J%R/!6MSdq2Pplh
%"GIR7r-h1IK`D77r;F1dW:>Jd5cH/CjqX]m'^U?&`7TZD+@6Xq&m\%SSjO.<&HJc:N<tE[G2L!c64(/"cQ/EBA+b%1oL8`*jqp=5
%lP\Y*Z*/rX'jmF^.eMj\&@\1SoA"=CEQ/!?;Md_\!>pC9k.fYKB?nK%7ifWRr/l]Y:lrd&rcXi<mBU*mR!4NfcRiR)IPWUHi[XRL
%WL+WCNT=DJ0,9[fo9,kLRPdaL*"jD!*mEW^S@R*D,!LF30MV#QN2UmnrIi#hNtP$pVdiOLf`CpURU!k'QJ+,L$.!Pu$6p'*#c:L.
%Li"pkUdt^</a?1ITcHc'IT_V!=913EJ.c_q/4^/B:\OHR'hCVfG//s=7]"r,RDjrNP*J2([@bm]?q+SeP<<SK\#UDqS?$Ob.WchF
%8.$4hp1IbG[jbM$W:`884$_69Gg%MQ2e#rnQTR[*_X%JJVo&`>hpBSoZ5and!dFIV9_@9\FKAcg;P7?)3_7Ed;"%eB`7a4#!aOYg
%b(h(=c\(;I>OA_4&RSHZND7#&+S0X5Zs..;qb,eIl,.Qc&GqLUqGDk(Cu1PPfN#kEqgN*r6-T6I@cgW4OKdl\YES4Km3?s73'a?p
%=ppK+X9]fYf5me3qt4j'm#dlp7Y<I6ZpW8AUP)$rap_?Q;kBd*ZfbF^[Rt4k1Lb9ZlP-6X5'L6tEKc,,K8AG/p4[m!m8RTP!MLom
%8I5\Nn0_PZMMt:]rVO[qCqJujYY+O!b+8f-,m"l*m^!WGH;i1Ei.i1f`hjH`R]Z]gp?i.X(\)O!.N?S_%llG0"jRm8/m,q/Km?ea
%7+6^KhIs1rae+nl!-Q^:HftfiDHBM;PrrdeJMTf@mpAV!dr:q*JS_;kG7NpG'%/SB:E@9"!L(U_NJdm_hl.2BQ6Pl\7ch2#'!B67
%(l/Shb:l%+OdNO;AeC%Kh_mjFKKCN!R"9H^U*De>b<tc(M_gc,Vb7Z?/P2<o"n&i+%<I]^-q.X(K&ol(7R14%X=M*n[I&kndF[E7
%VLO^46i[qHhfl0,kA@3s445f=^e)fip9>&b%>pE%mZ)d,gbX'X'GZ[J1Ar;XmH=oH"l/H1oOs8#!:/DS'%;pCTh^V;gp@-@>>8?B
%:PTl/pCRd5X3c$J1`%fb@[_>"q',CcD$OIL;q/4%!4FAm78O]Q8)bFTCnOU-1q5jO!_GU/@8nB^=i[(D.uOoLjo;I**>EH(0&o!b
%22pha_5m\'i#+#_SA!*j@Ng,fk@eo+eB12dEuP,3cr\Cs-n!)1)<[]fQmj*:,/T^q<Cdcdj`!fiYT/.14*q,X->>XULFMAg/G9KA
%iE/O-B^5k[+O!@lVSc^$i5m5!SOnd83ScDR`YiOrGYmY.m(NaqCT80@$QP$]d=Dr(.6]3sVF.aeCo##FV$;%E8@T'#)l_6J-2=@-
%iSf%<jC)gNX(V#s;WC,"[bjXZYcbbY/#.5<>D<:''lP9X!R_i44QP<aWnrr_g!&tEKMu&+g?3`7,;#dkYp=g)M$?>RX":At=(ToF
%Gc.)gWgQDD2C.\nRuqBlqR^??Q">UCE28rdkE48:qBeX")3!VF'%GXaUF0;gg.>sVh,.T&e*]3@`A7;-+]#nT1=?;U;h1le+FUSb
%*;p?eEDt^j!;YT9<6QCM]!g@hZW2.VK/KYA7<EM2;E?p0ai,NDEt2Y3V7$/@iY!6,[>*3Fa^[le*9@`A$$2BMJkUs`,IK!@!/a%^
%&pf`4;\'4_*YY<Y-liXS:n2^RaV+@b>/>1Pg9ss'ApsIDm`*Ih1>Fh$=pks#E@p/XhF@n\6Hj!V*hfQqC\HO06*0$TT(m?9.]SO_
%67<JQ8BZl)rpVd7%?QI2m.d>NDh\SeN"/\Y11Slh&3:&`(hp0C])#/b-rn*G7he-4b9]JIiJ+:*;:^j'&F</48TAN4e>[*<oh`%o
%k35[3Y#CZ7<WFaXbcs:`;*`#l6rS1PGn(W]<s:.="c^;41H7Hq[]eTrK+WdXDdkGWa)LZ4Cm#i4,15jJ81HjU]RgI$Qam^9LS+kg
%F.u;c`j`"qKkK<*$=++WqP!,1:*I4^n7eU>^_)q?^C_O>NSYD$+cl"Wf*hBTQINk2U.>HEb2:btKZ'$+Do9NK#B,3q@u'(DStrBd
%r7Qk*8JdgX0PGZTEeHM0kJ?g[8('!G$<u%%E3u$GM$-O^Y`Vf\WG6:ed/$5ROnh\'\$<eYGImtt.5SFHWI[6/(]k+Gn'etV'Se(H
%:-<pt&gr-o2R[1^SRQlgk`K,?R1l2pVJBW=-$S%`;Fje-#;I#Z`$n8PLeFs(2/+iDlt7I(4CJo.4_'SPIHTgd?(kL8J+b11RHH/r
%3!<]ZpWV92'MW"M1><@QLNT/a*&':-kQPLgf-jf^]14utCU]mdbo`<bRaqkYH@o#s_4WGK4B9_7_U9BDZRP.h$W,>#HsL,e$rC!6
%gXJ2&&dI_8a_kFs6@52U@dU6#Eo%[^HBs$h79u!N,.A.oXN]=O`!r3=B'&3)Wr-M;RlnU0185<7g6QJta9h2,aP]rbUI/)qlNdU0
%#A\D-e$Ep&057XX9TVI,D5?9V/=TM--U'T`n=466\.p;aOa&N/8m_)lhS(cbfqLZL#eJ--<mQ^liRoekX^kgeEMNk?OHH<eP8nDX
%4RM\m3`IXf'[59<PR]at`G/GN<kMn'2#kR+.c@#,Vt3^tO\qX;-[A^g$0lY=[!8,Y=*B)?iZsO<%eZJ\FuU]i!"DFM%Ge;j4bW2K
%8I<O?ii.8eH7?\+cC,=*IQ::?QAB'1:Je#h,p`+)%e$Plg9n4N9,5Ptd*bm?8Q9g@kNaJI9R8/IbEVqrp=K\0?\^W0YbOgM5^\*>
%)5Y6Eahcbl_MioA)YB]](%Z")Xb%5@);m:P:.LS&E8[.F-ioWhR#8:r^K!o$Kpb:X$;7Z/BtKQY[`.6_\H0P980VQ.4;Z7c&0@?/
%^)ZYTWr#^Tb(]qq7b!ST*kjM]+<No9$C$Em2n9JF.83M^//>&C)D(>#n^Q*FmU`XJZ:J55bn<l;*u5HD&a;e\%`muW`/uK7BG;hh
%[=UFcY2[\D3>-[(lpjL<#eg!JP8RnPRZbR.$>A6`*&lSCj:)u?hN\4Q/[UV$L'5aJiD&f<ebO@`1-8DcP7u%D]VN!kog4j/=BA#n
%Mpc-Xjgt)5>DjC]FH^F]JZ=tkGWl=grMnJo_!2au*eFG%?*pWi)$#$>>Z;t9;SAIim+Y5h`rcSSnF='HP(;d$Sm3bG.bN`N2RVIt
%H34<P^4#`RFsc?\)n!+cRgE:;`NSd"%PJKj".!(ki"5pp4pu$RfnXoEOD1c(Yc;m6,!fB*p6rI82.]fDHWCdKYZ/`YLFs6cV<rAL
%(#onQ,6IT3_jb5=l"-.$$;tBm%;kG]e#pZ,8SJ77qT5`Q4`hf\>I_A)Y;eQ+e)Pgp[51HmRSLhn0pEr3VMbXHd0UC/0FVG\15sL@
%.>&MBLU':c32<'T,`ku-):g(_-Y`([noCU91,]A'lo,'^Ldh`UC95-[%'D&a-[WKf#INOEf(ku\A$RWsTO<&tH7eB<,fE/P6@M.s
%P5^,sj&4*kAC^5XD-3@&L`tmIljs4ilNZSXin+639uF#$an/`KdM\g4ArCH?j^#BNCBZEG$)CBs'8]#T9KZJqT%7$6SoYH%NEsj<
%$arlbF(KYbY_>3b6\TT5`@#3\e0q'1QQ>;4?m>?u*U%2FMqW&:&C9+KiSdpE8<bI+CpY\#1>:aKGTT8@9(gs!7jZ6C1$WeY<63$u
%Plf!H/b4QWj0mIU/2f&2KV&)S'_@Lh69#9o4ZLY/&1A!]2+%32[>pEKe/BroQL"Aqs!9,U8\@B6)k3Gk?GAoUJH-U\b:GUKM24@%
%SJRE+`UU@#S>!i1?,Qm8&Db2\^XnAH9l0*TlCR#'($@ga-(u_D/AL3Yr:'+ZX%5YS1c<W[2p+<P9nbR$XT8ADH_S;AA8W'BF/gMP
%PIAr/X%-shE["&<S^nD+3%lE>DK7"0465%X]%K/WX2pX3I$S8QJUj-fTa.!'Ca_gUYp\RWBJ^6WCImGV[2j;M7@B<2c=799>d#Va
%)QLpK"AD^`;9t)@N0f5(;ZX[=Ns:XR`"`LuWo*P'eZ3#6bpUT4Tj^#=[7)XhXJo5RHADBk/b4\Me)@-Kl>T\92"gh0;iV<C`C61;
%8F2+dh*eQ_mr^ZN#.+1d4#\-s$3L3jVFpb'nB"P8>.Xl'5l?+tK;%?nI/(u.$d#*2#4Km]DB'(.K(`qaW\9U092VmD6CI8@?r>P*
%'K#MY[,QiF:'Y6_Q'"UfnHJd9&f!SMn\D*"9.?Ve=emej_o3@\$t!g9eQ]R=f6ep(62j6/1Ec'%(.T[;;Qr@3fGqU7^$a?a;i8ZZ
%<+]E#A!*QVCL.%!c<O&D#O2)S#](t=T-I*erdW>4L);R9Gf.>[VfFdsr:'2g!^`PZ!*$UU?`"L6!k"IT&uE)4e0EU^Z=eV`G/oho
%o*(4s(Gj5ZZ.3JWE>fVtGo8"u-;8]=ppqjj32;\9C#tS6\7n1X>-e[5:bAb1T\qA]JXG,3o%SK<lsdmb.#WARTd2rfFu(/)gNkTb
%(NEeCZZnoXMjbtop!</*<Rc^?,ut<?J5nbH9Y^b*kVZ`FHUVY:S^#=E#`dlc0BS(E*+9qMXRO=L9P$!bP+,HW6e+u%s(jZ+$mh7&
%PW\jQU?:fu'/-T9ErT+B4S>P4][2jCDu2gH5qEUORkQE%6A4E2o3)T"a]rbK7;V\Xg_2ghX]5$S\I7B:"MsO*5n&#DWrk@BE!8*!
%>##HY$@J-k;f]<lnTl12;lU>9+cAtcln+:VZpLllh^ogkX'Pj4Mcc`2;1!7d!9qW7In-'fWE?b/VC9Ytl"fYr0Oh!s^/aiR)NJ'l
%Q?Y3:6*0pj/s_jl),1IfG[`':j$sUBMZGLc7fb!F8.4.P)MB^kfn07^h_]YA1b[J?Nns:PeI/cFj86@K4HNL<LBTC5E[;hN\6WRM
%37/$Q*(jK&6`][RHN"O/D:#jdQXm32agCoT)EQKLLdmEkm80fHW6e!>Y#,F)k@i8:#]$CJF?&h?H+=>j*_@k[+CqJWfCknQ5SJ:@
%6;KI1]M?);pDndsQ\u@:%KY?(6^L[<_i#ZK2iNb6o`Q5G9iX=9_7!RdYT7U(e.VH;?$-FoMXMAqS#A#N!&8aB&;\m'8=j3_cFq.B
%ml2Dr7jkJcDIoDUHA8eW6:ZalWOl]md(g8:GRYs#A$7aaTH!EjAZo?tr8k@.`Rr*A\#%5iEo[i\K<^GZS*<s7?[Gqn3mBY3s3'8g
%/Z4bB$_)Qmbg&;#jp=FD&<kJV/>3X^1lhY?!\oQU1O!1'B)VHmhm@O@5b%EsSA&]QZbOh3L9*=K?d%885XGfXm9P7"9$8dE3"\@O
%>0GOo>iOph\9#"?Cc)":'Y9D4Z8:R/?JC83N(3Ph3X\4M5^6@dH`]lhWajSC$@$Nh#bEtH>V<j33X`P2VTZ-^j"2[B7&G&j%"q,;
%.PB]<Cder11.I&X_7mSf@hb1rkpl>t(AuDgV?"FR.*I@4b(q7C/^/bH=_%2qUQ[ius3ultUG<:UKP70q@XG%VrZrBb(nsmm86VpA
%<0a>j<Jb(UY+VO=ZPTPk>SRd#EO:9=*>X@8#2q\+@JE1EbrSPW-#>XLg"t8D1B?VJPkOVo1l7g3d<u[+CuPXq>u53dA<)J>pF!ep
%F9^6)B;&ah"paUic5p@26SG;j$Z^tP``7,%'c<#BDTfDWQgiL,@F.N(XcOa0`c/1,LgNF;5jqpC^lD)Ur&C<["!B=8+Vs$rFtiP,
%eO*:fYmt!;br`kP0?AoY*pfB[J"\Y"1oAn\$!^@X0GeqjY_Rj8C<g?-0a3mkGeE/!K$Ahk+\XhLlI+]cN=hW_NF+69\JS(tk70TE
%iVh^P`hYDo#V/=S]7-aK=M57J+p%"7Ak0Q,H5[VqG`KmER%1/'is@dlSg)8J9LfRS5DL5-JlXX-(q2]u=%E!>E"teZ:ua5N?$%.#
%CE1n-aUiQF.CdXf5iL.)!#`eu5S#j9Bo.ZW?r:!-7S<$ofbH+6<`O7;Yb1L@d3'<kCP^&";$/B!+p3SB354k^K+;+VKr:U2)3Ir8
%U)K]%W(+X[``3G0p=:ROen(3nRZ;:)FQCpMPSf7AqV"2d4gU8fMCnoj24.j2ib:$@kgUQ<qE)MH*CMk>)<i%C-UD;li)&?F/tG^Z
%&MKTW>_q=F5fT0*eILWXW'?6Y&o`d8g]Yh2-eV]--;<`!XMCI&h[dA+UsGdpWm4EHeh=#o!$#aP3fP>Y:*b)a2%,kk^aslEX>g]9
%7C3TB%D"A73)"$O@$X.'$AHUegc:S)RF-FV`e\5lBl?&]+u/Rm7Z4!+UD1O,B#P#%d_T'3hU\H#LBqFH?p4mT+_')ua=lPYIYjd!
%,bqh-VI4?Y>dn8Jf^`Zh<q?YZ57J-Y(og,>#D!`8NNsa8;QLR5;ZR=q(pf7u@+I[9@^m`,;uls=P9$73Q5#U8CTWQ"qqtlaaK?.C
%:njhDEKd-A(=]>V$A0_rQgE]A%%Cea1(4A[\j?c])[Sd[+]oBIHlVSW@La;57UFN5/m9_f;5!l^dP)[uL5U3tO%Kok*C2YI;4qg9
%(fZ#udK6H\HK30]%r[XhgKt9_4*W$2Cb%qb:f]&+aXiShNPU57E!Kn*L+jjjJ7_=I[UFIi$`+j-@:i#1"T,*kbQ?;i.k"q0AC)[I
%+sQ/7U4b:;bGIc4!kU>td7T3C!+?7ZHZ[&uSssnNM873=831=RBQWJ'1j#@!O@:)OBR:_mWi>LGC6\Mp(5Cf;9Yj-N#Un;l71EB2
%]b%k,eF!>t`$lHOS(098h*i+dC[FL^:ndT#\e"9d8IRmR\%VkT/Fh2C]ID2)CHQYZ3T7uGKCo\*-7tZH(sYR.?&gir;?Mf7AM36>
%7+stq"1t0hSWV,^5Xp!q$Y0aPWL?3Y3T-:rCW7oa3N.;s8CM:^LJTPE*+]\&jQib5cXN8/!YnG"%!2?;5XTP<i!5<E/RGtWDoC-#
%B8b?e$/$;*%d#)p]Q/<Yga]BsF<@dHjnuP1Md7B9LEIAE4Nr1Th<8l@Q,RU8[Z1jZ$sX;/7g/+e\E1MY!geCp>99+*797W]"8B\>
%!mP.pbJVP@g;9/.)*u8_12OMF[q$kp*.2uCI_^s-kedt/LOX"#`IN^tF`XiZ"Yr:Gjihb$*60:PN\!]h$;h`bQK(\eZ=X3^iDr*=
%ija%,UpsjpR&91-WuR^^,T2UlLKC/SP`&Kn1K^CU.L3;GU^/lW*0`sYOWA7)0:kgl"WLCC0Z:^p.9A@gfB-V._];2Zo4#V^(WaC:
%gF4M7__rR19kMRW\CiBk97]#ql8B(mJUfjhd`j0&JUSB+*')=REe6t18C6&eCj%_TdF#jF`[42/?]bOHTX1X:k4f',R9X<h(CNo3
%oH?>>Zaf(p/]a/#DI^dScd3NU)1D6F+//$5$71JR%.A#=-$0XGiC%^23"A7b,hL`Jdr$5;VQ^/3N["dh#3a,DN?%572nHP-jLRhL
%_7!J,(i(M(=:$f0j5hBt2<f_+LY2Pf(5j1$#baM'`Zg0PHDKP0OUER_$eusBoTTp!oS93_0nDC'C+`DU_R+$;+pU7NM<GpJ%Or,5
%J\"D53kOY5!g1BK.Pr4POlL:*B\.<VaD!D=3uKXj;J6&_b,Bb4(@UK3O[Cl*HoQp%07$JPkKg(if#8fa)/S3IORp)X3/&=R;.QQY
%>7>Q)9&O!F5gGWM$UCk1grn!b+,<fXK]VuK0Ti:b"s,X@.#uNNe5fs9>RO<o5`@i9pKf)`Q+L5c.Qd$:OiKar`WILs*nOp0V6RPj
%&Aa=>IkL)t_X?BgW8k2/,r8"2[j'%%cuGI6PqqP_i(MF3`L5b:0;7!<30E5V2uI[T\BO0L(3(<,33L],J\jtiN@8DOEIJcVa,QjP
%-3hp[C#aF`,-V>T0\%Z>pm.\p_:4P+bCpjiP:2Aoi1t@3=gOt6]2t7=[CS?X@34LL3TFO[L9`Mn&.pBJ7oPm4%VHtoJU>k0AId?7
%o^3(+(l&6Z1[Zh>'0Zjm?5R)j&#0k#cd6kRj+,J`io#`IC5@;Wn`"MZ8Y`!s>o\MZjHI46ihBn;8l6B@[b4esnMdbKD6mfFko^pQ
%Ge"25%WO`P4fH><!A6ac<>egW6igO[>uYeRP-L\>G_R]R&3@J^Q6/H)OQ)oh+jZJg`Sl6D13-,L?KE#e#C,6Irdr%CVdb=F:/<X-
%-I/e6G/M8W`!:4qi@OLQQ'Nta3#i3u-]8?X/i,;671G#M3P",l-&3?WgkLX.%%q2e`$#0RA.'Oj$'\?G,`%(;L!27,k_]Dk7H6Mn
%LYE,1HoMW@[HQR)[s2q<\1CPp,W@eik*M6NF?%Xh'up8CA#.=$6Zdms0r>+gTo9p#3[HpG@b>XQ0C,tYChbqo8eu8U3,gj=Ohd+<
%EgWDd\VT4+b4e\R.Ye.XOY5#%$>U=2_JNC7;HuVE&BCf()=a>o_L^`8_%KL@3#icFd5`U;b`T]2'-7oKI,9\d%s*4@:'l^)3/[HA
%ODp'F`@aV>\-='.Qm9Jcb[90MKM.gUmfJ/8h#2p/_Vp)MSS^U4#KId!R7Dpi#8\Q;7\IMki#?uBUW!FmT<ZYk%\A=CNY?tr_82qC
%?sjl4K#>[\=j4:-"UCWLaR="34Fe/Sb$!U/]u8[M"BX77)c$m9VCL"7*e!HC3)\C/'b2EIl?KTD"BTgV,K54hfX[]F#0nE7D&@MR
%SV^K#n.7[9G,)i?'Urd"^dBOJg)P&C_h8$t3,Fd8P`%iC_g$5Up$8N,T4*&7lp?5<B_8/3pQPY!@aVIs!*j.A3c=r+cAj,0rYlRp
%S,Ed<dJq(kgPa:^h*QU$2F`b$7gqHO#T`tq1P;@>rDmT:]oE!!&mWq)/!WK:F_:!u-uZI^$EBX^M^^GTYEb(Re/%Q.:2o^:X[J3H
%(9QLr:Aa1kdKTO!d4HL-j/d/q[a67ZUV9*/pLHs9gOU-36/BL.lC6cQ_P3%d%\YtdU^a!26O:Y!pCtXD%`#Us6VfMj2iu>K-L?>4
%K:&Ae0E?6!A"X8=odt35\;Ttg3]eCGE6u(S1+m^6JiSL]"j&]Rq1b93&8-:s#a&Nh=EDVD`7.^4Nf3H;&en>m39<5TCjtei+XtpB
%L9:M/aL?iL;<l4mQPjHiJU(ISk`e>6H8jeeAAeZ[n1BJR4N$0*_dZ+6T:C.EE,.c.1J[\17!:i@iSHguVs^-O[^X?H+lm<TO^/Z<
%OhDn=KkhLW>@`MQSEgXP!t+dG5S%@mfuRDtDic9E#:O*1@,/Cal\fbE8DI3%T:>(^V/i@jG\gcD2+Mt&4#*_ZNf$(i%)$2;Smk8B
%&Bj'Y6Om'M>Wcq]>8TBG)uLs8I[nm"T`WGp`X_T.<kg!6/8n*mM[)at>Ae^]OuN0`i<%"bh@L]ZKQp8U"tgQif*1_7rBt\%.\*u`
%;6a/R$fl0&16AuH1J9moGeXj/D,D;h-3b]:EkLXZ9:Ck17Me8t>N?cBoP_Z-$5^`%jt9CaMrP6a.63T5]V46IQ#09V2l:&7!N0qd
%d>fbjFqFbpj!s$g`uBaPAZAis<9U_B%-*>>29(L`3DfK#Ffr,+hVcR+Eg._)*hrh&6t9bEN&Mq90QMkW][8AH%urWh)u3#S"-Yed
%E$:V^SJfEd4,P&kdC:lm61<VDDtL+sX>-JpUJHlHCGs-NZNptfm_JE["9F7XEf)f%h'2]];7s_XLb^/['Q8*IVeB[3nJ2\CN+!EZ
%iXH!S15K3MDfjPG<?'p,#mcHn+Pmei("NU4hL`O\ca"\Mi%IM00fd/k4eL-Mm@nhm1.?V3MDtCS+aoeV]J0H-]F3bZ^Vm>pNq(+'
%0MkjgDb*0(^Dl2B'gpJ/Vg*jo3JIoF*,kJB_P:'X`Z&i'k0o2k$c";_cR9[O)lt%#Rrrba_(:B(@ZL!0Aa6X<;7tk&7=+'n"6-H+
%4L1G2]J5a&gB__BN\1_?]QF]/kPT3SkFn<3,J9]skcEo9GXE#V:'sbceceN$jT'4P+#EDs`U=#C/%l"Jn[lUdLB`#[HoHB98G"f7
%S)+Sj]OM@+LNc)ejeFSS2uG;PnD6(7)iTA(4^14+$*B6OI)3YTGW@m?ZoZ%Z=Da1kVU.]8&A%qd,'QBgYTeuh2n3(YBKR7Z4b?Ch
%@W<9n)t/YcBFZ!8%B0sbD51A=*^`ZJ'\SIia>:>e7I1f:EC-=,C@!Dn%\`"*DS"$4oUs2nG#Qt``9sJ@X6gHk_5Knh`r^2d>k;7B
%DFgXEiJcEK$#j#X-[&u$B78OQDG8'+/5GQO2rNd#SCe9"oM/@%Yo?Bk-n/<;D@GDfa8mZ36^8MIfLbGLQk=Gak/_Fr_Ot-jNpObT
%U(O:uAiD';b`do&3Wt^.k]18o#&p6^iF6t?(la7HVIG/",,dK-)cPssRSIHR3n7,p.`Uhp$_ia^a._=nI8NKI(UT[CftprRZl:gD
%$nf]jTk?keDJhB?5P1+3`pL54EB1HH'#G'kD,\%iPrc''C,[JIa:5%j@g]nHb_b^V'-Dpl9:WE4,O[V#)\#lYhRTlHW)fT"$cdEX
%8sgYg0l/eG:]Q+]geF![abYM[nR48IQ\)gmJ_n0#!dE\d2X"G__;/(1?morJSl0FL]aaD,[m)A/dSUq!,V`GPK=b",iL"I$gl:ab
%Cu%Bp2gVFO.DiUNQpTtfPM;)=lu5^sAjM]nkZZVVHmaV333h;hl!L7&[*8"F#E%lj!#iSe^%pL:DNl4la.I@`U"QA#,j0>LZNpqq
%FgsD^EJ2=NlPp*LB%nEjG#M=r_It;4[p-)>ULDemC1r_T)r$@l)4eZ?m$Em8;JD/$]2;\+BC/s_L!:E$G[9*B:`sFn0#.>j1aa1Q
%MqDpch$NGPfuA31AXQlL_6D`Li6WZ_@Cl]2?_Qi)G%9/AH3SA*2r4d2rL+S3)b#7he%g\)`afbu3OYESKOc%VrDm]QBG@[)LNlLF
%`U/DT8/bdT\_R>H6L\k]/e%l+&UA[TDDroc(n%1%gBMf"kM0rGTl0TWDDrgk)?X_N/l[Y_5[eZEBaPom3P!u8;L7REkB=`\.5cQ.
%Cc<=_E^ZWrmD^AJ%+4(aDLak-3m*$/Yl=063#gW^#"Nu)bYj"f70CUJ[Ta(00I8*S)cB&InqDE$,Z&.d@s0A2gQgUG#o%R>@hH<f
%^,5@r$=dAPH//h>.,Da_"0sPtXQsO=K3Qu>-bc(m=>IK*Q)A@HN>&d'h,],ceSV3><k$(lILEt$GUscMk!X?m15l.9Z;K2c`TcNW
%?'K4WOYXLJKmD*e7Q6Dg7+p`MF<duZEAm@b'MR;\:NA]Z,g^<6SU>>M*BdM9Hu=0i`di"j[h`F?haQ^/q;l<1c4(I-H;u5#Es)#f
%!^WAjDM0a"WVm=o1RN\n6jDdS"id`fEk*>*V^9B(6UI//.H!Jm(mI%jgP0aL+kuMtcU`U@K4fq/aUJR?B';R%.njQ[LtlBJ72S$4
%EiXR'4+Q+:X@(]$kA`$Mra_&L#"U764Lf([R*$i>kUHSI_s;h5MjktgZ^M9@X`2O8Ogr6q9CH_-C^^\?mc&2\CFWZ\a"Z:f#Z%Q&
%N5?%+Mq9u#+P_3-\?=QpDM<j4Es+E9#U>@7"E#b+/=IQo%8Dh_!U"Ag!XeWrr&+c_>4cZjWXPpdI,"H:S%W[pi69U'.R1l2S8E%a
%E.PJ!<Cu5@)0]:rG=>UjD2hnel(W'2$?NbeZKY=e[$]V+N[UrGi\odbGlSP].:F8Ec@FXfGBIoq[Pa*?k.GO:lbF0#NnXc>3,TZf
%g9r&3#"K0X#/(t:dhurUqWpOcgSp.=%=B.E$T/-mC!:h^_JJP.5K,)+TT`P'$OmD.s*]'=ThX3pA?#`OUE97=aUZHOC07!tD-ufA
%mT<$Wifn:N;+3t@VUmjo*aP%9P\o&cl0cA:gNo6<)`V@I'I+S90#ffK,U-DC`\nS@)jrLj&V6Tp,.8LR!s0k$SMR^:JY4`&3PA?h
%i4$,+(u*]D(`U=/gGh=b]T=qX0nlobSW%Eu-^<57)V78EU_d?8`qEWY.:GeJ^Q>^[ejkCM\JX(gN.)V6Yt_?`P%kZ<dFq-0rGXO#
%d2[n$9q8Ht^!,?L(u#&.`:;hRCdSl_^e9^?[e4-jfVUH1B=CIb7UV?='jHK29YhXgQ??0cZEN"Db0W$^@N/2n-'f.O0t\9g'c19t
%C.]N53+3aq+f/Xf_DV[Qe0E7-fXAb+bGbPt.k:OgYYD)<)Ef:N$/:JN7bG`HSai52'=K%f*SanMD5:a9C<ck7!n,C4FF^(t^ekqM
%*>`*&"u,_&idbn</u0)r%'U2s9EVb0J8GSB6Zs@qCdZDbL"s"RFIcasjMktfHQ9d=!&XtB^dWFZ`MS_feJoB1)pLm_QufhsRZGfc
%K@@4_737+tdo;b7'"q35=Vsu\l.Yo-H5j,QY"^LB+^,QuIMW>g;ko&uehrIRGOW!`QjE(Y*3ZKD<.VLAg)+'?;Mqmlf7n'ikYWdH
%7,S0)LK0kGXg12_(KVOgEREiLD3Y?OF/l[kB9<k-%@RmB#bG1'<6cEE88S>Bi\'O@C9-]U0ajq^W]Ym'n[*kfL*e#J:)iU'dTC$>
%Shd)(7u1;FT[s0a7dV'gQo5N'&6H\Vg5<h.(Q>2M$oN?-D3M=AlUDs#dY?pE.,#"mU3/c/&V\*Kg?;1\hMM_LJ^L2gNGs^%-#A5m
%pe[W#OV>+\\.EL0*2">7/pf4"2Bq:*l@k$aSH*$4<LM=B_^]ecEmqA2du/qa1O(hQojd>IB4m"1-\Mku%GjY^A`;]d]\AF2'BMEn
%3ems=fas`K+VtQU/Q66m-YA!3KgE."?oFh/!&,1<%rPE]RH)M,E5\L3(FLe=B&P*Q/6c_Q00=W;ZqWJ.gU_9ZK<eA35fK(0ZGH,9
%cT#3tCo@KMK8NO3AU^gDLL`c")85:WaiKc.S:WQ&5m7ffmZgM8"%ks'j<S9R:4m-j%`jC\8S,hVFA8$'&>#AP%2(m3hotWC:co`V
%S;n%"=W.oL*,o_bCO)G0XipY57>Ah5($5bf6t:k11ck/I1,e&Ed>l&ZfLX5NG_0Nh57?[e`3IrU4+FK5fT<mUB2c)*Hj(r;S;PRP
%5V+<Apna\GdDa&T<.5\h@q+aDF39Wt3]F]5M:cda6c6kXlO\T1)Ru7pC/,DRA'---@ksK83"]@[1bj%eA:eE\iF#n]Ce3+hP/*44
%Lu1PC#Y/>3f$-**,du`iN/7um'T9qufRgous4g:ajG[L(E@*RbItnonM;BnH"Gh#AJ;K9F+po<[M2c/n\D;-Sp01,;2B2X+.Q3)&
%+a,B?%E6n@,ZIl:Cu>`[mE;#U%2+E2&D=L5'V#EeYncG16\<CrNY$sT^V`Do(C_<.LRGC_@G!Uc>'%V>2-Ygs!>IH_0I2T8jV`Wb
%M-O['_fd$X3GI-E<.m+JL5d)lp_Ifa2Hj%)PcYD%7[km(K/49$(/>4k-u9UC_sC](pFkc&,tDBR$3c3b4K(\ZnMX,X2FaptH\NCG
%)f)V9]qp[AD5FaEf^MOkM;^"%R&5*iK>k\3q(#-KFdt"!8>c,FEu$[0J>\m_@UZ%Qc3W$^(gmp=&6d1QfKcs>(FrDs2Whf8F.ohC
%Cq'I#'"23(0Z-K7)#]%ZZBKs$WF9t:#3D=?$EcjWKT4.u7c:dIfI2c#lo!<["<-*6JZp;O3]4E<fVh:"?!&)#/RV,B6p6fL.:>Hh
%_uUK/lIB?GYt<T@$e)U%:;Wm+b]k_-PD"p=(rVta&iOK*o[XPm_F>;HQu0;B)aChfckmY?_F><3VGda=m9u+Zf3BkCFEp1$)e3;d
%K#Ga^$G@?RVEf#H#ocW8=XPm92E7eb9=d(h)tM?FF-3[=D2HgW:;Y"\<\,g->_>^'3RQLG0M#\>792V)hC+hHJZqH'Unc!7_FA#n
%70#+T2TV[n&`=pN0LAV-RYuhnYu/)GPH`GWO\SG:_T!8u7!"KpWB7%.fd(CV&jt<V_XH$;g$!R@YgF`B_<<pL((!Z-iZr?i67M3U
%8]%@fPTe-q@:K`p^k.]Q_(<S3,#/b/,dWh8&iQ3)B]0d7)cP,%j<A#"1*nM-&iSmI/]('2pi(cbSS\ut.RoYE_bm2eA>laP8b'%.
%8oVVN*Qa7p%BlE/)\0DJ$P`7cE71sVe"l\'/#12Y1/>`1Uc<)@Fu#t(UIn'?#oF,@%pq7(>@9u8l59i2!-Do4*,IaWA2g16%\K,g
%1XV=;!cX*TC)4crj%1L*#'47XW>@ba&Vel$feFSh?t16WR9^eKl=(43#]gJ6[?[tc/#_8)ls:UB,M_Eh,=+2?VpLBTNFu&.bMX@V
%S;Z1U^j/jUR#341KFJ4pT'LD.2Hn7b:Z;FaUR_^Z%@i*2.<L??,]$/I:(U/52YI1nUN7&+T"rguXr.NbbR$,5eO@>EJlnDVTP;%L
%S.2OcrZ%r7Lb-Qs9u9BO'9QXPJ]iYd$/Z_VNTM%i!8`FHL1J64>:=;]_9V$gCeR.`8f%gRT83tF*/0AA(q_&`UTi-@'2f'+fI-cY
%lq.h$Ch"k<MhI(F(6it#,[oHLS:lmVT<@B9#ohVnPEZ(\2C-a+a%=pF69Vq?#oiK/a-MX:NQKgaS:jVqL72MFYgEW;hTFi:qErl[
%&4:e;FMCl?11RSnnN]WUU:&7_7a!bBGnpc,6^uJMOs@+qi]s`ORtZi:Qf(Eb\\e]nUKRsV&@S.P=C6=;&\G(`#NZmVi"tSrf^^3=
%kJgn&fZo)pU0p?4irr<r"C#;YbdeVD$8]:r#],2tUb)YV`\83H!4Kn+NY]R%`V&!\CQ/ij(]@N)/"cEG'No7GY;I(jj$mBCfGlqg
%1%[>`(Koh[C[c7.CUab"brN]Xp_nP*E3\FSBotgg]<KnK83r`(H4:*T+jFV*it7S0%3ViC(+s,0Y9?2E=6!1D#RK\=n8?_<&1%h_
%&*7*7*@D[<DO")^3j]QE%1sM7m,bTicC_CUf+Ph>g]b:oIkNK9E7?a+4G+3^8_8Kj)SfTN17($>j]^[<2fm%t*c-P;!QHu:N72i&
%L:DuB#J=$*,H`>I4E1t9+V>623T+*#Sr+M,%>SA:S%";o%FIDOB[a*B<.eohCa_T.%GkFZ@U"V17T8J`CGZspP"iAc\0n9aC^ha]
%@0b@%S7I_[a/RX/nH5**"gqBu7URsQiHGR+k"'940\ZJ16u2;!cl!doJkdH^:=O-P2>@^A!-I2$iJp8Fo:0D%?8f<#EgS^(KqinX
%@TfIh(8;s3TL#VD]]'cDpjdQ"\L?%%1pTM[=JHK8PE[;niFdD[N=0/("ro/1"(R/)bS?6BXMI%rACh+Ar+`/`AS*`G2>Y\@e8C?0
%0D#b%.3@3oaB?<K`NDZpL+kbk_P:3)[*WIrRp6E%(tcsHeJ9N_F/p%9,]mIqnR`btl5lmfg4A#f=tO_jJI>Wj/uQ3*Eb70OPS'P/
%Oju33$FtuCLo^X%K`S5c:''CfC.J>gOW.@2W>L03C":#(6)u)_<Q!PoMdA!hZ\M_C33!lb3[E0p;Dk&?%s"]/a9:mY*)d<2+ImPD
%;CsU6+ZH3#ZL2U@N+rVdTh&+:W((kK3fuE7eJ@5&'<34,DN!jP&/*?Z`<E3+pl,9D:CTEN>RNN_g;:2.kgU/@8)l4)$kd*g%?%Nk
%7>4HB(ReOg?A"bA%EH=@b=:r@<%&I2Kr'O1@b`^uQ5UD*"p@Pp(AUt0/grT>""8r?@T&!WpgQd/):u&X,.3B1U]X-s)[Ds"Eum2t
%D`k:HiM^;noa?K@n4HeVl%([D;1l7`%I5V`[>p$IK$Rn'LY49K(5c:l&[;E`C9j>o)V$S+BnX9FD9ehe0!fF([>$^Z98+sW3Y0@s
%$UUs=H$PK;%7h8I.YAtE25UV!!&_7,&)a@RbEbSh<r%.W$pH96BKJ/#>+rbX2LCng<*JL"4E>[6T#QBu*hE\%Rr):DFrJAU^`rMh
%lnej_+c:kMVdXO#%>IUr>S3qnA2C,0-<tQO[)f'H:7T<hIYQRbJC>)!VpNdhPc$bgP1cu.ChAn1@Q.ORC"(:1S\q=9Zo&+ICH@.-
%"(?2"22sLU]Vp@eVSPAf?"uB8)Z<N#4N2?e6@W(.&Ha=%KjL4h@FK,up7JN&^sYnrWXd['R%<VIXD*]LZV],VaCsfjdPTT$.#jFA
%VL]IK0:?FBBpjam\hMSu$pcn.;l0R!64[E@A/Z([QGZaaA<@bG).FKoIaOjI';j`uPi#8I]C*a&e<nqR_=JCC<5soPql9J^U.(F"
%"@b.UM$WU97@Pm2$e-<X7S?)uL5BlV[*ET%iFHYqlsf1;$S8Cfls`Q3Q%is/C)^^:i!VX\FA\klNSUASWR;[m'X;&n5k[IMJr;([
%1@g-aWj(tk$Rop=\;8QqeH/@\iB:Knat_<%Q].B?$RZD_`7.,l;Dj"k@jt+*rodlao2H)DN?i=GZUrRpLU4KUdbnLRk'1UmW)T0F
%ZuM$],k)0Y*Khtg/=o5)<UN8oM:&?IN`03hB`NP.4.%H_>2tr/E.Bdh,E%V!+f$u`73ur*1aYbN%?O%h\KDFPUGYfi@eaVrh$M-l
%d<PW&+qN%q!JsAYbo&V^4A54gPHgn!KbW:iKoWV2A=OX!n4Pm(A)M$[_5c>HBF*1`GKd'f*$N#[Q;aPe[1Sh;hM+L0W[QQEB`+DJ
%>0(AbE?h%!7?#fgf4Df+LNm]I+u<O^`ZL*/!%o1?BP9cnZtSq\T^aH>(6,FH8->r,N=g(h.2m$^1e*maU7jiX,.T_]S.KRHU7kC#
%fukhl\jUt.h3;T?K,?\k+ji?3"QGARkC[S=[)UFI3?_S$a(#koR]d3=4>cj$;?A_n6NaD!)Uj:%X's"cFMXZe3s!a%4;CW?FU&d&
%^$8UG!"9<,=@dLE>\Nnk/5:kQ<^Zd?5pmBc:<#++8Pcm]+iaQA9P?Cr6[Ya=$*D9*UsD@oK:\(T;9jj'&mS7H4-`[:'o%aSOMme5
%$WcU.B0sN/#5%=oVUe";QQc\n'KW<o2c_jN)XpueCJ6jO"2.9*C`kP_<$F-1g1S6pQ%9cbnXr0nPM&*Q3:@sj"\':;)OS%UR,p#8
%J2krG!Z2;Kj]lg2$X-sk?5<kd[6.Hn;:%k!Q)"En1l?:)@"Y,_Ao*$k;0Q'j!=gsMfgr1&D'!:$@MT+c&eNR\Jj9F8$h&/u&83>p
%k`X2@*gDTr5@*t$.0KFiB]l)8J"&Ge5/f;*A#`[@Do;br&g!*<bq,hjO45Ti@-M\&R?Y_]c+j;5E>uY+6M/IV`GW7j-]e,uIp9D]
%LA.lY*??318gaQ)0%pP;7=7aX2!Rg+AUkK!;_@WgAeusnC=k6Fo+W_*HDtE&2A^f-R:aeE')pAWd5LO<,pLpd4$(WSkr5BoB=TL(
%osrKiP-8RVBJr`iSoJVKX7L\Ge>mhm%Eg]1b/?&rZ$O#k4:7]^WESjh+36:=b-VL/B!E.jop[7*`d$g1cg+QM=``H$p:;:pkK5rf
%>'_'7_eSV@bTGkNKc_A9nAD9LBB:,B26kd%'`)sY=Yr?]$2U\u)oI!sa=?h-<B=a$?h^kIo8KHENqdm*Rf15tZ"NuHH<E7uR7B1$
%Jg's]C))]1RI6HGI53dqbe\l.UT.S*Q0VFs`F2uRUOldqQ`nt'Fdstka2MXm%>9dWnG-*rk!*',*!QAP+%F[I\Q6ID1j;#N]2C5,
%&3$%a`/WpCL>:,W3\&NlRiS9Ul?K7bSTVTsn7m$siooeIETH^;d;$$mh.k9jFSSA%5`tU.!j!coZ7dt5ji4McPGZKVVlJNOPoHVN
%HuE#fgbFUq?U&F.]2N;/h9([[RIdX*:7sB*_.#@RjefWE<0s*>E`67]Wlr(UI_su8Qh+1IajK50k&4ip=#!=LhnR.h>X82kg5`X7
%HuFGRK/DEOQ'19J<T]P)5q[4j+'%2rOTnN.ha!h`eGI.,Wddj!)l47QC\56pWmQb9YMFHHboS3-aibT))W;n(V%-gt^sWKg9Q/Bi
%lt:UE>je&o%q`]^ch.sQgI0?X3f(Z2bu\`3>Fgc2/&V#qf<4qEm_q**nr7D.H13!@p,ci\B]b2,[gK[O:R?`aW#FL#=ZkpZRl?OE
%^@e/t5c+@#UQ]@K]02qRV,hMa1:$b1]N6f[8%[;.^JmMr-PNM!&>b<_n+/I6dmKo.3C;P!p/Hrif74$CSagcDi*Rd?A6[Srn'IPX
%C[K^g,KH\H+d3il;X!Y`nVmD^qX"ap^1c6qb*g%i&%,!XH+nIE0lALlLM`_C9UKmE#%SW^@C,*-IaghH4hT91nko^,FER(.QA-9O
%>]g=5HJ/6\LZCq&g8d'SSsRSneGf4Hd:M\=`d5%Z26'#$`9HDDR7csM/A5Cn84M:+7qUr;KU/-!Bug*=qk!cV91q#4nsOh"]NZE8
%H[5E4>-3+`A"%mn3$0&c(S?2:TT+Kg@0DV&("^p7n@edfKV4)CmuC8Fp:Ul/SoM-Kk'-?%.TPehQQu*YdP<t-bf$$nH5U7#fWI[n
%osQpK8upfpp9<>3Tc3L8QEf]625Z;`GDZXt&f<E1]`'p3k]cMBr<@%<_8D\gjNR(b*%s+j#sQ13Yhq,ghUBOaqml,`@%<Ilm_Kif
%!b;*jo[#G's23LgZ(5$]ZLLUJTO=.:MfXDo%8Rg\>f+7uShgDm'a5,cC1=VH09mFP1T*#>B/,7#d;59ES67e/hWuh4Ikn&#`B5-h
%I(auIIkp$>-<]`ElUK9<R*FKMd@SE2VdY\-GrYDc#Yc]-j8\o2r$f/Tr4KoAV\^M:B,p4PEU:/<%lUi;fqX!Ob]8q`>QTM.O$6_m
%`d<.*&r/K(i"&UnD!YfJ#=HSnb^'ebq:W*'gh'dDUK:R.>-E9oSZ7aR6Tlt@j\Dl8V&l"@<;#`7/pf0'Z<_6fFmuV)4/uf(r"t@l
%C!?kQO/e?`'@dC"odc<-^$9O-Wb,f_<NV^lVO&dKSS7s4Hk9PJEb$4k[>atN`fFR)JU@F^)'+bW(sP(@.b1Roe*mpK;)IRWUQu^W
%HUlYLXaV>fW8n-+7<=G^[Im@U!o1$Cj]$rr)l[FX1oh']PC;h"Q/EU3f`KmW'4i^/RGrG]7.F0C8MORG4]05@53lonNW!,^:7`k?
%0O>FVMDDk$E&)i=]ZdKLfm5"#(WD#?3?c*bs"_43"Se]*^QU=.Qc`!M;5V&Us,>cGlAIE0]$;Z5.,WJi`RB](p06p.njW(HR7WO>
%VnOQt,jV`)7I`4S`dZKg-XRQ@Q'mk>s"dGb-IJa2;dXu^G)`d\-QAZ?ahqoJ'9brAR%033V55#?$,..h0U?uX,#@=j-X2BREW>T=
%nXC6@cZb"Os(^iF8/Kj\;.c]kg/li_A\,$iBS,K[2I4q3le4b.CT.e8R>PcYEG_542%p2YFB+g5C0t2qVS_%d=IZI.doGeIXD6#o
%TuRb8Di\+dG\D\YoNZ[9%KNEUkj-\gSPCC?9e`,-dqRk]1NLPaHZ7o<Ps4g#_ro*&.Z'*8%b^+hAj'?WIQ[VjBY]a0kb!=Gdj2)G
%*OF-3b*88QG`,@RL`rB5PQ-AbjPL7=S,@bhI,Xrl*k.cD/5n%@]2b=u;1;6I^*+5fgBK:Qk>ds!.Z3/<-h8pK72\ZsWm-]0Xu;&B
%(%%GRD:@\p4nXj\mmo<tY7P'\9f2\oW.lNR-%D6h(^lof)P7ioIW*d4=*3IEkO'2]8M[Z'5N/PP1608l5=iN=BXbQ@&3/nb>GqJ:
%ok]j#6%[^+,$+dU`kL.\Mj^n-+OeDbIh-\k1.c4*S0MA*0[,g(<<m5kb);$9$p33beKI%(CXq)+N^fr#X#/%lQ^qXgG=g,Dr^?.9
%^BhRK/N1^B4G`cAhbGEpVNH>VoA<nurqhnAI+.]EEF!b&ebLjn9K3%g6P5BCFF*(24nG59q>MBqe+YrqrK]BN9[A*aB>2hNhs$Qt
%oZYpNq.GYe1Hk@.B5%r!epr4I9LRF$<u/@tqoD/+%t['S>jcg\7&rmiZ)3kuoB$j!>WY!m]lohppS_j"_lVHo^OKRtHM+hs,8gPO
%^nl@Uh;Ag`I-hmI*JmLCDmUs=Y0hHS&GoKD1:j&FSi`h&N0(S_7Yis#I;VK&X1%;*0@DRJO]KM9%QuD27+7R%`GoWWHad`gqq9JJ
%p+L8IRpIC&[@^1\B:b5I*ff%"3r.jaHKN:1Z5#Xr:ab;LC89Z*G!DU7oAM]"Co0d);.2Zlfk@1q.7pOQ*&8[S,)<l$?#<&!+.*rg
%`ngF:D4<s<c?=Y>jM6RH/j7E-<q@s]/DpG;FJ>W+$E!f9'0YPP'srHG28"n)nA<C#eF:>V0PGs()IB:qQ`8qTC3Z-b?3YVoWSqEm
%,#cD&eF54N]_hoMbNPaqn)NRe2?ors;g9YCK(L?0IdAX!hip(iI3NBT\]JNL/(8%H-G2SR`Z6tr"`c<bYR)t*R)13L=\J5X\bY7>
%dO)VR%$(Ae=KhG(7WkZCIC_G!nU`[eS)]aO1u0/Oq<QOP?^qC-CP)9".=p`1&X^;ZY>b;GPeJuS@2d<Ojsij"p&"BERXZ&COTufT
%1b+"9!o0u;arf^\1@a>i*\N=$%9ms[?5.mJDJ4<pK882^1"1ACO0P>=X`Csfp0]e#b`^#CCXVAC$.eWR;$ZlCHM;b9"67rg^[N(N
%E]Rd3ThU,n-:jj+cUVZfo]A/EAK96\-\T04kP&`5P8bF`2lb$Qg@H$Kqfc`",H56>O?F";0/EG27<ia9n05gNQrlG)1::UcJ;,kf
%@uR5aXF114L6jqpm20?6kt]s&T@u#sG)UG,RAh3:C<)\Q3sOok4i<INdSs0E%d2'tN`#-\p#B*'M]4JNh5:]l4anYV.fNssT$^NS
%K<=ECEG_0C`X*N>^NlQ$3&?Vq;PB`gQqbE\Rd#k.g,GKi03ZXdr__4Jfuiuf^#Ca+Y02%lq=<(IVg`^K*p9L[,s5BNiqS.\4O(fb
%Vq(97'?iAGRWu?%V:Y:D"h-s70(H109bBqb<c*^ZqDHfl,*9J0eE@K8hh6M:`<Q9]Z\t7?G7+:0fjZ;W.-O50*Hs)X$9dq-5N7K3
%lW8_OVM7u%-B7KUnE$W1PN2.DD[qiG@^;o/lu@+CnhL?gguZ^P'u%/p=77rMCsn=WTL.PW(@T']B*(ftTrBXC+19(K;EgXj?-_1;
%1"GFcfbKrjF&QpnWm,rBD9g$_5Lnnng>#YsS%=CRCZog\3"Zh&cZuJ><1TMYF&R4!Wm4>h\Z%VKW;jrr9:bZRS]Oal/mGI+F3!dU
%5#$11Z-_S6_Dfj(]N*s<lZ4-.l3YHbI%M?6IN=MYN2n``f>(*C=(9=mS8oo&O=N'&b'fo$lfS7'7UqC['?,N/XM.Q1)oZ"!8!@+n
%UKHp^f^NE1m.PnX]i_7:^/9kOO8$[jbWPGuT1PG?Bc)(.3K(On`457shp/n1pAoZ]rpH:p/KJpF/=Q??CYNCWQfl1PUtb@&NM;gk
%)Vu_?=8#K#2%NY"Frb.ge\lgW]kBW_^DQ"bdCJ\Qdp0FR<NG"-SjG^.ll,W67shSKEe?TD.^8qL2*>7+3\gMppPWb#3Trm$J0$K3
%jHE)T[j1@_Q:f9:(2*PJD=fu^#?j,X<?GJi7_n*\<T6r_ML4T]\'sHH?WdqF":j*s0pUn@8=H#?"qr-tI-Dj0M3/91#i!#O?dL+U
%ra]R4o<@KNd\d"W\!lHG.VSim.MPU2U0f;_9kC&k?B?.r_\4U9IIVXV1#HKUSK\"LqC.L*E1=3B,:;0tm6Qo9%Emeu%*19*iT3?B
%WHjmV[1Q.G06J*9,')4")Xf]qo<3,`+[#%dp\X`:)P(WHdP*gia=pJ<Uiuq6q!X::C+j@%LT6Hbc#J[YZuOtC]km2u^,^M=_fTr>
%Vfcac02@2'2;K4d_qmA0(?F^kKB"HRr0g''Er+g_Q=;%.`&D6%I';;65K0Hmj;IQ5]^p!_R7/!9$76Zc(GuWl3"L\!M-.Y!?\n[P
%hHs=+kI&8n]o5@NE>$juZ/;p3afi;u\D0fcAlinnN]rnIj1S-6DoftCOnsNT7,03Rd)7^q!oF$A&b$pGN]e]Kf3+M2;Os#$;EX:o
%BE&*%-GCVSN;ZTMG+Ni+ceOq=6P;@NJ4epQ)4LD+*0cCO:%`P;pdC"g?Q4,t^XtQIiusk1dUpnF$e4'J@th12<Alr'C1i4nO)aLE
%Sl,"*]+\VD'R_%J0<i;0?HnP6g`p-"df!eJCa,4.mki+;W\<H1m_`jb3m:&Vb_5H"R)MS\*.fXMKEUI"7^H=mEg+?WNqokM2.J;8
%I66c8Q\/Kh_XKj,2-NRtCAN1YGL5G'<j,:VSA09\:0fE#NJlmO._uoS6(3jGK[=5/=gBYI_DE-n*fjOM/9qT.GQKEZDE_-kc>W^\
%hi?IdSOUB;f)+OC-[;Nt.8[+q.[[qpVr+WONf9k*Cj(1RSJ!C3B4(N![gAg9Y<LDEK4W<:>4m%/hgVj$cI_C*^*"p;WJ%lC^S#=/
%ap0d@<l/G13[BH.67@Ne_ET7;(]*sHfBILa:+li;n1L,h#L1ig:&G-8Ep8ku#D9*mpLN>)P>Qp12HOb&l_]prj?%qmE%`U6kK8=>
%1\.02/r3pnljEts9iXTLr1OD--5#W!W2j>qA\Yj7_(W<ZeC>*)Zqp[I+_e]TQLGpjDXTs,d_Cu!cX8MiQ]t$DclX53XF5NK?kr\;
%^]+'_hr"F"^])!_rp-cfn[JPkYQ+C`5QCS0s7X3':mJ8c8G>/+lLQ(C)KiC<1MK"XKeF-fl1U&uT\Je*&YHEDeDfahBM8(9s8Hri
%id:("FGU,Sp9j)W1@RQa.+[_i#PG;6(?#2r7FZG&N=PQOmDaQeAr5W0(LW#nY?phJk;Z(G]AO"0pbP#p*p4j2fj,-BD:M:nAA?mj
%n.[sflOe-Br;(HA+!."]AYfo>g9:Kf0"ZR#s1*87iSN2K3WG\J52-G?G0.MhXUtAX2Js$VC\W9o%65]Oj24IO>#a>gD>O.EF$1a0
%(4M\Kd3uBen>QB/\W[Ju%XS;Y;6j3g2i-1W1jYt*jr`3#!\=oPd3Y-A"Gb@tcI]s&+HkCjK)So6q+5KB-EG?TIOK!W5;"NE]8s]E
%SSmLe6'Gi600V8K=Jb8n5>HT)2-\>O`Gq'EhC@+#:RP?f&tX5_/1Oc#2W98(ceY9d?8?,5B($RPj.W3mlp#Pfr8We-Tf>::kcH;6
%@&`cT1VEAPa9TT6(PRk+]IsYSG<?'le?_]AKiV[lQG6cf6oV[]#hH58P'Q8>V#E14:%!'U^41<O^=Q?PQ@C!/nN?n'H+.*3I\11V
%$\`uoB;SQ+TZ5jVVoD%_DQ"V)h#p%?]Q0T]X2[KYpJm9gC6JL/`BF_;TW]H$$3`9^o=k&X5QD2]@n`mjQC<'!ohg,EXWA')%aB%_
%Uf2^@gd[?YH2FAAOW\UWUrO*m&c$[-&7fDmMfLYuSl$];eP@TPrXTfW[_rS"T#R9FpY,N!fO2Qo-lA9CYUV-.,0EZaO,g'[P!#G"
%WX7a5pn&eWF2tZQ8odM/&e<(tAp!)`f_$D!P`Cfc@qtGu.X%[]lK-^(H7!97p@kh(ZdhEIBK("&'A+,PU(a`"AguVP?T;62>%DjC
%Xb'D71Y_kSQb,j#rq6bD53K-*?c.O;p_LIqd:p!u*Rfh,pA<*^B>VAs>#c.LT;q/XI=AV)D>(3cQd5GMZf>4(pfip3DS'fa3&3NP
%hQ25*T7?gk?iTr2s8LW"r:U*foq-a4a5?k,+%c7Bs8!huci<fZs8?m9Rnk2EIGV%@a`-04mSM14?G11Abh@"Nfk7ML=L'`hSo:1I
%6IA\Ci?4Rg#eq/B%5%(7h[+HTkTZM\`]Ce"bNP1X_=IB7q8Dl4q[ORhP/=9N2G,:--0^=+7^k;Nnnu(i)pDsEX*jkGq+ae%=+`%U
%b`[jcHH.a21VQu+fCGIMh4E<!rb2j+23ngW+.nP,>-h51[JE&DF/RQ,J"4"%D:OW;kp+=Y>&`?\epVD1D0C<_C85.F@fl#)&$d%R
%"b$*X*qi>7)1(4de2B>fOW`bcQH8[!HH9Pte:p03-i+g(qU<+&<T;KOp9LI715J`DZ3nl4I%&YiL/0V[AIoPIPH:k@=Ih.7^DYjt
%h->Q4/$g8&CNb._I<kFFShF*Dp5D>G?L@\.R-^3n14U$4[GUZu)U7HZnSJ'-XgU)bm%s?fT;9RGka>.#+Rm?5T4:>nCE(dpaQus/
%&W>\hG@m#cf'g;Y<l,ABqRnd)[%IAO="!&Z>D;>"Y6)J,`?&_mZ7Hs90mGMHS\HW)X)68m@,:U1oYND#!q.tNo-\D3fWF&T:)aZ`
%hYW#lbOsVO[Hk`J.GkHXc,ZZXCOGthbmmSC@%H1$oAU@jKXa1r,Z.Rk+^*cihp.WIHph1@*mD1H+t_M`mPu":5ou=R@Fj`N,-"eb
%*Vs"l_$Rg4HDhP9Q8<SoIF%,>;+7KqFu%1BCXjGgpTRXSl7gXk\XbbO@"3`/o:8QOJjbc@#R7\=-JblWq09Ur<?]=,ht!'S>"`Oi
%S86g>6Vr0SO[YiS)-S?Xe+Q*/h:5chTtPuN6eWrWZ0$,`bAb6=loLKJU#j(kmXfgIcl@[9eip0DlAqMg'o"n%D>a?$p"d9@JNb>`
%hPk,#'ncdtgNRHCMIgeWVHcIFn/>fq>ZD7Ec[8SIIj_"R?8uDr:msZ12D#pB:hD2Y@ZF5&Qj@Ch8)&Ksgc/J<&V]]Z3Lup\prJ/Z
%K*+%`C[/,Oj7%(QqNLT,Kl;IN\.e\9?>Z.F*n_8kB'o:QXdZ(-4*)p4gd\VOoarq(i#0Fmc(46^YhkoD%G6A_LZWMerKFC9#0W/]
%bIjcsX*")jNZMGEhJJ5_I]"VE)-4U93l/F<pqg]F]+n4e0;H^a<FhOEo8e"$e*VR/39,@j#'A!JhlQ)uH&<jqT0C5/5$4ah1XUP@
%XCo0tLt<upRDi45jF";6J#Nm5U?QCm<UeXh</l:'pUlj0WrG=-['8Vr([QI\l%TbJEM:^N@"O"#Ru-2%CST:'p\Qc*4Zf:t*C@JD
%LJ-)W(c;rlP/X8E?k/N9hQ^gO;CJV[W]X[oE*5&oYbJ'Wc1R3!6^R"X5.,.DF#!2?7fNA-Wc=/bXE;ni`E&mIQJSU/DuI2rF+:Bt
%`]bZR2-5nr8RBp$,I:A:2]NJ,rN](=&:HrbrBsq1XK\AY_U9?TV:F-bST6SO0`b1!Jk>?B6`"tMHbrhWgsD>BPq?qC'rpU3nfSHC
%9@bbpJe<2U(rAPpP<n<go>VDjWGLu1XTc7"CG,HWO6o@lJ)4T$Hp_(rB(FSbm"lf4<4]9dZ8F7A[>A'+Md5a.PjPnc\*`,>0<IRF
%%A([0%3@(QRsa^?UHZ2O%qb.YWpKkeB^M"2*?l5?\n2=5U-Hq,Ct7kF8iF=/gp$:5g@3uZ:1Tbi!?-:!<QI#?/Y>D4qQ-Arm`+^\
%'P_.;,MZ>;2oY.WlG4*](7*NdVtZekfi^LoQ26-Gm8ARMD"X\";RB)h5*`^4fK%jTdrr@@npU"6aMcrY2%X%'MHhbTbj%<EeA=OK
%d>$b)S](q'+'<BAGnI+kTtk0h?AmR!A5*tK:n"rT."`l3*u(((Vl*aH0dS''X?@k:iJ0)>+VI%QaA@NH2rCl8\VB-PlOD2%C:Oir
%ef%@\L-9E.hjZ?Ng!F^7aU1m#]@H)Adl&_*2"(h='^ikO@a8#b=s$^1hHrmdKkdf"]JUiBk'$L>gFCf:_1let)4#utfqdAL?ss#5
%*g"q+2@@s)S2QH)DY?gSf]lFm88,YGE#d))-MqPSebPDiqB=PGm!Rg1nUN9A%XpME=XNP<-\R4d6]R#rZqiLWp.7uj`HJrij+G=.
%Ah#^N+-'rrWCI)4k8D1!>*:M=)f6,1_(pI=JbF/[(,VL'fmgL[6aeVWYCANb0cOE2*E2!N]O]7\W]b\A"\&7CV%3'ZocAddJ^ru_
%U)(O<oi\/$Vq(bt&'-t8ZH7T^YN#m-q=M@.%kSWhmRJ:2=+`&WcCMsBm[gakT4N1`2TjD5%AQkf%[=n!DS%/81-8/"hE38HHbiVY
%PP'uKC3Rh&k(ej:jQlLIesqu]l`De=Y&0bV<tOU#$WRc453hcXY\?9?Nhbk_\NjtdA!'R,&7d&U:\0dJeHL2h@9)gqFcL#!<X^0a
%Rif$Rj>)'ij_L%Mg$S=to*2M"n#cP<["IdF-nO5%ffG\?1G1s7P4eWFefbpa#3dgj^=Ti;7V_et,V.R;5(5#L7Lcgj3[A@=?2SBT
%_&V9l\fZ!XqVLl1JKK=bK+JKllX@iLCup,PpsEKCR@%#n%@Hl_L3X64gjG^\;uNEBE6;$N>mRg\U_8QX.nW&8$H'6W#*J)=;VuhQ
%,fp18Q>Mm+;?2/J>&=-380)m7D"T9MWl%f_HuC3V[Lp$V#S5+d/-!4sU[.IKY*j)@nbf?_60jX6fO^tu^Vf$7[=Pi1mhl(Y;u:_V
%@V#@H5$S!'XCodQfdmV*@%L0m"oGNcS$@,u7L>l!T@#3pj8?_oGHA@Q=,10"MKS-dcmResYMAT@p7F"QN;h&EgN]LDbTAk1`+$SL
%E3.kRNK2a?75O(p7f0JX-G`RF2_mfC]B1n+h]'bg?p:k4<Sk!KM4kHll>r.]VI&_dm+(CrI[56_\gs7D_gu:'A9:Ec9d==gaD8>f
%IJhkSjQ0>!KA"J,ORF$^.mD(3"i,ca\1Lem.0/KNoXX`F0<J@L6`V6RRl7jk9="U'\U8PE=30so1HMCoXC"/'[darT!^]es^>CGQ
%e(6HbLlc'1KAKk1X"s!>=DrUW(VZ^'!V.;T74[R`n)AuAJ%P>sXp=u?omL[$B_Yb*+5$eU)_;2Akd+-'qPm9d4.g"*Xng%rXTp[S
%rI)?p4K)riWb>m"I!()@mKY_8OZodHMps8T$h+6ri(Pq`V?d!,oZc`NA/p_#dFTl&"fc`orFQMUqh%7*0HV%jai.#_rRhhPlGBl'
%"DiE);)sjl*$0G(b^9U2aUbcs=#&^[NT9Wsq%'kiSi'/Am**M-)UFl@<#a*qJ(,1fIEXE&;KNU!N&L>SX-t,&\mOsFqIh%HmU,$j
%1?PoB#(\'OgENE\LN<\;>*Yj`ZW4)K=q.bJs5'P[CMu.o:PK#ji%Fc7O4k)2Z1b4.Wn-.4n6n=u6n:'?BqjUW_0"\BJuj@j._);>
%*B0eg)Nu]i-q<8&$nfG!2;3P*LRY0-#(RaBgM+CMD\SX0[E]$"B2qOUMP-`tL(s,Emu%^S$p>,OWShe+)W#AA_'Di)lCsc-A+7/^
%0j;0u)KXA<n<#TipK"3SfHrghk899?a73f?(64*29Ma[VHbAATXr;`d*]bH9A!C4&bTRb'_6rISBe9k1X3`ojXZ_Y!@.B9m>/,J`
%1KtuHIgX=c(1(pNWF+"##Gr&W/E#KhUN8Vf%W'5"2]pnc"2)DF]I3E%[T%b7!;iUdOXZDM]3;@@]%bi6MYCE2h,;J7MQ`Z3ONm$\
%`d0G\_Oe3$+hcrFGE!>!Xb+q^1k(g_mbcPc[ZKuu70dGCS!nZffJf;(LGahJc8:GINYl#74H.7Q:3^)pkcf2X]Tlq6%IBoul\kON
%L4LLPSU8-^Yuc6qL&^A]n&[nf=-eClo]F+)h\+%#=1O!\E,p(Z?KJ2'/=4Fg1c]8:YRl7&hDn`K?/<0K>)X;"C\uPs8K])Alo$=4
%cV=Fgg:t)'R&Cq>m[S=3QVqESU?B/C8)^"u_n3m_BW#3:djafXRhrs#fheW:Hq?N*L$#+lLYtdHF048XFq;N6nsX7Qd,3fmp3Z>m
%^!jm_B%Y<RWa"5sA2(Ogr8q:?V/,Wg24:&n:iCN(ad;mLpa33\CU=S`YtV<%=l!+jqrqX9mP=c>?b@Yf8X;a@Km0.IVs7jdiq2ps
%Q;7W:L;29,DrX$m=\IXB2nHiFC3"1*T3g5'Q-!gG^!]\eE[K!(QYO/SX^>q0j-<rFU>?0Y(3s(S(59ZXkiU1M-%-=RF>raZr6QX;
%/\EDdV2RV[csGjD\\N$F(?3IbouV"AQ_i5AW[OJl,q@loaC]6p>$-b+Y<B!W'8u&<K\9_c^=]'[7#FF.#(KWS;rtn(IC0Vi2q1TF
%mV/HmY[<:>kB@[DS^k?$lnGp<$5H['7eS>FH&WHI\<"Xu`Poj^ekos`D;8u.<HYuZQ=?Co7Tcd0#hC5Yao1W2BfU=`<%k(EBqq,!
%2b5;(7pAW;2)AQ?ZOL)nlbiO3,-s:VR9J'NJ?'tP\'"'GRV4jcDI/QF2oNT"4[+)%3DZZ^XfT`5\(iI"b%VNXC-,a+<W[)f?Bbpe
%_YrguEo#AQ8GcJ,3q+$k^3IGk?l&=%:gk[a`Xf-)ktUm'k%3h.k"i(TT'4YACGA1Gn5X.EHTSV^-?l&jfRkfc2C#&bis4pFX2O(E
%-ZPQhL?+6\>=H'2M]aQfSO"kaN+oR^Sp\K=-8OIR=Lh:8MQqR"AMmUs5Bom?`o:6..@d#JmNisaA,/a%(X()=O(*B3Jft\(n#pBG
%O%M@1X/DN&eOjrQ\jl!Qc$l*^%sIYkVd6cpj]ng=9hM!m/?`s;7P8C._3;uV;NJ][76Gt*T8n(UQ1OLbdH(l3OsX6l$L,Bl[FKLp
%Ii)urGL`6Yc^Tf8/j,$(-F155?V2^369MV.Dik"cL8sl3gIe.SNT>FBZ2B'Ss0aciHIL:6]_ATjIRqZ"Re@Z$`Whp4J#8_"V1nV`
%U8"16U^Eg?Q)**tXG+mb<l?HoD%Wg/%X2EDqZ;egc+m6rVX-T&R<_X=[L1AfeT.jQK@n:5r$\*amqX**TMS6.8r[Uk8`/cfh0<5Y
%]!NQ^oFA?Jid:LSXarg#f8t$?-ct2u]Lgt&\d=:S'In$+[bd<o0OKt?[FX)LcP1JL2%i(oBTkuagF=SNh5Z'"BAbZu0$e/'m!;+E
%NJ.S)dq?iXaGs<1p2B[#>G(B*RO4/8k7:X;H]P!m/GHND>d&#sV<J*)MgJ&IJ(/e)?K<n33i/BROk4EPL/N4rMmQDuX^a*!TPRkq
%Npl;5@dS;h^B#]Sh4Vs`_X6>+=Y$rs@qYK.MDO.hYt(+s`NXYh=UE(XY&b/0l<)GZL<!t6>rYCq^?,UN(:(6-/B8MJ>[,'J3rQST
%Y@'f?!o,WSe<11Ahsqoj)/?=Fa78a9ZE<Q';JZ*f(2:k=9/=Jik#St#'FDO6jjp0N7(%>EK$*m490RW?YSTiKVW;=d(2NNSd\Q^1
%8(%-WI6SF!rjoKbWiGGc=2N@C_Rc2l4$"#^&*GZ]_*=8!QffD&_J\?e$@coVOY1I(behA[YdTeKZ-p)&CYV.K=YU@L`aOQpi%OVq
%Ouj@RiS,s^\b1[[UrDSn@[hqU.L2,Lio<`p"^*`lKnfMeP-j'\LKqmnKBR+/L$iSAXl=8'^PH85-r(Q$KS=s1O9`a<@A'L)c;6'*
%TKK#=n7hT3n/6k\"GM<nXn\#;)E]e<DG^7."MVj4m+AF31ILD?6T1P]VcG&'YXttKCcZ?ApYbb#rTh!M#'tm6AtUsDO.a2QLLWcW
%WSB)2L%V`9ihNSVn(NI<YAndMp3Qo1_eu0%`kSU$dC7gOfgpI6G^(&EOSR8'QT\XZ7kUjed.Z1fFi>6:>@bp[2.SmrY?_C1/:!6*
%N*?BA[@1[ErJVb@E>%t`n_8W(o"M@VTOZce\ougL]U0QT,PKEIM-*3j>0@0lWiS*mCeK/YfB.5jikn'7XU[\ug<t<Bp3Wh`<mI//
%?Q4sV-`k]RXZ'W:cP0)U5/G!I(Kbf[Q&B%</E\Z!gBdIS1NlfJ4s0pi6$m#>Lug9"Rd$aneAuEKkBA">ZcGds6Xo;Pc>TR%Hhiq?
%,a@u*VCo%FptcdRF3#1.8RYGTEoquT%=/*kC<3Qjl;6=?SL?<"EFk9RKZghleL`Y!F-qtZ[CL_8'&6Jj7J25E7VhCHe5ThX*)7RA
%]S;u\M*IH6ZY&VfQKr*#WR\oZ-24nAFB"lNF.M?-fiHG_)`"nuf@WY=SjgbU8R2d,gCQ4WUbd4#*>4/H.A!0Ne@Y[cjF1b'l+I>?
%jLtFam,7FKA8##PoD.*XpVcDPRIF%0PHFa8BW2c`O&_+!oa2Bn\7u%?;q:Jdo,q1"mH3!#fioXuVd:$9(mi1/gQ/b=TrJ`NNDj&e
%#:`]5.cOO7PB?BWnhF!i;:ZuR`r%V)I9-R"/DEt#H<+cHklS<G`$F,CrSDu;$u#@An"k7W/!f.%48BjuhP"jIQ+!<@!-b`9W2s;Q
%euRP0)m$g0:$#8QC1QrAe$c[nCRVROZ?t4-jK6i]=;_V5fOn^D;3G?Ka20_Tme/camaXVnYgiibDVuqC?8E*)Ue7K6o[Dj/T%q"[
%b=$,AM'6jtHo1WR;ucFEJ.BId>)L)ikqlO,?em$/Fuh')QVqoTU,iZdJkd,eLWtP,Ykb,m+7<3Be#?sZ8Y"BO)BT$MCNJgNRT_i/
%O.U$ZUc-ha@qH#1?dHbfO)l-%jDp*,@?:686:e6O$e`nc6(r.2dY#OGnYQM=PGm:42cdD3+!:=R\dssA$m*?&8#o&Ic^*t?])bs#
%LNlPKo%RMR#(t8lWDO2BSoP5KIUh,$5Uh*Dm6CKu9Ro0I:?$HdFEQc`Gi`kbX3o#)oaF\P.t761:L^ljdL5</Xc=5]pZpHBfEkbT
%IF3_!=2ln$:"uXhqq0Bo.9U-%CE<oTN-mSWfG4hAaSB;l@8mp%qFm^?cb@?gkJfB)_aZeR^5GUZ3-t[AXWB<AJ3C$+DO$!:)o9[c
%kL8)Z1lp*fEZ$#bT#i-QM(Kt\@5IZB1j5)dVXZGNkk&o(*_@a@)f^#tqL7Pn,<]-2*7$ci9]Pp,@g/>9qIWsbmjEa#V*K._pn_Ti
%=a=R*h+TM<+rPu`p1p^t>ec.aH'9kLlP9$M$(A6E9"1;F@a"#tQ4,ji(iPp\_m\\?7ukLWPJ2-+Res1U>$Y"JN\/HrI5%=Y\_1%9
%\oIOLNKj/Ecd@`Q[.@.:rMD'Y?3!&Dm,FLMf?,-ugp*KXXJ$r7cM*3l%rWX`Z[HkM157Q2(nQF<0mSjFR^(bR?ITMWAEV^890J#u
%pW7G>#mTD=>3i+/PG>D;<&%Ta*g!+`2=l+-7TNT=7d[?#?c;Mj;4*Dji,/!CQ_L%$hN)6of'bPt%pGCnqW/(VNC3!)qpX+W))m=$
%6u9Cq:Hq;ul[s*j[pL)MVk<q8f:AXMIf]MuO(j=AF&:N$=CZ'@RmBfmcb0P29.bR;i&dWOQkA^u=BdBlqD]%i2aV(2BPKKKp;Y3s
%1t's/\!:J!Y]!'5<BG'"%*aK/2G0g_le<sLJRh<d=\L2:V&%6%%3]'0B!m`1p0*GnS=J08e!u?@S$@XE)dC:^>;CJe8$TCJo_%SO
%RI)?$>=[N57XEofG*K&``,XdG`tB=+^>GlYe`(F$;`r7C_j=j$:%(<jqT3=^3__9pmi:V>GNg.^OBG'Xa`'=<+pW1oEq4ML5-/Y/
%K*`_I<EJNW;/m/=<]4/9p22gUkN3jpODh!'lSi[i=AI&:jVR'"l,VJ2*3%o^?0^CF=%'CVgEtbDV$caX-1[LaUK-P:QHq5Z>si3O
%@m0RJ)7A,L32B2&s*-J5PjHYl'<um.4%;#6*D@j4o!2h=Uug-BYuEoal=\FhpaP&BeVo9<Aq>BH!*s>"cs4au@N3_DneXBqkiR%-
%NeucgAn^.oB:/5C@W+IP^7I@BgU[bGHE&KZs'/?&$Js`WC7/S+StoQ8$)g6rYWqQ.JWs,9Q=bsXEMM:7fFTn>EI.FAgP[(W$RNht
%[gnEka\kK5F.IQ;Z7V2-s.o@)YJtZUDEV!1a-=!W53VRLHJEg<QM(3&ZER5tf+4K7S*=%g3J06>JO'B*!"K,jNYC`&ab,5jFXk:c
%Vn#&R-'XbE)mQ^ehQ)u9A0]1!.pM8jG$LGRbK5]?T7=0]e[*GpFmdR`@1=Oo1,E>%)OO*cC]3UB3Z@9HP)aGrdf,LhJ`sZ-n0;3a
%1Iug9o5R9A4BG]h>,DY*RTCU+nQ0g]i!>CO6R9@0BuKYdh=5;BR6A]hkM'FNc<Qga;(6r-[O3AbNlYS9gk>ua0f:nZLlm2]U76_l
%o)#VA>RS/OAA0;!;UX=A2Hu)nQf@2-V/G65eeDPs]gCP_)sd\_K*0`C?^!R1Mp(5[]?_$(pIh/]+2h?JP81!1p!K#Cd;LIf+&2gZ
%DL[Ql#gcpfd`Ch4mEY1WCLkfAqMre5_t6)0!ms#m:[k:rAS<B9PRO-_2B@Eo>?Pa<=-hGP+ruC#M5Clej-aJse;G.0*)G6PGLk;Y
%X4S$5OgQ'2c[S%)S6L9N<),(em-;lf`Z]\T2[a!BA%=q<9GL/sR<afOB!`A0!#==*^KT+8hJ_m@QdVb)7SZabZ!@<6I(R59SReTp
%m?2lKhB57g/*Wt,H%!2%E3c_TL9AHll#?@p53INPVRP-7WBtARn4C@l_W?3gGfn7K)lj@,4kglh%[gkjpkj0;e_p`en2//gHrF,!
%@*4P+,PP5FM)_(e[Phi)9OBi==6YEfgPgpbEM<dPL"rB5A!Y,t7[DM2WZHY8a[VJ^dV1AF^U05[o@+13H&C.3#"hRghEo6.?bHuj
%X7+-;L[PPY9Z$2@Q=0?e`D0JUaduXO#gUD7^Y]E1DKe#EV?O.4&R1.gNT5d\5Q13s2IN=Pf%Kt\F$OT1EQ;qs1S2%nI&M3]p55oI
%A9jk3X7QmJ>Ns1SE8CJ]lGM=3l&kCk](*"nK+k*3_7l%tRh?;G_F?)h\Cf5`bCfJT[bL2#*s*&H1<*>$]6lK"4P7Du9q%O^1NoZn
%NSl6Z[dA+)X<`#Ub!t?#_<]G+[lVpNp@cpq^&(&U\nL6^-[H-F(Uht8]cg$llY)rcOVb1fmbVXQ]2Tpq]1bE3$e9fnbZ_s[qIOO!
%FNJ"JP/?Vemfthp9N5mg?dl8r[(UJ/mC1m%6q)A9oWr'_@FUGjeb,ZJ.Ab8<9f\EC9U_=p8*57Q%==?PdfR?'YaXq<$:YsdH_]_q
%p=@^7ILM8r:Pfpo(eCNnYp6QLk*P,9aC]sZ/H_&]-Au04T.emC+EV1*%m?J?bKFVhZUpE?P0]/bP@_h]ZBf+IG9/h]*Bkq,YKJf$
%@L^R%?edb;Xkh%rjL8U92X+[tOkof8$B;Lm]!@qZ>a]58g26<G?9bljE5AoYd?)qg3f$oS\&`S28C&cVe%HbG&FGP_qqs>lA[5"0
%ios>O7b+AVSh7(..=8dpSem]KG("\FQJD5$6d@a>b\]YVGV-sTLIf`5WZ)$N[kbil9/#'_2j<@Sr@/_ShDK\ePs;F&<B7hK&%3Qh
%#<0hp4TrQs?nk[JcTGkgHW"1:f(L?Qa0ghb_:i!%b,8DF>IjVs:Pn7,H4eHL2-6KR#IKcP=R3B,%PAtRantArXR#*)?4&UaNJf$n
%$!bXH.?TUNdYka/l+MhJ2\?MaE\<a7?_*IQYHIW^;T6LV$/H4H`>t9"Qs"srIfr&Tdq'c==/1n55X1Q1W/j>&/J1F!4^c330f*[5
%N]om8MFF8%qt%>ObiFK=rU[].G(Em]]$?p;QB#d<9Z63CWO#5i9r/YL&)4On;p`:P?RX'Goi]BAY&D7C57h2*1eYiYrd<BBL"uj6
%A6_Z)rO7\=DcTqsYK>-rTSZmelqa\g6tL&U&7se4YRBUEGsV:Fg])/F"c<<?nXX&I9\5V!@(\Q<m0tMMC#M$N<Hg2k?&s"c5q^j,
%8(>!YkQNQ,D\2<tI)J)fU>WsL&9ZV`RT?*WB-D3^3@@js[<f:u/3:;J4CU(pXSLdP^ir-lhm?%Qp%r(G).LqPoQ%rik#&nMX1%>+
%C]KFd2WbP6Tlt7+6jAp_M=#gXl5/c&k79^$rI06rY@mUiO8eJ4D(3#EZDU4@`dDDLSgto-*_MQ)^V=h-nh5[jcCu7*d@OZ=+5Qmp
%SQtn>3%Y+-o2!,Nq'kS&Y:RuorCd#D?rW7!;^[(Ks!+`;Mp]ga7Nd3)Fl4KAC%%\[jH'+8nt-e:2]ai#Bo*TTO?nn5gqPJ*58G(*
%A*U%\fnYV#r"td-a:<S[TpbL2`=;TE`/cY?<,.U]Q=f(6RkZMl;C6lFDo"rr)0ZmLYr2)\"`hkXO\'LCOh]J-iTDX6gZ@&G,8O9+
%bAs7KrWif)/Wj@$YOM'%4pFn\gTO9>LI(p7bAjdbkhns7)kE3fOW/HJ+roEWrCJohG(jc)TpbO"fee?0iQd;p?Op[Wq:G%^3Yc!6
%8UE,HV[@Ja\#<%L&,O]V[MlTPKSqqVJ^rDS^EP!\dZKoe]A3`U>mP(mrjgCIlU9V]&rl9YhC%CIn:0*<d"UXoeqGW^)k-!cG-429
%B6FL5HM%j`iTDJ7T2]t'i.7]UW]]ms#'A87,P`[-Af"Rg5ncK-m:ar(EDY;I?f.Bmc:U/+n^RDO(e_4MI"$KG9lARk;@BV-Q/25+
%neA9EPh)S4f@@B@7+mVaJaiq?Fu2L!Ta!unkC._5SN0Q3K-GQZmVT&&NXc4H%]ZS/_t:2Xc1R!Erjc@i59LS)YG:ZbFFSr=/j5O$
%*iV'c[Y(7DWC/L6a&/^?5:E^ie]+_15#@iG8>a"C6M@st5$>m<bG7@0<oX5ZoG64j(X[=;X\82q4C<&QU?_J,;.`Stah&'f6mNt'
%D`f>3G@Nre!+)o6/pZ8EanX92p0bqH*rQ`Wo:Q$8AKg!(>q\,61Sqc$^HZu]-A/dknG@G'HVi-.emZ`PpG;g1j/Z8]b(dW^K:V]g
%ahhZYdQMt%>B<FFrMa$+lDm;[Ib*GX!"<oJJq%CkI`"C^Q9=leM5pg[]Llf+_U]%G^\s'0Tj@]H:ArbYSBA8;.gM30J!C:_rj@Z>
%$\.(ep#6Jt!mCT9kN\?teB"6XKs#1eV:j^q?g=76IX,@Chlj-+558.:Z/aH18!74TL\L]ckPb^9Ukj4uqmR=n<WDddreZ-f@dD\h
%D$m?Cpr5qST=CG?oVWHcF8g:T2<s(gDr:@H-gb(:!SP3cLW97es*/1!fq2PH1B,`hXQn,CNl(eed+,],UAm"/^M9mIr&9[@TI'I'
%Y0L&I_eK(ps-/l%r.U'8SA00rT(A:AgP>c#bNSb;$_]_5A)mF9h`;)3qHo/IYQ!CI\2WHo)#]lUG5Q#c+[3LlZW+IrT34nTKOt;A
%q59Y-OV+"DKVJ`sc&DS+Ys5!(0.tL;2O\hGgPa)69XJm>3g6M4j^upO#N;)pIAT2LGdhlPF&G%+c^`N]Rks6@Mu:eALcjlR<hGe*
%bkW>n$4ZRkE[2mT<6rYg)RJi.R<DU5Zc>aXnQ_KQa`Z`X(W&8!g#Zu-E]0"Xp1=Km>+:cnUt&VM@<?-@T-ECMkh4/(D";iNA9KUB
%9$\Pbf!]1sGGjEQr6&,Kp3Ln-EV<^Wccd;1UGH[Lk8LZ[ikZ"Jc"uu&;46f(`1H.(:3Od$Mee14\^cJkb$6?8n1lBgcPps%h;dhV
%p-IFtQUhIAF*ge90R'mM.F4QeFgpKcK,_FDGO$'u3FcRmG-647:mn@IFo-7IhJR;h+6eCsdJUl3n_sC\J!#QNa$t,Vl,?]d2iec`
%kMr7VDLT'8>+%T9fNOlmWPRfroh=ghrh3YFSM.ZUQ2-ceVsJfC>\ktd91F/7YuWnk#VIsf$Xn0)ZETH+DAT%t(`76.G*Ru<Kqk\P
%F!8<&[^C'q\m&8j6IkSBZROca1m=9BKmmG*EcIe")-@<7lW9#'Mu2FAj>:nd(dD\f(GdGLdUMofHY;lS]$t&6kZ<c[bKBMC@cK06
%\CdiNG@3:5gtqTT"j?bmP+jHG93X&QD^gs3>V-tY20(/'bUkC%h&42.dXM(4W?)R!9>1,:bjo5u/2"+R<jU!7iSjM$c9jP#]_e/a
%/n]gEddkq;ic=jojZckMDWft9bHH%_?C=U'Y-%mDDJ*%8qrI(cc<e#hZ7!nb/#Nb,A*(:55-,I``na7hH@NQTCH^OW/h]HHYDQNL
%EAb$\;claXL!$I:CWZG<jj@(@eX5UHYJ(uj_:@DdR7^el[e)Nu?PCnVj0d,slZOl19ioqAMVZsnlhdcj<d^'.CQ1[J1,.2$f)gO!
%mF?`u&VpU"a01h\K6k'C\<-0T^sh-$;4n[eWs&:F2kf/Er:VP;//7BcBVc0A#p*>&>m;ql2s5e4_>.EA^>H#qcg4;ol[cCK_R`d:
%Q.H]J]nc9ENLmM+F2%[Y:55OVrgJ6`KU.p5Rj%$D[MISZNHAjKQ^nRk4=;dLKi:PQ29Cc1q90Hg$3]=4H!T(F/Q[Ua&NUQM>H0(c
%KLAIHmU\&iq:B@T'XniZ`U-^+/fl8ZY/RH,i3$0;F/o"]34gRj-Z`!R#qnM7$2Ngjb,Xu[l!C!?8hYtG>'T3#":hEKlb15OG\^5`
%#k)-(c@iB%k'CJ-HEJ4T8on9`[C4MIoh0EshG#9Xjn&//A[rY&%`tni/#on\'&QPCiFu(Za4GB)r[dfB'^A>6j]0'%:fm)%MQ/=r
%ct@@miS[>AfG87;WRG$J]-Z*GN_V47c+Ug!G*%N8[@?R)YuX#D^?DmN;,J.SK<-,$\7k3+WQM+;ABp=*YALFZXAlB!2`B)?I^4@g
%lu$'t'r&>$\!#Zl0m?H47Dao;F<m8ZlpgQfqnkthEdogl1I@FtTqtn;1R`QfDItE<bbh)i/T8@hDk=B=44f=km?Q,jf!/($DEV=M
%*Gi.XASHL.pRnk+Pq:^/+!7Rp[NBFJ?jLSXX6kV35TiqYffniZn!p`qZTCX&/\0>E)gZW)A9U0T;l.HHDJ@rL/N%;1R/c-Z(6a^3
%C+NArIZ@\t?^>1TMaf#,\6408l_j\Nr1G(q`#n!NZgi4:\-gAln9@Ao`5KR\7'>.r:Qu7!(Wj4gIOV7f*-[VD-c'3]rj!/0[\&S#
%WV(u4C+?Bg/>pe^r394DV/`&4]R8t@,O6(-I;IK[dtNulGLsU7]X96p["mJ]nhIdhpO9i$[/7GGgt<)"#Dp-)[StqmWhd)t)CtLD
%bZb!R3tkh)I`\,;()*)PICHPtg_Z%G\'<UVrER'W^L+N*[h"d"DS$-X2\-]0B;VAd`O"8[>gb[bLKff`3-lY.(1SkMQ&FC`ULh8k
%EO9#2-][c\<Uo9!*q:>UWm?sjR$,$D^6E8kNuOR4ackX[3c^C2#`0q<1]=_Ff2QTA.oqV^ChDk5T7-&hoM5AZjo26FDU"]CkY(O.
%25fP9Abg.V4W?H:O^?PD$Z1=TXDrX%T3F5jc?$V`B8,-Ya`9K3T=J1NC\aOGI!0#a,lcXM(X?*>(UN;pgOkLWRp>UX]T\E+0'%d>
%iSpfAI<8=m8A/7\a)b\[R`j?)q>BeQS"I7XPdaRmb23*?e]I)SjQa:!<4lOcRT$DRpZI7rqccq0nJg$Lbspf6k9dsPdCO%fQ4Inf
%Ed-X=5^Imh/NjfVn!:G?rk$*rp#b\Fd,)M2hZpucn31m*;7JhTboPZMnoaUKCacV#-iTV+6WIDPIghp@V]IWeK)/T^WiSB9LGSn,
%6rU$I4l#ag`a#B[BC&#>/rc?62J;Y<g!`:K/=S4rPV07qc:[&sW#bWJ>H+"U$Fe"*6,k<%CX4Z1dpf7SC0]OHS)O=-ChC.oiat=c
%3@daLYJp(Sj]0'#.n?FK8X)!V-b4rOk?>@VY=PS980tn)\>[nmSPD%i[iDB=So<CbS&^:,R(b!%@cet\\(Z(@5A.E>qEhkp]1Brk
%>5+k1e2L=(>5c#cR#RN7`c`T<R;4W#`:SM"ECjMRVA=ltAoTu@eQPn(^"31SFP3Z.[PurMk[_,mbrn7u>H@aOnsWYIBj6&"bSW,V
%^D&LddGXslkA`rHm4Q_OFgiCNNFr'Z0k,qo*NRe5-A2bqV4i3XZ=Eh3Q<=dBpl<SDZWZji'OJi_HuRo!c_e'>hQ\:&s6P0aE[4;`
%i;57X5H)M&8d;P"V%PSb`R$3ER-rf-ZJWA+&Xeb`=jUg-gmL04D'dNP!"TSNkEnMecE_r)n8]JtHAAa<<7`ecms[F4@*'PeYi@CZ
%J5ei!3r8?QIH_6f**eP=A&IW-___$o-N5d%amF((Gd&4dU'D@obhgs!or#S"\CA2JF]JC>*DZo9NT$iWkIrcd/kqU#a843(!ZKGG
%,cC_kIVImB!M3Tr"<m_jI((r<IT.nYC?pU42K_,IrS+0ki3r;mI'1BNWfP`Tk2is1n!P5q[Eg4b:.2q'iDXUXiXT7e+2G(`k=4;d
%<b>G3cY7<3nuuAG4g>J45#+n\l:LAfY;S6sFe]Jl\M'ZrZ_t(M+jtUa+!29`(sAaQDq$9Hhir>)?66s!8g>.]G%pI)nYnA?2?/2j
%)cS1tNU1=gf'Z;[2,@N%k-F^f]"qJ*`/75/>E%;3f?Xp*-,*X]KQ0tbLSI?urX+\Wj7MVl<ArIAn)<NM;I>73o%9jq7M4\Xq!o=G
%Mbg#"*`pm8-U*STc3C?837Q"L!T!88n;5\,N"<a;3am).l1JlMWJ8*\YS$9ThDQH?Z?j4^3.(\ZcfhcWmHe);)JQl/$%.&SHId2)
%/AHDs0tl2\Y.i6]T%CHY?9c.Wb<5sZ4ZfRkX&p=;A$)WQ9P3q^FSC"n5Q14\XlE?^[Ptslegkk6fi<A<n(i@nhas<?[b1PiQJ$'R
%b*o`0L#Mukdi2d#HQ?WmCCJ<jLM!ageIQ"jYDK(rn!Os)DY<bEf%&Jq(S@X-fOWSA@B[%$-U,j?c47"6p'6epNaLH9\%fp\HT`J,
%gW8a3*W*D%:VELp*:4T/(A@%Vq!_pBY?PtO*o4#ZV"OT;5CKW2onp>rfVa.YlHj"oFE)#U[@4:9V"WMBqrRP<4<'c(]kXs]ZPrL/
%*'-8hVn;]nA\F8Wl]nn<Ed<c'l_6;hIlH:,a*O"5mGk6oA4B8eG]Y(:H"Jt9WDi5-iUjAjl1JRb>B<;Wlua`(ldFT>D-;gU^$Tmu
%imV31EH7>lX4-H"hU]uYHECrJ6YCkL=6tZ'?@EugrVa"+PM5?j7),/Clg!</WFb_u@oV3r(dq;EqK,f*mP]Na$kB*,HI2]_/$mj`
%qea0,_d9;]dIErSYkg8GhWpW`]3h%uS4`8CD5Abhf7T"#XtQ(E;Q%.+*R:`edsGAm?FVuP5!)F)oka5>3S#^),<GgPCu<f!H9Lr.
%Zd5PsoNjJ*^HHN3Sse<u`UYEtkfi:?o^33U13u+?f+oF!=&OD<2Fb;NZY-$@d-LHgonpdnaJ$=$g^DNq[5f)Y4G,"s=$tK<d6Bdu
%'V4QYFu_BCLV8]n:7dC$mq<E`="a3>j/J)!?i5<=RhED`bm_YT>(XYAOF*N_esE.*ETH/$J%C<HQDrIG.V]Q9W9$l:h9&g#=#A&Z
%h!9p53Z@85^)qX,2D1t1ZY-qV)XXqf%YCbI([P7^:\SAemT#G?8h&&FmGHsqU=\r&EX]ikYBQ=[I,<[b>rZhd_d;'c4+A7]?\gj.
%hU\;0ZC]pJ9_P%N<#u1XLoYqAT>N_^%9Ikpe),@em&B%0(NST/O'_bKbC/!)gn&45\6I/:VjU=D@qb$\qs"(0H%5TGN\mY\cKI@#
%ao$O'pgqIdIX8^'F!C!#,L,K0m(0`6b4sarl<B_4s5^(Bqqq?Sj86_)'>MLb]k]b0oQl5>feZtpW")Jr1Zdk0n+Bd3qrqg;Hn'N4
%7+u5@\_E>Dq<tMh\#%<HNsE]&G1olO[-,K`oQf$N0]DC*47h]o@8.hT5.u6PhHe;j>$n7Iq/e%Vl,)6Poj-_/'k=+6cU$8ialjT^
%chQ:%dMA^7jK-B,-=Tc+pU3;!`7%>(19j!/p+@/:k0dS/braE2,=U_$V_]^,S*EpKhA#(V1-/AXaeo).-.LgOjfN]7k9t8g<tD=O
%Q."lRIgkW4mlgTHN3HK"Uq0L@Ih%%sq)p"'$\a_2NTfkHB3m@@O"R2WC26cg%XP=)?qbd6\CjrT=W%;&:"`NVleY9!BUVHK`1]I=
%Jj+ZZ"s%lJ4\T,l!h\d^5^d<&_Re9(LF8'ggDR[ch;.sH:Hp&/5hIf_^aGP`_NFIpcg4Z4rS6%"lW*?l4@3u7VMi.EWkDTJ4\Dp7
%`r*!flYU!9GM)4op\ip..LVUu,Yu2L4TCMV/j;^M*B_X6'eha]V"H3+F]'fCl'a=PUM=e?dHg=*p0>4ET2no,Lea:9Mp,L)[CB$$
%Fg=tAl]nk8l?KEq'?MMtAG1mIb$JUamsNeQrK8E+6<N@1p,W.QIdd43q5*M+:A=Y]_U2tKfjqa1h[A]_XCE;`I6'<g(pLjtHo^[9
%2%@B9;#C574p-VoSWt0Ur,V.tH[I+:BDQK'G#+J.aLh\$SUMNJHrI+@fYFl/eFT.61$pXnVud49>/7;c5UfZe0YPg`rY\jg'g7Xt
%/UIbY"-]4#j&[Fj2.D+-A+t2thVb#sR,T8_A=LF4<U=<pSaba`N#_Kh(Auj@lJD8s6kF,:1!AE3CXRV<)IqFO<p\[Lq?JJ@Yhk`g
%rT1C@TnA/VFn+8u'YHV=oZq3oTm8"tga'fWBA`<]+l^tUNrOp?>HbmF'qZc*$;(J68H71F_qcqcGL]p;mU1c:R577!GX$6Y8RX9\
%N4=VG0g`"#0@:Jj*6He(U&!TRHE@pUq2*Kq(20,M(/NiZ;3/qu./#r93b`U>`OGp+bEtNa=.7'/PR@qT>Y*!=0V\/mkk^amY/nKE
%nqW)iBJ337,8Ap'N$ndVk6h<F1PR]k0Z*hqoE>HY,k2q:7^o;<`7)1C)?3S^G9#M3_2:')3HO=jD`o2oZo3iCI5pegN58JKMp1L)
%X5#'n+@5T,gs*ZNb>U`EnOONcYSgrpk&R[:#'a+l=K7KBrMlcFW?*'l+GRH>\C!'O1NrdZ4=)F)+DA&%V5%1S2&4h]MR=5UJ3um_
%i2W*Oqq)2-kQ\]b3r7--c#.r??Q[+6I`U1J?U]Q/J5$M)XCeW8>Z1J)Q8Gst-OJi@@oD;;;/L/k3uF8=2OMb@@d:b+(U$'PVMPEb
%0?e0T?i+=>kq$IML6Kf$]9mm-dD!_17-UNGk^@%M$(7MuG^;gp).]6Z?b%OaI$(a9GS+r$'GG@o-WOTKl?4o)[H#:AFTW<tT#E_-
%qO1R/(t7W-(f&)<,$#0p<jo(G/75).oR#R95sj;Hf*ER9pl[;onJ\.1<b*'a\"6ft#ka;!eokES7:22+7I[Z">!(#2EZ.>L*J(C[
%Ug8AT%;@;9CBeKkOjF=,,GEqB9um',jB-1cEaEKK>MR?[C%FjhV4riCqY'iUl"],LS3M>g.A0EDNF6C$E=A`fBLZ?7.uL",iF'aJ
%r,GeFM[5dN$r6)(%NPlpksFE.IJ-KM,h*83VRRD/4d$e6+P*Cq>,"o-@j;R0a&7<i&5sX*1X=BT95*qr&Yg.2>>*EeffL+@a*5BI
%NO-ssZ=4&o?cu"8$i.f,GRke,O?anDLdfN0$6-fe+p25I$bB$k8-<%:p6`GWg'%hiK!VZ;3[P`0ddgPWE[.Y.5/X=)!%-CV39&Dl
%*g%Mlc^PdAAkDj6QdMp[=C?kCRsN7[rR)M-4r9,]5*DqX<!m%Mgm`/u=(8)*><*&L.qQ&";?RYT"CKR$DYEjdA'rQ8'&W&TC0\[m
%Q"<ViipCL2kcb[<EYXX*F@:h*Nou\+E1^u@M:cjT-J..tjMX?gJq4R#Fg^?o6cb5#nf9lmc.M8`f+p]*#%Dg9R[fO5cmss*[L"2+
%o*Y>]O(3u;44`]VVOhoa`Y:]*c]C1"5u%F`.81moP),"KZelrj9pN):(lHrfl\jGsTpVC]D[N.UI(M=e38qCbfK-@!7WW2!mB9;$
%Fj<F\DcYmg@oJR1ba]ZU9ed-cRS]n$+ErO4hcAcM@8g)S7F/bclX2=qR+^r9)eT?%Y\SfZMn"VY.5;XC':aIG"C4^F7=SCR)A.Sm
%!n^mc.;X/0<a[oK,,Xor.86B/d;Ia)g"c,<U,o[4/h8M3Q/$s#F(j>k"^E$%HB!WsbJhXe#)a*X[1[5C6-)T\%Adm[ZrVj!S't1A
%IZCWIZjS^<(1sujoeL-;*/4;1R)^m9&=#X6'MY(-K;<k%TUi/N;6l0'5O#a,[UtaCoFtnHoCq&Pfk`DTRc-*Lj_g]OK*gu>q)GIS
%;([V@'u8)\HbHhd0BO;B\&-t\`d;C$D;8tmjDHOT:h\3.b2)X!!%_Fq\/UVse<JO#6i#Lhj9"unC4d=h)TqRuNQ_n9NhEZ,*>Ded
%R%DPdBuR3MGTbIH(D0.a@i[i[8m'UU(3S^s+45cpog8Q^,rQCde"t_)m.ehQ2HcF-,,Hl]*gBioq;oDP]5kQo"Vo4UK-iJDf\59C
%`F>^5@1V!_7-]gM+WG2F2l\(Q8nJ&323cV'Ri0NH^e)8H3*0FI\!C\$8rZWi4!.mc_t!=1@&*NZ81K<^cGuugS^a$Z`g"?8_tHY$
%gf3obbbh`kkMouJ"e7Sp-D?sD2_P%VGTX#Wm&&m!ndicm`u6g7;#8L$eu5:.V13;-m;NL$!f`b3Vsep.0l]/[6W`^OG`hVZ,HR"m
%6X#u'o5T/N@$F_0g6"RK%YMCgaB98nRi1dJ\sJH*2L.u[0##Ym)A7Y@g19XCUI+jj/eaRB/%"!q/"j,8jg=EH)$ZENm/T`h`eomI
%!<Y%cWutQ@DmJR]7:C/#nn@$YWg'gph2iOfbTG5\gfZ")OjLW%^p6*/U_G_kcR?#oNM4&<>(--@&`4*W"l5P/'<>ncT]Jf!/S9d`
%E\'TpoV.-_^eJBUd`8n\^(IY!1aXI8@;dj@Q?R:m^eNSL0<'h!a9<u7n+0UpoO[oO9>6A1RHKsU[nnoP03HZP>Wt3EgQBdJT?@Jq
%ZmVCtd;("o:U&-qe+rQUq/A6/8a#+sQ^,`A'p"[0q=8V&3^i7BbNXDR]`u#p*GML2c(ssmkONc:.O2'moB#0+FbEnBXekXNkOK3\
%CI^EmS6JDaYVZ3KNMl@ocSdZWR>iXua[fY7[<d/-WmtZn,#L;p5r=^4jbtWA3/^oe#`XQ/[VDGF&QRKgWJ!XE)OHHLU+/eir_X,c
%ruh038Q<Y;;TY;P``#EB3@Si5&\:\nA"1%NaNmCe:EcS<rk:I-%ooGpGpW*PK#B>tg<^7.s%P99/o'Um6@A_dNPungbog>OWNMpF
%DciG'Ha8Y-aa6]qp$$WC*m*6BSWFT[OftK&-Md0XRC;72J[g6@H(jd'P)bdne`5'FQIG9M!\Ts8]5&\+,ZB]>[(@))>=#"==Ir"/
%!,f+&9,&s(9$eH5b!K^7=@&M@/JaXkW@+6#f>`/#E\GM-YA0%Ia6?6CD5P<e#"H[gnm8N2f&JcPq1^dSJLh`?i%)i&?GOo7%?81I
%4oOTX`@NM.q0ng]EB:TP@$WcQ0-;d3N0YoN.ENB[Esf\JSPY=,'OKtchfMA)>hM,X?$VS,"fc0&`cU+/25XM6e#Q;G<Lq5.7`#dU
%(Sb$W'KNGf)Ld??cYTSeJ_'+c+:DG,\6*P>;KVI6(3?ZgC\@=]imS<QZL'n\Ic>+;8?5goTcVWkkr\K,a.q$AWhmr3SYBS2O;3>t
%ie#oKp"[m>gZo+PB%1PTZ)c.m/raoms1(hXjD(dm;VUi[?V=7;E,'Ne5Te3dUE61$1_=:X^R"F`\Z!^-5g!CWA#9/S?"cYaU.d1i
%a`^+T&QpMV;t;\dcYSQi9@lo0l(i"r0Vu?B5%6Cj8KeqKK#p)OUgY<D,H>F#Y#,W#\HH1c"Y)`60>`6#Jr7]bfl`ooR:gn7EnW:n
%VG2F;pMt*=Voi_m:fYjX'GJ?In^*Z>2V&p1#kc1['!gH";T<5](m>l:S<jT7OS'qbg!=CHWp8d,jp`hU]dY>22pX"Bese3_bHTj)
%1hjX[0cPPKV`iTMZY-r+=3/N]^j<?8QJa$%A"X;,Mi1fc3?InRq/H#/2]N$'0-@?.lOCD=rHG:_\B2i&l:>IHk697@_I.KS'b"%J
%%d@)1m*+=Q()<WHl_VV`$.9i/_$kBsJ%3*ZMKi?"1]PAp?j^X+E9J!.AdusKH&"4MDLA,=acRjMEe,PC(":g@D,K8VYa]qfIP$mL
%HX!=cSd&YGZ^.VU*tVO*6kOFf8ht0MNEXT7SCYsVMoPm:.1Y$mTFkGdFjX`3?:)CU&4t_HAmVo)Wi_\7e4m">Z1TpEMWT/jR$ecQ
%GXR_dRa,3\aNR;8*N\-p_m-aD;4Z2#g74R4J9A:F1G9FIS'M`sOI=]t\7S?+R<`L^oD<F(h3iO/d:2`'IApemO@Z<c6fL>%G=B2<
%MX*@Ib_`I0)LAA&":),a68.XNSsa9u:N:^BM$B5UbXHTPo$l#WX!2[4(*F44^M0pGp*>l2GXSEPh,&N"P1),20AD$.BS\MQA4*WH
%.-.`rMc"FX*b=Qh*RWkLFVCdDo_,."+gJFuKgHlrd:R2l<(DTX;(1aelBSfB3Yn]QeN3M67CEf8P.ci!dG=I7.MDA\Y<#H*^YWrt
%_</"Ka3r>b88D(Tp>AKijFo%%&[a^[/8ck6$S@*eEL=qu)D7PMRj<@2Fci-Gg-h+j<S)An@3H3bQ*8m][OFfAoXu8:ZIhcRP%6:c
%XY!,MfMLm*ZIhbn8N*WrFo=/&_h8dH$%X5M=Z;!_\fXF@p>]#a)6AD9hH#g1;NJ6Z-fnpC9j<hP3l7?[725Z3PO^Jjf']?HU:Ouq
%8U2>+'cpC+8U8E#M^FYYng-cE9n_2$g!6#*Wo$le0c(/:9&h@LWHqLej$Nj6Fe(_K>+mue=`K3/X#d]?P"AS@>,6UfN]3uPB7b0g
%MH#DtQ@@/=j5TnkcNdGIXC0#"L38qf_l$&8X(j8ukBlhj1*TZ83m\>1e!p)i:Bsr;eaD2\KppmTHX>HrhHH9eqs(B7p1E)i\d,rq
%ZLBS1\)cnX<9D@_Q-0$W.UK`kq^)iOhPZ%g<g]h[8RXUcE0I+?fpCB;gZ)Km,@iXuDW58L?+!le^"W3J]p#;EXL,U7]O\e'Y1i91
%\kupNGC/r7aaSIJq,LJ!QheaPMke#7C]&dnn_qfef6H!ihTd-Hpo*>KFmqPJ"*nU)H9&=`iQ6r>XCOPn]DLF[50Zjr48tA/!;E"M
%m.\*#Qe#r-]Vf`9mf#*pg$^OHZ#TXh]@Var+,d/-(.WDkM`Gd>ea%C1TO?Z7rooalp[L'Q8:PcV:m9Jp>5iluNC^h>i`F*-]&oeZ
%WH&6q^7XBiCgK!/=Z*Rqi&q=_08\WbXhNEb3"V3B:aD1$:q_1o^lj&Bf6dM$$BHW>\\<M\=2WYUV$Y0$oPE^`H>+b&n4D6204,Dn
%R?<jG`n=<!gpRh-4nJ-ZC[u)N[&/XEUQS?X`)-3&'p<BrP=uutS_FnM`h^`YeOG0LF2enM34H23(@UNn`Y?GC7ZoFYPLu3[`.TY8
%ou+SOXM1X3hNl*o2#EZ)"ko?rQ^61"35+%2fU(XmChI3a-L5Jd@UEp5m_Xg/Bt?kS6+<66(D.WT<aUdnZm2h//ZUOifsI'tQ_n$n
%+c>Y[lq>Oe$ba&e9C*<)@jJ*.#jlJ9@UE;>T45-@=(5Oj$F@:TXbhHDmaZJ.p8*a?RYKO`fU'%$C8b.%')U+_qW\>_bp<"Z2:_4u
%K<<["lmq?PDDACLh@pTOgQ7^S/2iBm!f;=7+K^pI^9jt*iPKAC@UE;>?UsqrJup<lV)=?tZ-mArT7WHGfohc.dX5M2RU"\==1k82
%bDCX]=adPoSouCQV6*YZnRu-9T/pDKeQ5TAbf!&gr1=s!I^=lZBiF;Q=7C,VYqJ/8*$):/-V64r,Gt6RIkMV?3E8k7>-<(/B<dCL
%7,$>WHbF:"/j[0Tr%^[#G2M:\r2tje\+g\4T)0GoO2]m4MlQ&D^9j##"=WGZ]4bqIULOWfJg)$+(!S[3hUS)$n1Ta#\l(i,9O#fH
%ZGSI:)\_V.I%tBos,<sO1]#7,bfF\qpht.T+;rp5`,+#GjaT91HDPKOc_"8O88C9O1&(7Ri`;)*0)l=R:#>huKi=hR0)o]@*kL%J
%s#OV#%+=VECWoP?Eqs(20r7uo91,'G"fH#$rI8h];uOo>$J2_5>A`&XB?ol0]s71+kqL0.!m+/F$re7(r,&j,n:+$V0YaU'Q?2mX
%_]'POm\ZMgk44s%@VM[P/SF1JVM0^L:<u8:_;N=Z4#dkKQ5+@q#V)'l;_4c%.BU3HT%/Lj@.U.>$TX.]\"4909p:EKFTTo/$+5B9
%$H51F$akT;M?K()a0ZKrCel6eUK;DhPSS29j[<Hj7@\ohXKu;%fb%DIh'(I3HT4+J*Kk9ap>(_K@F46Fi-(AE`26Gn^<dVB=MbH)
%[g6K%?*KG/*Oo/^S#Wc^,$$+HY/-g-k)Xe=bni$(UgUSR0d^5X3N`!Bi@G=LD(RsqUQN_?iRq64LNC.u%0PS'UU<M6U+$csq)9m6
%6`jZKN3.3/UPo62Z'Qis.j=HU)iF((7W.LL.iu&pEj@)3:8&Mj,S8dm#OU3*Z$ZL[#3*W8eV`8]-bILWO);H%:O#"-YPr<J5A&gM
%f8-B^_S(FRh(s?L?W5]-EUR7)$Ps(,TQ+V$lG;##3<me6meuJ0/!.%eU=X*2T"'o&mpFmiSq>Y0L\[WBKmDD:HRls/SC4(<G%LQB
%^*g'HB_"L$_Y;7:=9gS<EP2fQo?^+?%1umq:`Ui4YR]6$W$VBl@%E.QSYia^q%gg%8BAfWn&GZ&')QZr+J(<Y(->W359;\H8<n)$
%Me8iWB8W+2'<)%s.a0aH]!R23<nLC,nrlIFd2MH*>*83?A*]'tmA3)D]4/A7;:/XK]L8cXO3EfS]4ihbp8ILLWXd2Jc5%<s8j?4f
%<eD#p,_A"E.+`bnT>W)4L"F&OgZ(tg:FN+Ucau>X]W,#@<?5:Za(:XS"bLU6]<.=<1*&Vg\jHA.gI,^F-<VV6PRQ`K@C>&L9OTQj
%Pur*A2JIDt1*Pf:/PYV4+8*eSfZIX1qefuS3]"F\2t_JWm(fgD/^?.73j%3VrR5%P5)@9"*'p%k,E`\L0sdYK)Tg5#lomDc;Cu,#
%X6IVS5E96AGo]Lp<-Cmla7n]*T%U/FdtY06&=r51GA$CrU>eZ6`_Nkh+1l9+Ap1A9h'`*)?MP_*=48a.Q[`RP9fJH',I_5sBBFX9
%]6tc9FLN,\\f;]Wq=0]3,<)!:%Gt/J$^$'M"!k'FDIrJ*FSArXe]Y&<]Si:d(OM\9^5:bI\(uIqdAs_j8bJ&:\eFC0`,Yuk]R#[q
%lb^Mf/\8;PpiIeV,uR(ELSi(#mg5d9?Ss?;JL7eJU%,Ypmig-!?b[AnK+fS\CrPEW!e4"g@9Ue#YLLF$"TpR^YP)ARSQ%0ZS_6lu
%>.:L/r2PE),piR^BEZii"1PSV<(ROhlVIr5'[<iXCcm/06aB;9JVs\LV5A"d;-u0<Z4<mXlNF_?'Mjc?&@b_"4g%O6BG%8-9rVI*
%H4e*g&c`<ZJ-Cg#cEIpi@#^5(]"oB%7`)t3`ft@GDJ%e=k/;e,iM9b`&S#)SVpe"1f!Wl1D-EsLd.hV^^LNi4[S1!J$F`HPJ]FO.
%6>Y(lj=Fol#.*st6Dt#DDbk/IkZs33D4r!Ln+-^g84Qfq;^nM\"fgmoZa^K_Ral.N$+a;:FY4;a')0n!Ln"@s;Wt^C:/1Sbf!l/L
%dmnr!Il[($6O&1D>)JB6d<\A]o8E:5W!r4[IDcT5:$:3G]T.$U[+2?j&]m\I-dSWlE,#Bsm:+o<qkDbCIS!+:/5h?K43oO_ghRL!
%4Yj,*,_6"gM%Pq$@.ge&9t@)tf-ItbRa+R-IfUBFeY-6SPLj";2:-INee'7N@Va)TTUVKaddPjeC\=ui)F@UJ%qpSdX5a4tBUW_f
%Bf=BP=j39PDaP<MWom(i.>^Lb&Yn*eiKV:A+O]inUS<(P.>^&km"0EE67Ia[o+;)$Yi.JY\nEc\e>dI[@aTQk\Sj6aRe1Zpd>J3-
%:XA#LM+."JMeLO!.>^Lb&aR!snl$06GrWok`@i_UOcY]iLHf`\@=<a1P<;n4ZGMWJ"Z+kR=eT4]bCB;m_H8MYT=V*X6^)E^AVCS]
%m@(ekYTmH`ma#-=(d6ILfO]d$!`W#r3B;+;%AuHkX2ZbSCp9p>ZPO[_ga[U(@9R26;\pM;LI_Uh]%%0!F!ionL)?kS2H@.7FQ$[,
%W`EuIn1amN_i=rl4^1IpL^,CgIGnV'1`tRtW;6d']'rN^?cm5@*R,jo2'*F!AV"Uk_Sc<+%Qdk.hc!d)fV5LSk_4ff$%Uf*)_O7s
%:D5,n$sWbK_nu5@X^-/gfbTF'STKI$ikiSeM(n>XbE^Np\aV;&2,j1;AhH3iMPT7d%ZC)f$=.nDJ,C#k]<6A:@0?6<[[`JPH.uat
%9&<`M(EV_JOqQ0mgkCMtXb<3,hs&\,Knfh6B0._.bg2:]`r"=?4Nrja:mhd$f(=ZO$#E(K43V%N`RRoU_Sc<+%V+3rK-B+K7HOB+
%HKfG:aZ#K_BA6<:dVh3`S-rk4GaL-&,h/c)00DpBAY^pb1k+ClIOht.,`Q&RR"*k!Su8ftP`*/dgCBXL[Gf!?r7_^XIadkALQ/1O
%[4VD_^$W$X:TJ]u@>gk+d0gHmh,Du&KnoK5*>V^rlWe\ei&ue=??d<(-!m`.,;H(c$P1^FDiGJ4.WjWX^=l<;[,]$@r7__IWOToG
%olG%5lqf<\DX#$U`l_"5IGnTc3AT_0lY&$i2f[ebZamRT??hjdMV`L2E^Z8,n1_`i/cp0+!)1QP*Ytaghti%^q.?iZZYAC8_mD8/
%:`2nfesa2>0OMF.J]b*%GaP\j-amZo(ETFsX_>L]!uE!oeNI-Ln??#N@`oQ/-7$UPD22OY/REZ=/8j`iLIqP?CDS&S-g?@lg_MP*
%bkLn288IJ,_s"nqp<;YFS(NFMq4<G'3[Kam?[.rfgL1?=)J]5f6TM%9,[KA;DnNC!=NXcdP'L)I%+OEgOijcSMt`(nO9Ec#L!"Z?
%NoV4D.=%.4Wa`>g-El[52h_8?;,6a@&3JGqbHE(,['@k;-WoVmLr-asq=.m@hO!/f=Xag[f]^`&NZMJT"gbd44mUS?ASpA%1j8KN
%bq_NO="q"*qWZ5]hB*XQI3.aIJ"P>YIVm;O^OOQkV:2JL'7O64p378.$[q?1mlU7?j7*Z3/mC9kHL7ZD>5fr'CQ$d*r6F@%bjFi0
%F*PHD[pd#n%,CgJ3Lh%qWkZ1>G0g`t3;ta[oQiGPnFD%e^A!*#^,R(._i:)`*ck`:l2CEfH$SoV^AE]YH?qMFlV"4Se,+L(#Gq"\
%q/"1JomSSWC%fkf[JA?uXnM?u79am1G!8)BrIL#*mh#6<BD8rXrFoX=fF%0^pP,Tc7M!])RboD)n:$FHI%J(3%=EVK\cXsUmlGHo
%G2^d'Cqh.:gjKR^#-ZeZ^=7Lbk%<4GddT[BJI-i!I=.DFV;/W<%p\ebD06qjlqR5eI#R%<oGQ5`n*[+.dOh?*Y/k_8deChP[=J?u
%lS"JG=dlDYmIb3WGIIS,HAtPgDm=-^PM<*jk#c>Qk0m8>!#/O?)D\1\V84b(>ktC&HdB;3g;;BKeM1-@]Dg0YZT%4mIG++f]4$/7
%efk!+Q6rJq;!RD>^T!Zom_ucopU,dgqqtcR^mC#jkeiH6Am$1IcVCR,5%o[lc`_,VF/t(O(W-Uc7n`UbVS;_&`h_T+[K9.W`ui_2
%V2]m4@&1]Z(N\dp]A,&hklYIE"pDIin>A?9M93PeQJ^WHW=et?%_*T&n7SRK5HBdo(6!AH)I:dGX!><VXjmWAQC%9,rqd'`eC?j2
%-6Dqh=2BMtotfAO:%2OiI;nW2"V8U^h7Qa:"j_;PUW*%Qb]28P;ITG)fCJ$_&bWsnlS`uaVFr')V4Lga."sh\dV-nDB=d#_Mu*]f
%"L*"@j]<M+`cQ&+BEtju7g'=2Q:L%Kp`:&1C29qFY>??*r4/R?B:me%#8O#K7E?(MCX28I!Fsa$?r)'0<_s_s?D_jqDCYL9kk02,
%9\l*-T'8u)SIb_$gcMpgq'WB#;q)GM&h/MW9lXt=,<rh7pNU>PBTm/t8XiGMaaGaWdb162YKZD.9jC`eh:9!F]t'Is4</`Yrl<B2
%m:,S*W\Ja>oH74GcOB%WAE^LJRQ;&Qp"Ds@$a,#3bKg1Ci=1;qP<o1jeTEQ<^B!f96i:a!`*C1>kL_ckSm8."Arlui"V(C8nWcu*
%IFQO%501-;M`ND\f2'_cn[S]"Fk'EY&rZ:)AH]o]L*$&$jF^g*gaFOn0Ulj!B"s'DJ!V3JS^,>jFmNkKDuA3[s*eg*_>9]n-!i^f
%(<S90dhd!U(i,<b7=P1P_]^5Kc-`W9CpmOcB!=&]Y?rWm5TC_LTFlmqEDE*lSuP#%5PJb;B9'((eKYM5#Q)`"c*0>r<,2+io_'ll
%4ML]d)C6YZMJD_dKW8\Ye[q/lAq0Jr:#<Uo?.8D;F'[80*3X.$B^h[1k2tp8CM%/b"-pK1c*>0h)/!HaCMrQX&mr&YAk&+6\n3VI
%2nPs]4u!T)mg0QYa$q98?W5!-r*VC;K^o8i?G(=O50=cEnPO'EA>0+flc5CEGB@8%ah=N:b`I3Ao*>4#ruAe>R=FqVQHk<#;2--c
%%!//WZ%o*XEY+c50EPl/$:\XR`55-8C_"'bA!ON/n.._8LMgATd*qDj5_j!(+&,N?dti9-X)L6r]fr/!>@t<)m2dfY/g'7o<P"`-
%dkprJFXDgSU9sT/P?FuW+f>(-c:L#*fOSQH_.\.I5F;0t%,q4Ls4$^>6cQ,^@gsAaRb9u=]00+Y=<pKP''?j^:+-^t6X:9p5%]8S
%j(DT^rnN[si!nS-oCJ:fh&H"LGi*:Z]\7cmZFk-9J%%62F&27WVoEW!n$Z)QWqee>\!=:bm\Pd/?_GT.XcEPqG_[&E-abLL0Lg0e
%b!ZZDh?WGJSt=X*L%j&9ZVnK(gT-j:/hCj&kd0`!@rp!kFntjlZW;M&kJ]'XWXmJEc54X-)ksoq,*!E*[JP#Rpu1:_DXZKp'?VZi
%r/\n/h=&e*qnBGD[W$B>?X>_&mCFZ:&A%DG=Z5\r4fdN>l=6MW;RC5:2!Y%dW0YVjLUE&D1OXFUj`)Z<F57.TF?9BV=,NtX>W;mt
%SDarTr^.BoW*Lg\[I\[m4he?,359g-IiK<XDQN/lM<VaMBdi=2^[$a,T'C$4EH18`DQdfh(Vi)W-A$IE=L,Zre=&<lBj^gMCMCLI
%WZ2DtH+,XgN3#qlp/j;V]a"np"NL&X<ZZ"(+0u4N7p&i@p3#W[\99U4e31;:CN9mR@.dKKDL_*$VYi!9oiJQUhNo^.cggB(bFOB,
%WH^7VF%5rOYKpO<X,ZDhk"OLYaY(rUm$jA'P$9[GlAq#GFH\V0F7,f&%8Up#e`WR0i=tCQPEVbKP=TEF=,Uk0<d3/-a1c.dkEbJ_
%#B8,Vmeh[A2!Zf>2^8\PkMt`u:;0CT4rkW6_CIjXfs/l4H^\A27n^l*F+Lc:q^`?omaXAai,l_6.eA`"0;m@+g],q<ZYc;e1d5@3
%-B6P5drjN#Tps])J_]+.<+EqecpH2eb?71kod10-D=hDhHV3%97JfkY>-f1rQc0>:B4E<9j2ZJ$=qIot#>>R!6tq-9Pc7;i7FBr<
%KV=k:F3Yo;ij0tqC/ZXR[_H"D[+;$4ZDWER%"rfRY0(a^5XYWp8qS'1IVJSS4H'6`QUZqf#6-\C1iJUJ:D\1IULX7<B\ZmI#GW^&
%Q:BGdG"X'4Zh2g>C"+(b0+C*-9p\=V[SQF7%H!ddbtqCg?I@nOoQ.u);>+i)"`6/m4>:WVa4%EA.L,[oDf3gkeZ-'+3O^s;H_@tJ
%_c_O*)<_,Z\Q01KKC@b[N8=6BI"9F[lGmP.eTD+&lPAgbi,86rF_VfF@B[%Wl"o2mOtih/\he^#O@A=fkA8pY%*_P;hHs7*4-q%S
%T2RDpKmO9IMSLjkJk0$0W$4T1o*i@sf`p7H&Le*jF=+k%J8,MUD*$7*b7b=)Wu^a<Uc(kC0oh%gRhg[7U*k8[XYmt6s+%sm)EN@o
%$^A,O->>Z<7Q$##GlKe%*:pPGS2/)cT=Wk8]0AW`L]3cogLE*#-5s*U?]J*0$p7&<CcNA`UZT[uPt!BD=7B"f2"LWhLo1G>h<p`I
%j(,JQGkof=N?"HAd!9\PCR.Fkr8U"_hB4=69tCN%S#OlVGV:"lgS30ZFY+iL$?5uuX364;fpDH<9B^lg\:LFKFl[I*D^))bP?hfr
%(qN;,1GG;NSn]2R2b7ZU-]VG\X,d.O#tisTrp5!t7cF1^n8NHrZ=HCgf'&7Npa0L&0##Z#UcCJ!>MS3ABFZJnOaYekYL#uoN28C(
%CP]50fjkQ][%am%gLQJq>$s'R2OOu+X1ut72WEXXBgbd-,:`:rbucrq5MhbHH.-BgDRMK=eX9j8GhU7)G^oC^p2r:&jBQTHrnMji
%=SOkfhOKt\&%lZOmIrqiAn]#^mEN/]9c=E*q?Yeb_N?$4)_DtXg..5LD&)RQbWRn\cF-H2DHt'Hi,ZE2aI5P^*4^"ADmYMr:\M/=
%BXdejT5.5\MVG6E5+OWlQnOrp3c7`/Q_s<9/[oHj?+N0nDq:L<d.=#kL9jVPF":4#:qp_>/u/0uI9#^kZb+jb8#\:SZbI$/GWu"R
%prb_r`]0<)&KB(F\O/=$bg+T"gtr&!o0VS4qGk-U_6<B_U?:30B%&t@GprV./5"u3@-4CGF4?(+WqctQBYr"8CCO%+*KjmW_ikVV
%@C$`]g^2I'Cr[a_:RJPt2CrnJKV=n//9:`CKn6c,7F#9!7]_4oCh'?L2Crl'3N_C3cCZcp-T/3N_BAP01RoD[(Sh1A'Y#@?L`gH+
%EstNWW5#<=55IXon:*N;I#Eb=K&j'a*_XCL]*l)GmCVU]q]b]HEqM,N$'!*a[2%\d@,::spUY2!;IO'5PQ(?khKi6up:_2M7@=7o
%8lNdVJMV(+EcVg9r)hLsqWug;eGMR>F88>Y`\+_Dd[^@i'T:"OHF8Z[A+4d#`JfNPII[6%L<A8DJ6fi!$.rb>0Er&/1at2Le\f;Z
%`.<j\Ve_fSX,;XD%u7;QBHOCnK/0;EDS7Cc0V[WdOTD^a-_>N1COj+.FJ4iP`"PrD)`Z>"HuL(=eS-.2S"nEtfE-imJ'9#7#Z()D
%l^jYG:`c`-9Gf0*F$(_r^.[*oM6UcCrofQA9fH2Mh;N<P'"g,/,nafa"UVl+V+\6)&0@pX&.^ap8#>&rh#kT?W.+.=fb:85'#&j3
%#"XPUW&5dd!r7'pB=A*M"<O^X2C#hKr)7KHm^8iCMaW.V4k&pTUT]'&>qeLQ)W5&gXPEJq^Ap!-R5T%UQV;Vp;;f:cel=ifCp%C_
%6U10&*kCfV4*!JbU&dPoM)H'BXP63J"+4HRcp3A,&R+]_ki.chcH+lYiHZ*DERhHVgr`#aZBPfoD9puqW0DHM'+)XoTFKgFj]3^;
%p@s\YJk&;o.Okqj[h4^7j0Zqfi;.srT$?Wn!L5R,%EO/E^C?GjRi2G$["(9h2N"ZYJ4c:K%H)%Hj+t/VP%XKGb`"d#a9IBFisd,J
%#"WNeZj)E9-BUP_)^0Lh?o.6[N3H&oWOdEs>aG*sI<@4h6*7RS+,osh/H/sA9$>&q@#P[UN825h8h3N9K-@(&;@-3(hDiq#@7(]b
%;-Hm3#q7Hu!Td/3?l#RR*^m8#]$t(Mh%jiETBFT[L)T''ik.:/[h4^7PCn[261p<lMMr^D2N*\difG325b>M[CoE%TRZt+ihfgK9
%/rdeJR7C?V'=?&UTL!Ip1pT,$65_JE=2^McdUo7Z:ao+\_jp=o,SAT[Jm?R&=..[IqkfGPqDD"(*KbmIfYpF=S1(9EPk"Ak#hGUc
%&AN\O@HJlu6",O@*YeQ55(I,)d\uq^bo5WgIdW8H;$NFHAhRq.q@Y*]Of+9sP+npMi>e_mL6W!9C>3iA1jfj+DH\(h+.,2)^ZLbu
%2YH"]\M+LE:(;n2[HkfSM"3gq)AA]M1CO;B3?@83VmF_,haGhL4$(Z49M'F8;kU:C%AP4k>@_I(oXNpj%7etul[<*S)4a*rDL7<n
%'`-(u1+q:h0##up2d,\'`qrsf].%_60@T;'Br.R?Y/?ioBPS%%bYA:9_O^M#nunatXdbque^`d0DWoJX*eD9L-so]15Zm)\hABLt
%9fCj)U6Y,RWLst_gY#q<4a2fs-f2&;h=$qjKp17C%HjC>q4Yg]p\CmaNBK3H/alib1oiEMOD'$_FD+X_/%F%<a#[c02#%.k^HNUT
%?b4Gh4JZ6$=8ZV6^FX84@H,sk5>O\2(H7R7Hnm%`4jejg.,69s\hq]bCtB>!I8G@Y&Y%eM[iM9+3bm$Ydr+WkLd-,J4/!\e$nM,k
%QNPPSo&^=O;YZ<O2^^)n:"s=BYZJ/LE"hbf#6,YbU(VsQ#JU]?^%G_J_Q6!ILl?#ZG'S%3W=F9-[G&LoJLC6?f<_U8?&q(3Deeu>
%:0qC%j9_0.aA(,oOWu5PF1<f9RUka.bLC?(RO5.2?Dck(>LG>iW7Fd?VIgdr2#m#da'Z":l^b1ol()<GhbSG<Ri`0U*aUlt3rYT3
%phO\`=kECTDI70$GB\CXs6$HZHLq)_p[ZiphDmL'>?P;+m-<EOlg7uUYa\mP1bgJ7/$+M@'p=AUOnhH=Vn`#:e@dY\<W/m;:WF^Z
%#0itnN;1;P)K]XeZ=e"7ro"o.qoYbon*s]ULK.!Bg:BR<Qr`38Z-T"$cR4pOQaKohd*us`STo-UTjrRul?[@/D.@.#ec205Q6m-c
%[FZ)X@,^/<7&up/Nq[9eF&P"c#151UGtHLO/X&^?rC6@Vj%7bikBbb(aj9dcRAZ*gr22#,Sha_YNN-`k3"_?#E/XW#E?Z`&#jZ3Z
%`JKs5+hDC"3"_?#`3J3CE?Z`&YQ;EXie/k0?&9>)$ni`;>d2:d1/5\P2]?^r5:g:5g)Q.O@1e.(3RRl2Lr%rZJ`f6K@dn3ZX>YkO
%KhD`n3Z+9]"Phtp]rtjG>I`CSe'GX-4a['MjhTSsWLTE@\i+4dCMS];BjtQ!?Z>X/G]1Y]:;20$V7EYY4.EP*:Jb(_3$A)%3u+#M
%#3F9N]a?d_k`IkXA`b`]IH]DM$^g-*XX6UUG+!3[<)je7[+O^I6I[Rc3BjO^gnn5lPk9A2?QA"X/=!1q);[YXVK*pXicuD7BJ,8j
%DU\tBVClR[H+m'<=</OS9-;Pf/q\a=6UJA`oY(VES=V$("RUt+n&/-rY[J/H/ZVm&hC;]OAb&ho.Vlg'KO?Sn,\OVA9]X+8%OQe_
%C1@tHJc!e1ho9X^2L'QU!UELFj8n*U2K$h,Q[mt2bmkI;-)FMS>'ErW3(#\h;KIh_r7Oc9,/^uAF'X>anK?eT1d2.++pm+S,7b0e
%2MN_F1CK*?FML+!A,ar[Y3D?Cks'S:ME,'/]5"b1Ljr(0la"Q?D&aR5blqrH$q,tfJW,Z5c#g1/3\bCC:&N@(&?UuN.WMR]JtZ-R
%PZ_Vfg#iNZ^=,m"YV*ZLEM(LD"GJq15F@UQR#25\;b#uV6Qauab]PA$FSI0>DlK,LZ<Wa:,;61/m)XG%RTX]66,JZno3*>hgrU08
%Q'5F2&X.GfO%/VheS+7CDhiWQ,g96E?WFieCsUIb/YdP0nmc>/Q\l^``sVT[e,7ia_8ZKZOm%(f#*8t^"I7`]?s4KQ)GlsgK0rAA
%&Mu23\Lh>oHJP,8.ZZMK#SoEg[H&)M;U41W8-3o]1=k_5Zso^0\S^O6)Lu_rg)(\Y]$E/jq$>H76s=YK["6nhN+B:mF@AY5\q4fT
%gPANKhF>&kMM0@u`!,-$+![nNeqb)WTS%8;)f%eoJBc^NM+<G`(pXUK45=J@?&PbKaEqDaiHm^@k/<R1YP)d#h]"1;BmK:g/'NMX
%8rL/5g>\D9;lBi1Bkm*t2+Am>hSe0q>+J3S!<n_=^dO.$#8*l@0sgkf>I(-W/&U/^a0]\Q)DG&,&0n;*15q>B#GE-c7]W=rPV^E*
%E_,AqLf$S$aUD>46e[@fTV;jNP]KZ(B0WBfXK$G>ml]+nB#[U^5!TiOHeOXhYuJ:1[ITgH-pr%qlZm%$<b#qV#?]dfe]<I9nO[05
%ft;YD>3OAoW,](a4!Mj4ZG(b\Gu%F.bG;7j.bM`>!_loKd+qKA!KisJIti9X`oS:6VmU/-q9QCn40GVW((-#[AV\2!Cfo+d*GS8j
%<ZY4dK=\LlC0fSVI6FNE/!T4WTQ9J(WLq!_:&/J0BDF_>L<EV!I;uA>.,);,(@;9:/220_.)nL4!h`S0UfL,%`eMLQ`?f0A7'Tu-
%e`j<(Z*75EeHe+ta1n+A28m:H&!trOHJ&G7@V^%DR>j?2Rc/T(5k]?s8/-+#qI,Ddmlhq.fGdl(TNil<GV(c5?HR08\u/sSek!a6
%YZcl@\4\#CM:IAY^/QkW9P^ilYMT1(,B;q"/)I`'/_4P2n+Nd)[o4SUC\L@1Cm'NfNd\M&%S]=2=-c`E=##S>DfVg^iJbA)*u!6%
%lQ]-=?<\J(?U&X@Mn2)2VYt'.f'E1TPeV)fC4K!X[(_S_eDr#`pAf[aNJYt'Iq\E)H"^d"2Yq(;VIelE>>ofd?8=1D5k*n3HZ(m5
%a(M<,P/ZBEnTr/]8*-Dq)kn/6k3H:$(\Lr'/mdf5f54X]pI8uhYMWAi3;1riD.mm7_EAb'>-D57p\J.$[.!#'eQ*H@D7";W[n^&b
%\B++7bC?UGs2*@':\9I;aVXoI(CMn*Wm;?o]`?d"qtbc:=6tk@]3c(%CKLOWpX/MthT>e3n/qYqqOP4VFW.[tJ(P$4]C,H0JDT_D
%#<UO6CV:RSqtR0TgjD8t^0H*a:Zj^RNn2hUQ`H\;Sc&0b]KOY&!+XG0i,s9$8FG%:*9fo4?WuV4rc@_h3/G+(r4RseBOWOfhpE0*
%F9+K"+8fmXIf0K'Is:0]kBc<P1Tg8W"!6kq41\pGNd<BqfL_t8\]-l0(Vc[C(9dZ&q!2/`?Rrakm<Vg2<q\@CF7G%Ml_[HB4O*V*
%pgH.:CYAIbTt9Pl/reJiN3]Wk:?SPV^GOcsBf),^2Jgu5W)`ORfBkChYACh^`unZs&S.6%H1A#>CKBU-Hu&"Y#?M&$>$9JD:=HGj
%Y%Hkt0s.`k_,sFL/XnX,&O8BN_"Hni_hTBpfV%2gIEaXB&#ZM`VT1@TT'66rLCRRBQiQYmqUC,SRRV_XA_i+p9Gj\p)E8&u!p0b5
%8^@$aYaJ63"/B&QLA$"EY]FXTlf6sc=6IBsr7h_mld"hJ'ttY6'14S!QLE5^os3\(-DJu9@+qJ(E+aMeVkLY49/dlG(nRLH)EQ/>
%F*VT9Y1)#3h(&:;HpJ4q-GF-n`XEg$2-p!q7M$!X@rtmcc.,Pfeh:798N>,?^?sY$#u'+'9LbrK3$o'Q,O/ZaR[-E9JO?kn>HF6n
%gT\jXUMMuM:CgJ:a=1]3\bO+PFj&BoU3"*00>DR9Yk.&iko9o,_ee69/@97,+^:7`jK71N@3NS;D$MI%*[-C#bE`CjfgP0tqj+NN
%OW64,0Gp"N%7L(5K`V<u9.,no294d'C+r?q4to+B#U)V4Yg/9sW37)OBPL`p89@IrL/>Kupl=72Zj$m?POR+/-&B8E7Mi_9bX".R
%S8@%cN?oA/l=#'fiT]UcmIO(U5D61&r7BcmrRKZYq"W:fbO*d7a2Z[$SQO$&6[IqJo#k+4g>;W"o#nr&_q!60pXSZOe]X<S<pLa[
%\\!0F]t<rV#A;!1bHIhUHLL6M?%%+"Do*^nJ>op-%j,](m_rtG4)N_EI;S6:iRba_+O"Eroel_@jluI#n\6/0AZ*>2>`VaRem\dm
%^:TG9fsM@'cgbG]A\WSV4)_Zre9Oh8<bgscj6HFrj)L$Yl,ZgtK6P&3d2AVXOjCrEA+!f1Y$b:jM&aBf+-s$ZLqC1dXkZ)!76!tW
%gJs^N6)%T[1^#jYiqZ?IdM`\/AU9JV-&<CI0YZI6ASSN]`,,H*pBd@Ml/\l4'0)KkgM#b6JT]EM^W8V/1cWui3!]I<q]p2eZ'<n(
%E#'089fU'cPcI(3J_"oU/OH+KQ<cTk&Af'Dm_^NC[L/a=h#kKr_OiRtc?qTc4J/Fq&?=JrgP0TBIPX*N&1eAUi"5<5FW:ELN3]5E
%/AC@$aGQ".\j!jk^r]!(!Q<STGVGgk+,6J>?n;L%Iu]0Q#bYr=ea^k*'IZR/+L-_T//!_GQB!=2ZujQd#4Vf=VAB:-(6$Cd6!L5F
%nB;:OG.7U:.)9a'BRm6C'rlV"MARsp%`bi*LGnK6fEoo[@D]R9@]8^ffOS,I41FRdRL`46Y\PAnZN2j7I;4%=f*#78^YhNc(mG3=
%$&\B&BfI`=Os(s+Fone]M([Y)$kR3Z$eRG1mJ%#&"9hm;9=tPr#HWnSNlVGS%.NJdliD2%!5QJSoc3%6&03Xc`,BK3=oeZR1]S=E
%b'LX/Q9h#qV9!Nn1h'Nrjr0C.*-rZd3(^[);;35AR6!#&a7=HW^q&CMY#(cDr%`4\ZiuTdK,j3E=qh)E^?O,3,Ll7+^]mEl/ms9;
%Zjd+5'?#e4W&iiQD4LfBJ<KaB"2Uq2&>0bjG7%*p7X<g/J;d3h?3C>=KQm^>Bu1bMO>6rSjWLJ:dA]C_K+DtJC1<@$VWIl%?ti;6
%3H/=,AOFA6)jp-42/"p?&/#Hm^n-,?B`MFKMY0\N!MUK?qk+3m*tG5cS[`Bb^cWZsO.(gUas#7jFKq)s^,;!9Z"_PdpiFf2*(C#(
%JKh,[0X?5Gpr&4Y@>?l@,#K@4L^e/r"aN4\)s/7a8:8(;LcEgA/^g6OU*&uR$j@@SqLE-D'bmUej"16>#/55BrSb&55#g)R`ZSaJ
%ebMW7<Tqad;->e<;[?B@!mA'#QZNnmeUcM+p0CHQnVGO#3">Cg^b%h+_DZ3<?ZBo7PSU;W0QdrnEU'bI?-j$P5(a#kc,@bsKBbBf
%3!PNS.=\d[&=fLaRY*n`.4q3FX9;B$/NB%f3:j'NfT`<Y!m![TaS'o-RdKY!_a8)V,KO;hi4#.e?u+DNaX\)FDC&Zq%T8$NqpY0+
%6j/_c-?Q%MS@A_M)BYTS5_TZfW"u,EpQ<U7cntho&eg;o_\d(E)8;KJJL1[2\:JN"So>qL%\4FL7#MF8_Vsl*TX<[.\SJn\6mD,:
%A._*L\5dC8j@D:u9%jPNHO`^RZtQ(D"k_4bgOXkYjFG2,_MW[s@9e2uKbPMCArVHFPc/Rb7SOt*7b:nbJKq,H!:F^8E(&*VoT59K
%!XcsY5qO3U+#f0Ngf'_ma`_sjqeQL!]']:9Oj_Rb1m#+T52p,8IY%CEHn8A#6^&a=Cb]t'3jrTBeDu1uU#tX/0;dbJimgH'J'W4e
%RCKEgM:)*G?m.6)g'ocU^cmf!jV1oc9u3<9(YPg)!<c*lDQM[/B0IHDGePM]`<X\Fo5T;Q3b1FKq="sSVl.'<BF/DU6-1LbMAeaW
%[[,Y6h_Q8h,qr71Mrui#6.lGF'FD0lGlVT(F>2*iI#"E:hL#VuT!4O7mb]iCO@*hG+:FaNJa:1PA-O;)VLr?NB$9Fp/Ht;\1H(hb
%a30Z_p@"E0#=fWQ5MWH[V?f/[%$GFO3]n<_)IrlbHo0si+9J%8D9!J`ZJE9.5!C`3f90B0kG-e`;:N'#"1F"f$m-bb@,NAq'g23l
%rpAuEJ]UC]QHA&f8_T?kf4!\ur3e.XP)AY[ncUgUAA:5G5*&6^eH;c9M:4B1DYAJOV:r!U5+'P3"';`u-$Nc6PF1Iq4pjho=?r-K
%.,RTr*&M,,()3p!d#&7'W</@I,of((UHi`W-OUW'T9KBb6p-I+klFE'1SLSgT.K5W-!PRbMbWGkB9"S=VM0f1D#m76*WYE!cn6q5
%8ufUV^)*/p6)jsbKBT`M)E!)kI,M]cY(@G@;Yq%.#[^*hd1b(:Qj(_gKWYV0l*)QTOUar*P^u?pQfb$rW.7R'f.:?/#bYjF5edq`
%4GV3HO=`aln&,_fd'=2a)?R!GCdo&KQ9+McR!aTU:m:Wig2=Fh:c*K1ZN>q(\hFp])KS7JQ]+W(+Fn\hllm-j9nSID3$i[ie4K'3
%klWlFY8A4ArN,+m:iuJ1G7/bncq.ir5me5+ckUIke<VZ&!ZXlL8dd&+Hb,+_P_VF]F:Ed\D]9tl+mX>S@0?^:SnW1s5ib8H96AY>
%Bc+YFD,&+'TS3,'%?OOHRKfb;L+gSV4!a7[\>'Z/kSMVLD1P=E1WZ7G")-IGKjbmm^?2,T$gZe5RS,=1-@4(d7q4T?5p4_oiD]j?
%ApP(ERR][G5TPmhjHP5)'eq2kid>SFqm(_cBU6[;/:\W[$LS\r*5b7j`*jB#oG:J2J6md-_l%0JZB-lsXH]tsf6%h,0Fj22QG.Oh
%!KTEGoZ`7G9XYc42YA66;FqnfRacq?3K[VQ*"3Q7<5WQO8$8rXE/p[sa@8$(D*fkUI.5&E6+LOB3akl!K!j`dUljYg_P.(W7jSdT
%Zr%M>4VM*2cke1A%dN(jV'2DO,tf`Aj]o&^I%-(FE'QF\,><QhAdX`oWJb$`9j>3UKJa8P;T&iC&_o6PCSQU%f2:_InUQ/0<[1n:
%"8@p"R2YEaf4&%AdY6id30&dR!R2KA%;Z$se!BG!N#;jp^+&3\8djcIWRV*gKWW@I)mH9Dl17L4BIHblVJkZnpk.-QC"%KJQVH*(
%I8n"!\N/n*5k6fQ=!t$Z+*^>uNfOt.<!2_fePr\dg?gbu='0tYTdCp%AI;5%_0(n_6AWpOGJg&ikt/5/d9m$]#EYup\C0s,\=G(t
%i;&3pQTsDPLRp(r=I<JDF3Fs1&nkek!aZ"_$*3B-_VU"i:W(^O6b=u.K%4?$G*%)nJtcrfD=\P><QIFUX::`j+\;@tpi?a3$IhE^
%(n>WrS=pTJ4)=m'q[GftXjA$'lp*guOclVO<-KqN<lsS5bFcSRAQuZN-r^kHdt,>sO:?RJ;2C$P4[QJLljcgX!4a"c.R,,IVDF:o
%Q;)8`F9b+#-R$IdORAGhL$"=jTFm6dW,/7QOC=hU"8T,I^9r@;j_lGEFUFs)OOaPQN-h"Vm\j*o<H91YCt@[MNk!G8:JliO0'T6+
%pdA"b-feVXj)X'b8ThuLCe:>ZBHV"P#Hh\Big%]QGF13.Kr!C0@+H`I<0PSL_R'RknqW(>dhcAS>oq<V=#\4(!Xf)c#[(RfQ`NRT
%E^7Cu07gKXa(D9$D@!U4R`)QA3WmcO%AF0?<Z0uVc65Yb1W%8jcQQ)7?cVl]"(U74l_XDu.]rShaBHRB4F_(4A5%OhF?fk7&!'/m
%U*1S&*BW0:3&5jn7U[J&&L?^R('me$Bh\1'!EMM@ZA%!uLaRbuZ,DP)M.S>#BgT]+d15)VVU12_l%/B!l%D/:Q9d&2RWCVQ1)uL*
%)lA\ON.)U)aa"YC2gJ;OLo)l4,gr:[!.f^USKbEO3LA('TEr5_8JiNHn9#If_dXh&CTB+C":Y0g*Dn:XS$m*(a%209fD[=pUZLZW
%,P:in>"MYWq>X>n!!So>F<=6X'&J1d3h"0R+6r'IkQaYa#QgOQL>aKT&o^^8S44bFL8Wb&b9p!qSSFpX#K&(/kYrM]78<>i.FG-1
%9/3A?mgPphD%*=!.FqKgVqSA39r>'I37ULkc6aiE#,g1Z?Z])X8.(Ffr"2mr&[Wp\;f/=.dh[L)'V/uCRN/Sk:/.-mH_XM:oE@pF
%YU^T^MCr4jX@=s+eO!-W@\+j>;c2'Iq@hMGdA[mB2*KFW%&6`uYB,gXL=)t9dOc,1(n?I2X+e,d(n?I2/#[oGB,I.2Ek1XqcpenC
%MB`>A_!;D];c.Wod?#@QVl%\Hh8-&sgS-AQ[U!?3da/t8E+TueW^9-r.FK;S.UTJ?'-Mfbh=j5A&L7Q@\4T#eD,>VhWOAXR_MD&(
%.RHdnemnc\d]4"[Wf/QX0q:VX>[k#=Q4\BAoLMsmUeNalr*pr?O<J&.5c5O"WW6UD.BsdeD@-_9[5=A]WraJGK6[X7+*j"0$8^+8
%!")(_<M0UL<EbS-!i9*I;H4TAn=hZqfj&!ps-EQC+!7KIq^r9iV!3BQ5"UZ3"[1KCfp@^Ncn>hhK7$Dk#cr-rnY]k6:0Q'ZBFn_g
%KecPC?1b`k8"cXZCO"o"W)MAI:Y&MW/(>mPhBA,KDmJ1J5ZH0/mmU*6_s0dVG<g5Wagc6sCB4]GHk,Bfa=t>YK!Gf?*BN+P&S_Y7
%%pC3o)@c]I#f^=NF?V&4"OK#Z]'/33'ds@`/2`>^<Bqd"e!QpV3[$@!>=:'#oQ`?1JeA1+0*j+p0L3E.BrW;,"8Ysu"*CZE:l\L4
%nS8e+Et6[;86(>9k\k]$;H;c1Tk?_KF^_)sOia7">sgo;NRX8JOfB0dI<iD_98.Mr0Y.AH]0rGE9\1SbEhu4G+N#Yl5p3N2L'"bF
%1gRW>]OX?=*cO9NZ]cDePo^kkkugDAA?Z+rZuqn!,HY,bOq?muCaDUCL`K%T[\MO(NWR(m6BPeq0fi5]='AWiYqpgAP@OC?'PBBB
%Ima=lBRs6t'0:nfUZEGNRU`m.)KoLMZ*F'gP[0W]"*CZA,#Pq4FBDc\VgZo>8Dc7Ta1/VdRZ680(lBsLD;@Qd6R[90qET\IDn+1[
%@MLA%C_6eK+^;8Y,Z[3>+>H3Zif4UaTEcU\d2dj^H,,2dH\nDa,7Fe??U0EA?7RcSTQu8WN\@Id2Q"*B4qss9;'?>oR0)1G50+<c
%8D#0oA8>f,P_Dqt!u+VDZhRHdf;2Zjj0R-Qjff"YiNi))CdF]Bhb7o!6&n\u$+)KsL_PFl$sI/&kDG*!:g7Ek$A&\DBLA8KCOi"9
%+S%+FP)5b^NA(NrQlDl09oo.t6jsid/Kg>SA0<cF&Fhgoq\MS]k!?%)>ZZ=i2[@B#";?WC%&)8k@Wb4eER6as+N%^4!GKk70EPs[
%,n)R^qM3&!+k/5[Y5u^U3tDT:3i^X@OGo@BI4C4JH5ZJhNnNM*nOTU"#Rs+k/bDo0*4@@aSLk('0CgVCOj8bsf8dd6.iUlG3iD<i
%a[JM+@$@5Gg(rA>@C9O_E0G#pVOM&!)$Mpn4\A5N%/NJG:hRt7l*)#RiNbJb6HPbQ2%jSreXXJq$lak=f5YNe(bT9[(!\bj)i-!R
%,BB(E(+'?&9nJI'Lj\hsG`5)]QGJn9`Ghmc3]8\D&da[?9u51+Bp/fhJ/^9&ZS>&Y5dFt<Vi3dU1VsmH:(_h`USX%3AjtnqX8r0k
%Qkh"?.,$Wkd&%Y'?cCSP+#sPn`A$Su7cPd`#Ki\aC/0aI@Xs'RPf?.qoVN74KEHD=ZDWHH&6($UN&!_]9g5a'b")\i;+:ml7N!Aj
%o3FG:19rbZ9f-H=b(rQc";jR_Ri5LaZBsa<&Q4H;_UFYX`(4\V*%NE=pmki0&aj&U+nM%Z/OG'@1pW;oYsg,?Zo.O[H_j!$88JlZ
%0hk_YMblP*C^e8k@Z+&X!.i7K"rEtTA)gF]`YPCme)k@XCugPn(,6>V7MZSpP@.p7&V;!_KU&6"#]_BW5n,D4W,E8rb0V=6Th@3N
%/Y[0GE$CuEL_^OONG*!&b..IRBTW`OLs84cEk.bZC8/?Nl\_bONJ:uK-,_gB+Zmma:"ih^H@9TFnBgIF4@2Bra\+W[oX0]_"E$Gp
%Z8\uu6N[Id`E37rL:!."`-0*8OUe0[%>AmH3d4s=7M&`+O(#_Po8rA`6]3K/"Y[oRL)*pZqkX%r&mBs8"S?UM>(l'LL5lK!_a\hW
%/OBT(ejbO=6u.^@\0AF3W^eJ0W6kXe_^VfJ$n]>+SD4`cBT]F]kb3*nYsfEJ'''N/@uDnf4)N+`P-IHWdFj(?a0A(/dFjt`KHRKg
%kP7`C6HY[La-#G2S"h>rD"5Sh#ht<5,]IHl1]0O38X`7&ZA920:UcS0,$$s6WMlJ9W.6^ia\&KM=bQ0%Y4!j674;a;!>gD),mPY2
%aUsOZ26nW`Wf]^W<!FkW[cg;"O`WjHYoANNMF&btLd4#t?t<f1$4.r8&8M)sVaM<RUdZ+U<Q];C;l9)?,E")]2CFNbL)(p7U9)Ei
%Zj=d9h/kEXaE#Yt)36>cIH5@s]o4MZ^$BBmpm*+^6BE*gUd/L%&N/b*C)Bh#Y8UPsj0L=%nfhhAR]T$pV+`fd=p/'N+>sI&2'0]3
%(#*9>"$T/*[gUAsOsgeORkj>^\0=1rC=a\CXrHODamGPPe1&#%-AdM4mjiBHA0(6on0=Z`fSnmj+P_,MWj/_0";Y.).P8!)an9:,
%aF.pQ"5.JS>7":sLtF3:k]&"S:OG#USSTjQprU=GPjLmtVo1JegT-0*>u<Pg)H[\?K>8Zd=]+6O&6YfZPgCTX.V"Ch->!H?0bf\4
%CYWrH;2XJpq1#m8im/PO.P+B,ROQ[ZFl5\6.Trjpal"]_1e>#UK<m*9IWpHjM8k<j#okOjMpNQ1>W@G-bYkmc^3=\@=qo,08fjFk
%8RpoJ;ZL;(XbelHG",qA/4UAZ/JV^qr^2'!UZtksZD-SQL7RW@72PpO8WsPn/k0@U+VpZeB9s`8&]/'e6D$P:TYrloG*%Ru]GT(L
%LinSQLl?IKTprH>9tJFU=)p-"/";2]?.[IN6fGC-`S?Y`0-?D&m1e^F)JGb;KlpK4!WmBkcBL!_>F/g8>aUStQ<uE)!JS$3"]ASZ
%IVWXK=Fp0sQ8M5`-I=cc%#6Xh"uFWbX<GXtekB6R_;eh<!L\9g\jeW#ken0)I=0F1BuK*a0qU0h'm+><,*#)c7fIF*!Yf.a*#R$s
%P1+8dKT_<LHULSA0lUCSO!$UMXtOa,@0WFm=_qJ4#jiiU4Z6O[&,7K*O5S#F6Qau*YsBI;@5&UW2a\-m&'R_O6&Yj[_%R5XL5M\H
%c^/1$q[I'aUb%iufKY<`L2%nG```g14CF&E63SB_NDA6)$>hD*P![ld1]?'[P8^@p\<uZX/_[%8UZ-l+MWZCPbc1lp)JA3k1i3Ug
%?l*B#_p]>3OrrfqBoX6[;%n*uV7@-_qPA*t-u]M%@oSma)nDf7C;1BLhZa/k?OWhE1maTu^La30TnjsRfMG4T?_iC.d>2C@PYi!S
%KUH]<Rf(2o>1c"W$=0q0Z.?p9'F7[;U#:I6`V7=Un1?o4mC>!b7tQQ-=Ru(p?Sl:%;:o+Zibep,P!BR>:a9"F6d#`$&%,UBU2Rs>
%aVU4FaQ=,ArO:Q0Kd)[r<nQ0::FsG/Z,f)[j#kP8bWa^@93*L^='0[7bak7fM#"fM2.]ph\C.WOq,1bGeQHDO0PH:`r@XCOdO7+G
%k7U81&YQrtN?]"T1Dmu?KM^3r6i;\RFG*D,_Ee[PW=#r`*iss$h-G["D^a7X*!Z7P>`=@A=UdbSPC/1ZraBW^IfU#ZMU;e;of5sd
%TfNoHA`fa^$TP<L;_9`pX,-t0)uS8&nM'0.1Jq+nE2;QSZ#)s]"1[8o.FU`kND6LoEEs.cKJn/6FR2a-la"%]g]=k-h-/5KD)qko
%V>)VWLSbgf8pL^Qb*/2"9?g=1M1^(*3gBob]F9S=80QJ,RgVNeG1@Ktm/W"J-:!?=&Jue#+qdH$6BFdlkn]/-m!D#!cgiZ=BEp%o
%ftP^r6GaHt`YS_*Rd<l#[:'M)N!$1-%Q"99BL9Va*M!Y[2!P@riBfF4\e_8O.2p)PK\dl%()b=JQW:a2LM3S0JJN6=_`Cqd0]F%=
%Lu=rbh(b`l$hJ?Xf_=I7-'5=:D9[':Tl1Om#"ep@NL,riE/7MIcm+9QOt1s<@0Jsd'cL?u=-q%P!4"0&?l^$fV`Q)&OD91Ua^BAt
%?+`^!5Uu=F`tK;oOa(/?(*SdHQQZqZ>V"#Va>t7Q3G24dW;0h9"C%f]?5VCM#"R[YZN@%X+HTuR?4Peb*=Q_`&b5oi0d@G4Q=uc>
%9`qXA2^TgiO?3SE035s.mK^T66/UjSJZq\(8)bZQfqjpZauK,PcCRh;*,/Af65E'hnT7Q;Q36k(M1VG0$=sdF?8@>GWi(t.<Iu^[
%>E)32nflJeg77JU.L<cm6(;+rb)<47C-JbRa2rW7a?qVI7WLd#-/1K#N]:.(dBH%+?!;OWOmYe1$n8Yq^RS+("@j>.n9p_!<_"mp
%Q)q_1RU@sJJ`)>iO43G^-uMtb:.Hiip_Z@7*7B:g/j+oMK'6#2.bs`<a<''(.Io!V=9+4d+G9rtK#]&U3P(<7'pg7%FEn2hd?%<u
%8ILIJYTo+Q]bERmrrG5[=L@B_&?,sH-rlI^^!V\h(=%Cj(tg4*!lYr&3+BL>TNS]<O@-a+c=_6d/`D)2Ar$2l-G-o%b"!@][2C;)
%R-1gC$q?+e<]\J_&Ye<Kdtl4$Nc>"_8"`bG`]9_7eKY_^*"XG4-:Ns94:KE`;99Ej7ir5/&mPP7^<Shld1?,gPm;hF1A9Y+qhPhN
%Q\;LJ-lp<p=XjWKYuP9JF2/f<U8f?*&&0(R/OQM?KI'*&;4ScPf5a<$b\;%XYXi56lk6go3ptKo)M_SGA8HfAMRWuW<u=@l2cCPq
%4Hp5*3E/&0ba4]0mHVc[4<`!H4]Skt4-UaW8^B#8o506npI%5_NO?Rq>qBqd\CXFb$%eAG9SG/$C7qJo$@s@"f5O)SiA3Mk&`ea*
%Z*=QD6J-)_m)_1g'18G&&]2$P!$i,d0=V.D_-d$Y_aNI(1jqQL$#!I>Zq65PO2[a,LR9#o773&rJ!.>ZYQ&RhAa>FD%Rh_;<B*N8
%&k)`Z0cd!3D!O2.[-_NP5>*Du(7:^gZ_u,tj95`Hc(0@b:*@`X^`,;$9'Qt?i+*;L!ehhN<(*/]7NZs#\:'bKM]N7]C83K_-E`@%
%Fkmda+iSrj]I>+ce-VA(:b6T?]"n!XBb)0b(GZOOD=eM=#1J)?PcMc/!`GD<OY`FN,ZcIn9>[c=8YHD8;'lBL<!`V'6g,\D0i'`E
%(AL_M9,Vd!d2Jf&(n.HHi:O#HWZgnNj!pbKSnQNIl8jq4Ys<<51e[7HQ\lrc0maCbC:bN!'"UbYekA%p)HAE=';3ucG[g[kU\nUf
%(O5(@),bK,e'c_%eC]//$FGZebAgd,l6(oB!?KZq%8%k][tO$53RT0PUKWOF1J$FJs+/[>9Qj5t*]cne5)2J'Me.k;>:NAo"04*e
%6L@g*8FLQAPXM1Wk_`VIP4&i!aZDN;BZu/:aoj8YONF`h-iS2hR@YrA_7!,K[7E#04TEIOOD8MAqFaM-?MffSr3)bUA%Xp`"p;nC
%p`ehQ,d)\*=[:sQZWh2g.E"-D_DPppfN9E[RA#k"`dV]_AO0J!S3X/V3#Ye^`McG2)cU73`A.YJ4#bQ_j%u-jS#&i;X?<()@[?Lf
%W`Vo7"4jHJ-uDYZ+s$h/QNSg$>qtI\,oqsu[)'7Ga'^%p_a5dR(dl\E9KI7!E^.q_Ks>(UJ')U->Y#$U(S#/O;#V+MKrFdW\o@Y\
%W,uJ,#1GN-^CM/.M#6b/1^ToTjG;%o^5)e`ROPls<6>^`B(;rW92/ou#beVLE'[(%7#:#'R2ETl60RTJLdet7=?mf]<#gf/;$<cD
%L6A'@V.FX"(0hF*Y!V=U:+o6.@hKKIr\RJa:4P_rofO]P96#50<p=2Scc#st10kN6aH8I`s79?gF,B`57p]1\N6O:-1>/Kr/.8G;
%:B:O5[gptR8JuR?_On"8k762G/>9[bj:(4.fN_hA_+Gd`qgi2k$PoZAEd:FgX#LG"/O1>?b'R;1O&II`[c%S(MUEb@n`KE&Q7l!j
%jCg%=g5ZBsO(L>Gm=Z'$800ruTb(3ba_d99D.*XD+fu/2=q8&_2[5^kf`N$@_OG(3E%m"XG)g@-nldRL$[Nu:`?f+2dj6Gsh;VNC
%`h[qQBP"uD#M?/a@Pa+)mFqp;\;1Am*IpE=n8s3`M5oblQDB:R;-`4@<ZH`Z=^3f4(n/P,UK]2:;d8EHDFQqB"jRL2#gSE]EToob
%<kgG%]",'Z`46<./%Q?7QJFJn;8Jf:k8BtZ0OnPY-*li_=MN>GP2&6UVuXotRl(J@P`H&:o,JW?O4XTL@<Qs7OGi8LS-d&d"0jSB
%W!FUhU>PYJ2G*KEfnff#B_j!<GRd.o\r7n;7)D<G8pN4K9fUC;`#,7BkELTK,Rbf,[eVX@-I<Bqi'pRcZ<ZbL=SPK)LChFn5;Ue!
%]L8pK"_Lc5b7PSIC*=ZC$5!`U1maUIr8nkXce0"SL"RXSepI'T*\pi768Jf7?NB%N7jTh9L8At<D%(1L>p$k_aqPbOfk[#]4MaC*
%ek)h50f8sL>bGH*N$'>#8P$Z%&S`aKC^tMfpg,#4j&%oi)+PVRbCd=/YTOh#r%1u8Yg=8F>%k4h>t]aCU!.S2oeM'7SqGSU!kgW&
%k:XiF[a#WY4h`HX\!r"=PK4o&WWI&`f.kr^"<`\fP?^UfmL^Y$[]1T*`2\BG,fl0_"VTKR-5P3"*p!4$cAMh$c5Zo[ZqX.G/geS#
%,A/c+W]lD8N[>SX"LR-.fP:a%k\*\EU)jH8&WVT<p$-@5f5TmoM^`^@540sqr<:G2A/!oNAn%&e?7j4'>6%"D_CR40lX^Fe'.t]1
%5?bYp\]#gd3O*Z0!Kn4:GMU.De!A)Y#6V;78(RH+%C_1Sl5=1ZV<j^ES+<"Q'M*YP<,!SVE`O!>'P6B(g(@W6L,e0(6r^3E2!ZAX
%;><;S,OG#E;3oQlK>"0$(7oSu=+].;Ya/%I5:qg]l4>S,c,DkPoFcLMeIi;rR.0%.DC3"@NX/3M%[_7p;/nrr+P7=YWd'bBl\bes
%.$f4G-FFMo$Xt##DH#G*-/[b4WZ,8G8f44a)&<tkp[BA:apTT8fZ;*ue7k98,LXS%nU]dQ1<5;J/3>6n%JpIRKZY[IB,OKTm+9+!
%5e?L1`=iK<Qnl3^5lkp5MLr&b?>"p0OFsO93&OJZ\O#98HB`hpR<nW1.0,d2bL)D(VW`8`[fD<>38IejXNNk_en7`Kf*t)C==/Yc
%(+*_q"0jT-SX?A2a;*hQ%)m;8eG-$X,W+X7(j8\A2>.&+[EX^OauW05U838DlcASg=I-ktE=JOT4^dpc-^$o987/A/esZ5.J?_3[
%,#JF/1Tqimdj-4_PCk)KLp_J4;qeI273>2t=$X8!d)0:UKI*=p/'VCFKMs9VD%rTpkAiCS`]tepR]+;eQhd"^*cQO5eC?6hK?FRI
%=A>0$AsOS!9c2_ZSHLSaT!1Ujr<+&a@T2D.9'6\s9T_09Z;`f9"jN^s&'**0g<^PL-/^<gF4j^T;/u`ie.PTFR8e$#0ZVoOn2PRd
%$=gYfb,4"`"YNOP[1F$BM!2h&f@YuLW?;kV8Smr*Tud*?&p*Q.8CKF2/]>QjHGf4e&2':SMaS^;!Ru76On]qR(P:.c'dup4lq1_r
%C`K+l-X@^j3hsJ"9NEcXE1%]r:H;.RPrs?l?\#g8RR8_R'0Q\i)LA%'F3=r'F/T'["__pe5*%"V9mJN$:#K0.@W<&jVDnp_dfT<K
%g!>JP*h,(7_IK6*JIA>`H!*c'6CSS<W:eNIi7\)o([61%E)IG;0+0\,Me\/E;:r<*+p.<O?P>]$,:pK4LXsY1mS0?];Ge-u>!b#=
%5r10]LCPPg$Yl[\7\a3"Fi?'Z_A,H][QB<DjO^(3,Juh>A)\B(O'#MkPkMO1D_8@+/mk3Xf3IQ>-K[Z7bN4<XUa[-5SN.be@L6+X
%;+?98V'nK9&Td+[d>X6*Ej@V1f.C!N2&0>NLP?SYk`j"C^'VpC`(=C^U8WMEKU8rgCpmB;R"Oed8KU!6d5m&L=!/Hk?,KW,2_:-`
%V/bI@NegXB#*UgVRuhdD<RIRr*R>./!MI+o*]jB6X"WLY^W$V?Ti6pN=B<TY=p.)NKT&7^9YMR-UeI,Tff0c!de#)1#8n9>^f4)D
%*<O35N;%]9R>7-m:m*B,hNJP*kh.*90W(%DWG*!=D;cfrfe8$uOFr6`S2]sSl3r]u2\BaTI%priDA@7U:3dY-JUjIMX_B%p-lne%
%O/1gTTUNkiJMjh=oS1ho.\OZTWX9_:n8+Q_\5"r&$J#GYX%+BU:6-ts\7nJA,R,A+.'36*7;I-9N]aSOpp+l7Jf5#=8__NH32hAs
%99j/n'P':hTrp4:8uPu7]#G*]_.-M4D,4>=a=FU:V^D:g8_Cgg`'XoiYgV0/N!3pLEe,G*P6+0rD"AZW8]"_2:E6#-K5U-CVXAK/
%RP4=A9c!0E_Kn?oHKXo"-bZk'PfjBdTIQ[d^l#D,3Y$#p^qJ3=AYETZ/Ip,,&f(`Ema:E(3(4eqW^W.DNd/oiXsnFm,a^Ir*In^,
%>.^6+4&S\XV/$(-D*nZ^85!J]pQ;#8[M5l5\h*\@nG3G%1CP9:XsGNCF;Y?)bS!=\2+YV#7;>CBb01dm98n87W^4cVm-C`Q=&`T5
%%DmkC=#br,,:b$LEnC]OGr64EjCeT+M;3.(iJYP5ck&qA=s4YTM[Hl`1*oc7q^c_<,)<Et^,sSlm@\O1H3hK"d7%9@O66Lu!)Y)=
%8"tWT8ti!@E*A`$QURAf1<?bL4PN!D%[A/g"OTRP]Be\M,_\4&$Pas?VX=ho3]]&HN0?9Z^Rl3"Q7IS%O;"#"=R^nj4NC;kB<_^M
%H<DB?F=NYJ?`pO>i_$<#;uPcU3(&hgiNC&?Po>!;/:#9/:p/0\$]\/]#ggXD=gA)Zd>K"L?rQ'>0&_Dq$o![!XqD/h!%_R%[F=qe
%T;`aEB\JOa7iPQ2`lIonXBZ[<TGY>=#rb$os&a*M!3j9uTlNa^)DM8I=soFZ<^]3p!lh!n96hs`a>-3I=Kma&r%W";)?_1<R4s=`
%P1_O+iqYLu7e9G>b[Y+-+0WhqI:i-dHX_n*p7OqY_>7S6TuD0;4Y0%jdF@B_B+FV-d1f7DB%S;-Z1'2?_\+E!+J\-#$6kGVYbZ?]
%QB/EZW0du;ORg%I+*7F0+U-=J*!upP,"a<?iJ,Bh;/$ul%E#u'%j`'YQjaQCQ87?&KXNTU[IIN6O$=h?kH&YS<f.mY3=>F>fnlYf
%dtUTUo`X:HAJV_-0cdm-Cdh[<AU0!670P%7k0HE!bq<b=8LsiGWck1^$0,kF`u2T/c6d3Y1$uV2qd5e.LW,#L5P<4\e*R]`9XaO0
%jTUh70UbeT'VKqLZ5r.3im)E%!)tiG3<DXp&#pal)0$GU_VgDVnP%UK6sN2.8LZ;2ZCFA1=oa\u$3hfM%M^Ho)T.XIP\u^l-&=_o
%L*r\[bdb'F\c*Oc'.d3].!HUEo<rNMELTdUD$%9if0K8SCm-&'WH<l/*]hn$o9?7W@1nd?BrN4M)<?;:V-VXcFs3#[KHnc4!L[j8
%`9VOs:)!Bd3]O.m,bZ>]qH,u$TSOTp7BqD]GG9D1*dRf$&:,@5%\$Ci=FUBFe?25d:P[)Ao"t:Q2pT_)c.<]67giO6@,pq?q<BE[
%7aO&Ta6Udhh8eCP@!d2<OXT\<2GcrbC3q[-VFi_#QdK8QCNrqibk.Xr?>V_iaTfc,g0"mV[!&Ti+20tWM%)#Nr7BKJ_eh:mG$_pj
%DW(U@`/p1uTOp-`09m!rmm0CP<X7U2=_Jt"^t;L8Lma$sj+\J=;]V7;rd9.jrecnF-B=P6Xk"3+bU.ZerghbIYl;cGUqBmh#g1)p
%fb0cC]hG4$("FOVLP0"r`[>%K??p.A:VqBD$G+)%I:56<pgaY.q.'b23F^Wf3qQdB:SP*ZG7$#srD,+?N$<8:(KgWk=oO1ZreFW'
%QmM,ugG^(0]>X2ZFPLRE[:SSRc\?^NNXQ9C_n/`ADAOWNe&@u,BirjnG$&5hG8!>?IC(V0j>K8APmJ!t7][`NQ2K.\Ura@Fk[$Uf
%[D<uu'coW_?PW>EF?!#%#b]7XnM4R/@R5W"2&QL*H6Q&9f48J(3ajl$EEE31Eu5A)djX\eog@(cD>&AP=D/%,4EE?t84A`+CJ5TU
%m=fg`QuS*$2AP<DeKm0[Wnup]'K<C@Y!o!9q2`cqPj><]#b<3#$_@';^F>-o!+CeG/mMcb'O.@9D;S3`YR]mQj:!!TM[G[.@>gE?
%2H&6G?'e/;bMkoPEK_uj36)DB)c5srr7lHDE^AQ>6SQ6:!K5UA#*pGU(oMF_dY+OAhEAkC+PC4^YsgU_T_I*JkedNp.Z"=p@o6!l
%mU.JQWO.e"KdKQl%%j;1T-[c?*e44pA7asJOK"+b2b6s44HEDU4&bZ<S$)'54`TehO-r'>;^A53qZ&B>8iAa-9T:di)gLPGaj)mc
%E"B.G%o6h6-m:Q1LEHT"n\%XoEY7X%5@q02km3/mNbikLNW-e?8QXpHkX*.R@2Q2g`chT^mQC.;a:_7a`X@=5^;DJd=XO^Q*EMa=
%Fmi[^h\goggGN.@,AKd>W@0qFB^cFj1OGEa:@*!]nW$]tNli(_4$:ag]#/On^5Q-6FI38a@->&drA/\ZUi_eJRe%+!A6N(UdEu+6
%eHT9]rK#FCHB^#u[Bf;YB9QUajBjV^LF_0,fJlt<lV':SG[8&*#]Cm7Ch?@t?J7IK_@hQb?l6Jm7;N:(S<(N`6]Qlgq4Kg6.-cdH
%:MFthS:JEi.`g^eSo;QVZp]$#4be4YP_DU^`Df1Njb;c_)CiS]r4hs>VFQdh\ahpLs+e5m&-QNqh]G?_8dbo^h:5ra=Ig5@2%=8N
%aI1#kBGU4.Qg[)cSK?aPSP^,%Q.6VuLWOuc:+,;%dEH:t9]=s!)=i(c(#-r-cYkj#V`@n7.@%J+[n=)ROg4+=>3$5FVmrN\2pEl^
%4o?j]gS^beQ;^p9"Ik'08;YiVPd[1Xaa5[eF^R<4MLT]Q)$Hf[j+Cu8YdGATjJda9,,.r8mWiRY$U^#KV'l_-Q,nma;c<++QUPc_
%3Ap)[@]jl\Fjm%'Xs.ogYR"Je&qu0B&gILeJhHk7%E`#8nn#`o+C$[;q6K3:+l1#dXP,KQoISN#QJ6,*)U<u6Lfi5f@K8f%)!%nt
%M\rl^2-.\qOB.HBWb8O$2k?F4nBOPZZrVpSnK:0lL/n$"N)j5*!pZ"naMgPU:hU6b>uCT_r(EPJf9KUZ#>f!84:Y$!.'fO2CE8&V
%&A3\ca(IOsTs!U;p&a])PiHkPeqKdeKYeKenD1t-DcG-bC'Akh\2rQAY9<RK9Km]-R#PEDCW#YC!RW=#4XGSD]CmX>p[rN:4Y-FW
%.#51(bYIjp1c?cK^S8SuZZQE^!_ICQYqa?9;!-_e$LMAn#=OQ(15<X>+7sAWjqHFQ6&,ih-IZ\EWMiZ4#=e.@&iqO(L]X!BP(R@D
%qoPjg&>US:p95[koon0p2ch\W^@l=4_Ins0O.[\QPn@pcq,%k3="@>FW#\NQ>%@rH4*C^cebJ*L-@j7g?3VK`OL&^k>8F;;c3ihl
%_0K^*+X$``D/h1_b^rhc#u5nC](SRZGT``/0dr\e:Y/3cTZ?Ap*d:Oc2+3/HfTYKhhAnd5G>!Wr,a,s*P(<?VddKcCP$eFE<(Ec&
%lp?r`WJDZ3rrmk*W"c=b[Pag1S\0Y$Sd\g;!(<fb#t!RYkUn4o[3WRUaO[Eu$en'q=CCH1#D?_kg5Y3L4?7a<K>ZQu)=31<f(=^*
%IbPNj3>FCgAaD(dNQW'.:RKNm]bZ_h,!*e:)D'--VrEV/"BCkNe]/8o%,N)DJ[lB$25%Z+8uI4*BX_G#$]R$W6d$+jdDuq;4G4E9
%PfaOJFXY4"Id!$ZEE]Y\U4fK624Y:ebUm!aIBOJX$G$Ja_m7?ND2V9DUgjWIh+\6>EN:S&$-$ngoY#d-"P`p'!^CF\T:J+u*A*s$
%jRo2%,F&)oQl3Y)L7uOab:@&EL_tZ?Q=ljJDJ?q0F5bWcomgL#4gIs.52BVT_-H`@ib\I`5=(GsldH^l5O_Eu3!04P5nkHo*W*&i
%U`H0sML-1/2+/sX<PP9Fn"hEpdlBpA-@**IDGMeR=h\Q>ZU2J7kn@00gq#=f4:k4BM?^uXpWOgH5[mYZE;q2-5n=`H;iR:QY3Z<1
%_NE=glOS910BNltrpH><o)._oj`NN8Bk/[JUn17Ti"=)*hIog%S($k^[70A+:5WUsELMG#9;2*\Z`8G#0GXDc_l\G1BIOT6k[O,D
%cVe:710>XlqJmXG5)%O9E\Kt5B*on?#1:^L"$l?<Lmj>Ea:.B$0cI?$63kR_^!'**6%rHCkQ>RVJVaO7dXiNPFF!'.ZkM?HKd%/+
%bb^f8O,C[0"MO%`d=?ud2Sg@$'.n%hn*rRr66kt9msX[!M8/oa6uLIYe!nN+K*r:.nhIt:98^EM:ddNML0dQHWsV:NO@6h@,?RN_
%'X4#gaTE;l,9n"H.jN*H&%b"$V?A2[qRT=n%j)m=;;W]L9,/Vh4n@TT8K!WFo6Pr0>u(BVjWo%a;g@1L-V'=9-s2Y/M::h^Qq.Jg
%1P*.%_U9R%BAr*+!ZG3;**,#_JYC\Je/WS0\,^qNrG"6R`dmX+FO'!h\2N,1KA,*IJVHuI-O?doP'b*9(dh=5l3=(sVmX!&n8*V#
%i";d1/D#hn+k@;\hmPfaf+C:T,\[@!1ap:O(d'G/4LR\[B?fLRl4kq,0a\i=0m45n&Ie''=hYD.@sp6+#__Epei/eKUOB!B5A"G*
%J\Ht^$%Bo_e2')c#i.t2R@O0Zdi36HMBCgPkn,1W0YpnJMK7cPN?goFFb=u_%]1,@f.jfG/>rE(;\HZs$T75i('c0,G3^A&7-<"c
%(!L9Zm%U)uK]f,'"@\a^HAmBfa;!)g"KC8Q2!9L>FY`3ECifTtBj@:9g.u";R*B4TpN=dBG^_AH(+X8hZ)X;08-kX[Ye)51M(Z7j
%s+(qkQVYl":'A3WdsD>L=##!kjr]1X)Xa*&\I"_]4/&F%CNIZQcH#f&-E&VZCHk7&S"O4&3H;A.Q%4:?ch3TuBt.^US(fSDW19?m
%T-6khC(23sUBtQ\dDakf([V\;?d=O,Ng/h?<8r0X5t14]+Uj&K1DMOjWAtYdLZ``)msmT8T?Gcsrikc"Pmgfb>G:l+'081a2Ra1V
%CqSZac?a!c(T7W2Ie)#ZmArk@]=4'm7-'R7Z/2t$Z`^B9=F<ZP]h?=0q(O;q2$d1Zigm1?:PoPu(G)4*Y1E7A$3YZ(nl1"?3^sj[
%S[5-6%P^hgk`44)@"8_r'Q7Zg1mP?j@B&Bk<i\ile(lV&F5(dfL[1uZ,Te7)F"!e4gBj]^:,3Cm0!hk!"D-,;Gjb:;^t<?8%ia$m
%dOUHMgH<9R'+rODR0CIk:iDhl(eDsjDTB#Dbn?p3M47?*_6[a1P[p$sB*j/@/[hU^.X\t)1d_R##3Q"rZnHdHq>DFVljEbI;$JE6
%qk/m/5K<>JUp^21I)C-/nC-XZ^g,o&a_(P1/([`X`<9G='UqBq.KYoArp8(Ha,f/]jupRSmqQCf?K##]SL'7O$92-!HI1?iU1U>J
%^al>oWcSGD!-J2Sc<PJq=!l:71IAiQp-X$I=:TI)\u]W.U*Ca[b&-j,!)I.V:T1<j]HC67GQnh.l+qITO02bNlBB`bW'CW:48$(^
%A3kbX-n&[=;Yp`Wmktg)Wc!2'Vj;mY44EiW0ASA;.2W6-=ASca;d<i6%m0R@m;gOe&g),DOj4L"'e`<hjrMBDR(/\)4,@n:$S'I<
%%Pr@[$>qdM#W,#<Se&^B-F=k7>6oeSduFLcPu%(BfmSh%J1$H.)VgA^U-JmXCpYpQOs^hiisR!k<1@Bcrgb\tXt-!I!KpPe,pdb6
%ADH_8%^Yc)f(ITYP'V\J4mr$W[T736QO12t-u?u5UgO>#A0&OV,HI6b.Yt?P&?a-3)W_PFqBUSSaA0,XAd\8P9&2o@H?Ir'1q)q*
%@/hs!2D\%T0h<,(WfRm>5m%HZo7e/`2-@=4?ph`2`6t=XKVbr(/5Dh+r'ga:nR3Kmq&K<ajaQ$RH>S<iC/;2('lV\@FRp\.1Deci
%5eVEfi(L&3as-Tq&QOBU1dra&(2cJ#=,,uD9g6HHSp+Q5C<W9>]]m]-o?$#"FF7GV]2dGVN'5&Y166fmM,hRV@OP^_6d64GLu((U
%<V4"lXqR1&*p<GY2]Y@UA/HgPDS?<PWXtOq":6&IY-7R2.+31XRDFGnl;?RC;NgD$$hQaX.nLQ2;3]7G[KkN-K0UTr/OX"f(I4eF
%`5J`*]9q*7Z[UeR?;<,T=]X?UU4N.H$r&B1DZYi@5ZYk*fPA's.%-Rs%Ie!ue-mbZJ,uL:+p4p^#m6!Z\^.l@H$)f:q.`gM^4",W
%-i#ThO`up<egk_Bd[T%T\>58].o?[>h+f[&)kA3SFl].E*fkH8/iAKYo)('u*<\u!Mg>_o7,Do9=N#V1A5$WWb[ZdBA#uG9Vns?i
%B?Gat4ECsIg.@E<HA+,L,FI[m?WHbR0JpdI[;FV(?9-`hX&(]2aq\\lK5mg@2k?4.%7W%-P33Lt#(q(UF:;/4"@tTF"Q;sGS>/>#
%'+1n!AlDl%0-7d#/-r/JRX/4P46kbLe4]"(0]^E+=Sn7M%'04WB0H0Haggb,qJ9#r&[WN/$jEn0Mkb'G,l?SsnK\0(m]`Q)VKQ40
%9W/hB(j"ui9"[V^p^BoDR"7pb_@M(bAQWN?S`!dt>7`oRdgmLjJHa+/q'U5\DWM!qn!m5$Q,6-"i1Z*7*MAt@k2.'B:"=t1bB^d!
%G>]Y:J1AMK4/qj^G^ro9WRmD@5fA;C?A.0L=!DMjA@W:Onm7J>:p%]AUPs`f=BeDm)=kaO<t8)mJuT0m)S!Qo!r1RD([3DU-"%52
%9\9XF"S4:D5r=!#=Z,B[HG8Y1Z\Bd>s/o=KDbYVRZ\'44G&>JT4p$Cj-])'_[B^J[]&un-*-9&oY=FtG%\/(`K\5de6Z*&J.nrPu
%U-oK0Q_8-S/auDq7ThMU](#YI?I.QZfiJ\CTD0-("/aO-O0'TQAsAPQ[f(p/;3CL-S?Qj5SBp(e\'^:[=")uUKUun?7X7(CdUq(r
%RVG-L5f$1;Y;O\Z$oDlJ(p(l+:QU2I0,%hb]+oDBU6%(*IFn-<rA^0*dub01IWt:[012Yi^eeU*-'jn[-_ttHK8NNLYkRoPK4AG-
%o4.PWZZj*hqOQ(e]etfReZ(5jVJW)1OHS&;f1Wr2>MjG,KDai'mK^"%)l)AXT#%CM.CO1/`H'4>S*Phb7C%Hr*KIJ8`3NY<L//=n
%\b8>\0luMBp20e=hY'eI/QYXBVa\!Ea*!%=>Ss.V9;qg!%YHbaU1uE$pDrQ8%lphpgZ3\^8fleBc`"A_oWUWDdQLS-[=s$NC>nJL
%^oLq25)0Dc@*uV$F`o5:;1.kBf\\4/M4ZAS09^D;&d@,nLuDilb4PNbnW?[r=&..+M!lhsnL`bgUXWFI_hPd<UWtLU7\*i3<?J'`
%!pOTdMMgDB4g8]'ZTK+0D3fBdV9[e2p$tdOlKj&0qWpI+$LIgpX`V3b6@)]k)K"s8XO&S0>FJnG?t]K,$LM,m]qn%7RH]#XKBKDa
%hA+c1'O%G5i8`]EZif,6Zo(!$B5jo_?9m*XmL&>eTtNbg*XZNAc]XT7=(m)S$>h>M*3iHDK7[\YjpGDXEC(0Te6=ZT*&]D8UJhQX
%WL-'05N4NV,j/!n%afjr8'W8cm#lkf.nD[RVVjZ40'0f[.@3;ma,9Dni.;7*51cphRF"Mn9eG_,GJSE]i*n,i"D6Emf3N@O"kR>Y
%N0iae)*m`5*]+uLl52(>&UHEb2Fro%TH*D+4Dk,LIca!.%aUq'7mmXB"&Q""YtqbVH%9]O[VG)qWi1oU=Ei-b0M0EV&JknF*on1=
%+t43=1K[DANuHD(4=Vi<l?@eifEgDI<#6^u,g)>cI+FqWI6j/N.bXC#Q6&Vn];#-M3YrgSi4smYh<8i(/L+^I.Y=`%M0]O@$(V?Q
%;je2td.:E0.i58@,Gm#"<g8Mm4+!,<!NLl[7a`0;Q4`HA,Ko4%=S0:E'gk<h1J2[o,"[0<H-,Pd2@WMqJtg8f_@V*U/.Q(YMnQCB
%irG3m3b!b'/M)Lmam]FdJ\(0q;.tjSd6FF=7"]^cr-8.u8Bh.Fe'=]bI-b*3YZ1`a$AIXa%_naKLhme4d':0fY#B]ZQh]5pnuP:+
%i0jg3o]6L);!)IG;hXIo7;ibWA@!q]B/r%d8MYm**I"fX@mnW9GJ0H;[@2MP:Ja:j*,!a`7tq[dOa#Bua!<R6"R7/(.I5^?M2iA*
%@9[cH>!l>JX0FFrL`F*hac[t,pKSE=jJ!@-+/9AM3SAq',9f^8GtSQYY/Me,jlF+e]OY-FoO`Y2\:Ele6S&Khk-2m$6ZcR@P!&H.
%C1qr%(1Sm*<#)a\j*[7ldKguds0+rN5:cQG,Or[5L<N)^J_C?1OcUd<!)U.M#1!kb;uDLoJ:\">A?ZrFo""-N<b`u=>K46BC)Y`A
%?*Z8>(;UV,RKNj^\3SjgA@@b.D@6f[9#a*t@F-Do&Mk[15pH]qbdL-ZXf_0&*",[6*1/6Mbo1RnD0a>:cI^-uZD*^UjpE+e.-U2@
%\\Vad/BNg'(KN'e]qb+OODR'Z$-8dtAJNe::m(mQ?/#E,?mJ:8Tu;'[h\T4t5j1pSm&6CMoEH*_(rGo)aNW#5#"8Y6V[(_tD@<9@
%.P,,W3oa'pQrKuW;J`-6/-a\!GXV6@VfcW(N>'-q$oWO`pQ!>&6We0j[Q#7#L^]O81sp;rco,;45<+uY.Jb/!"'A*@3g<,H>fM>)
%17@at;$3/$VX.>+d.U99OI$rV'kI_B:YM45A8i]Y$8]W5&^Xgj?TA\['k:;Jo8OJSK`omCV+if0gQTE/9IS+'9cDI+,Im]B`C6[A
%40fJ,d38iYD5pct9K"&2BBZtc6*!6DJ&;rP,SB"(ga#F6k6=SP$^jk?V-K6"mm%.66-('#3[7^jT<hlW!*)QQ9Fui&o,udH$$1^E
%5e>11n$O^#2JI^g7DR`qM\>?L6qSHnN9$BP*$sg$[lm6@P4h=Xbe!dkLT*=D`Gi\1dG>Hc@G6Iu[IZRq3E\h^,@-PA0"`or9#kR8
%aG=oI-tP,N&-K`@M/AZE,-WLWOG)K!Ac'&$8HB]V6'-#nNS6Ar65IrXMdZkF5IEqg-s9VKmTa*@fn4fCb`,"A]bDH!6.uZD?7TSV
%Z!ELM)$*-)SI"?=[5b!R(RU8gT^"gI7]7G[I-X9NE2;_%or,<HdkI6]/@&ecaA=UF[V+@BCCB$nl4K+W&cBaF/ka>"igIUX/P9W(
%"=kFE1qseDT<ShkDXNMQjpBmZC@3#SGP^M1$3];Yo#&8MBL@UPQ@R]CmlWqt&Ec]K04B4KCOjt?L_X8=OU4@oI6c3-GXt8=A3=Y,
%2PQ9A"c6*nM"5ea>jSQ0Y$A?M>2BS&4'pZ%UH1D8*&Q+d*g_OPi5L/*7Dd'&dJcQ_:Id%rb"7B`=-dE,Gon/"jmNsh<K\hIQY;@D
%ZoCSb&C3-+W>Oba"!NRCePqD@5+0OE%m?rWEMtraLkT7NO&>?Ojm;!k!^dk<PtONBK0109=Gd^!c=6s)$Qpd6hlt3BURZLd[>Ak(
%$"uo_%O*UHf5K@^VSnUu%70Os,b86]IRF:i-D#`7`CIK#W)*;DemRlQmqZ3e'u\K(L(9)`SSD,b"4],<QpB&>LkPl=&0We]6-,qU
%1P`KogF@A;*($a8&=e%C>@MO>m-Lqa>Od*eSo<tR!oQICS-tNDM6e_!:8QRVQj`CAA0$$afR\]dKao/Nbpi]D;R=I@0nKM1l*oH&
%5U0t:KfUc8"DaY?#XS]VdXVThCZ2`gB2Vgg>fM,!V^UN]=]%?Mm(*^C\Y2tP:'Ki(2Y3fh-787>XbOED*P1m[1Y(%^MEj_!`gU;>
%PRZVHHWa1G[Elcp*13HGM\2^WFMpGW1^V,slG4`N.3k;gf+\'E37331I?2%`&=t+HY._Z)78#+>`_>$>%Pec\a?5DfKascWOO@*9
%gI't'RL_PWRlQd!m_7hfB9tlk.B2CqHjHkGI":hdF>gW19o@D9?upRU6-Q[?o9S!UlrR7K`9*7%1f#SY3O)hJ8JT1^hJ#kjKuDGr
%l]V[oG^3`K8_n[:9o$!UeFN,6,GprQUXlW&klBU&3Ot8Z7\N0)*;@(dRj+L)?gp,b5n%Tmobmm>(68JS@$=np`W%uK<J2LCNHO$)
%q=.K$"pqU^A$aHVllF-25-E/1lu3K8;AAtR"O@-k<t*;?3Z<Bn7StAob<p>p@#\isQ7S*3C6N@)@0S8ndW,$Ka'4#kO4-p#P"9"t
%b#&mM[E,<WOpeB\Wc:kC9p='W!YL>7`daD+eu$DUkQt&pNK8[Yp'Ge/hCGCgqV]NCee<<7i\3P9P+ghe=M(lf]A`USSN1IM&6."d
%DQ,(M_.^^@C6ZC;U>\[LH/L)+.$_*F7s`/p>i2+k:o_r&>VhQ929D9G`K?!T:R)8?=;2+b1SQ!k',F\C@'+Vmfa;/=-@#\o'ZC])
%9#(M0F='>7RaC]>o<Bl[gYZ:0FqGeplOU.WdXe[V_otrqA:`#Q_0`J\LFnBXW]Y9g9*t:U/u!CpW3I$hJHhqV6nC%bCEK)c\@dS<
%YMDTrpTHMl$g/brSbKFH&5C71c*=IMc/?BD;p-'D:aaMY:+rVPjjR"Vo[RDGVm8lEA'J`"a<cje>kO[/G5HX@$+:BEJ9SJ.Pi7=V
%i9:7gb_sKjep6UK"YMl'TlLl.SM6ucj(ZWR;<!2qY[P!mBV.AA]*PiYW0"(RY#C8&3d2to:8tPkk'=FsmsD#Oc7J0k6/o.ulPH7_
%/mP&Dp7gQC8[T']U\YrQa7#&3%Ij`:bM&C*4U@$-p%abWKW:n,'to,Xm=:(V2k]p+=Y$lDT;QHZ6IbVE)c[7,!en$0J*XbcmIL3&
%'GWa(^@81dE/IIo+S_]3=\j%[$>"K#Uj+$uPV$K%AoR"]TSA;eTMj0?k/"K\M2b_ra;/(U4`C3'l\ssG878,-*V<R$in7)Jfk5]i
%M[tT?nk,2k^MM8BDujPAlD^"Od<X0cgO6gM1$d^hICBDNC]mg@kgX(XWTM$MnqsR</JLR\r\?N<3,Dcccu1?'kiS]L*,-$<7IY-1
%O.+a"7#1>^_N1->Kjssdif?D-&,ABbkkg<&qV0'V8TR][^)?YpF'(^8U^Nff1`9F:&6g@#7oTOVOBsgf_H)hQImJ_W,1mu%m'V,*
%KI4@6Ls(.0KGjD=QTB5TKQg#_^*V`f?;EZj,IGH)[o.2L;=2l3(co;7.dq]bS`Jd5X06<bD]\-"rc\,E-gS7^T7?mQJ,/?Ts7&nb
%0RiW>(Oq&j^),l<HXEZFAel/$1L:nnhHiV5=ZC9k7^FeO%oNTN=P<Co"m>mT?;(#3]BIc1ZW;##CIFARP81QYS,V@^eX`kQ'qK]"
%g?Pee%@T+.JPEga^eOh?;0OqK".]79g?+Cl*#E)S=lWZ#\U1TA5gb"%ep1"p]kss>EWl)63J+YFW[\Wd+mr)Fp3G.R7\"$ag@ZuI
%lZ[Q(Q4(S`0;*^lYg__rQ[Gbr=l,B:;_VYO@,VdLea,K29YkG4\)*##oiC#?g>s'=3i<6dHPp,$I+%/Z]Bg5fYj(_9c(,7#jNX%=
%[EBq7hHG/s."0tEG_P:_J^jC0^J*k>iKG%l[+I>E+h43[6'.Z[n`XQ*OVL=03B*0K(Ljr]p?)suXhHi)?X8b(?@I[Y=]j'c^oh#Q
%>la%j3,A1FZS8@TS_/,NoEqbW6`^iIlPI@9cY%+O\BDD)aR6F].m!>V5"/iG7<%\e=fXLL2.Aac3UQKs:*"GI"9/E^p\LuAg\/5C
%3h<R&me)79*K7M%5@*Le3;*-\eXQ:/$YrQMq2@8<LgG>ZJDeuK6_#IQl.H==j+k<+hm_Nr&JZ1m1!d[h:?,n\g?Hh_i%tc'Xkn:e
%`a1-(gZoS[44rU3;`ZO^F0Enn]lC6H.U\e=H:=_AqEa>Z&'hjPC\>\FUae3/gZo0:3_6:@9A%bWo/=@f%,"&I8W8%#N9aNM+?l&&
%^5U?\-mq=.@XIJ]6ufIq$6k[-;QNr:$7Oqr;3m-,ofb:mAeh?Ie1(K,KO>qM+u18FM3J3!K<ThGUK37R?uM+O%Z^&]9kN(K1F'.[
%=J=FZ@0<@K./k8LhO\:hm^$BH=C+ZS;$MPPg*XGkO<V@ohN?C;6t@Y3=-El?<P)^R_o+ru=tD1N\SBjZnrJpoJr/kTY?:M"+WE3E
%m,]:)Kt8!)FGm5-'nV%u$mC:Q,A-TA@q+:.ZQ&GN!lOkrqN;\Jeilu3BZJQaAli)uHZ[Kb8.K-q4tXS(Yi\b];'k?FN^TP],+PM^
%,\)H^2+m,0Q=?u\6Lk>d4K>\Qg.H(MECqk*bfq\6N;h$=M+jp<AmH@<_MZ/#ch*)Q9Vqt9oUWN[O0!q8O\^c!^<G=ZB'&\u?"I_>
%]VNW%!7\]GTYX%lTaQGIcs)kG63^pD7]G)*.IuA;.6T>A[9a\ndcZ1$mhMP-%bV.`"i6(R!:EPMW)P-5Us4O/a*qF3E'c-n?/e;S
%B7)qq*S/J5\$_^M"o3`aV?o6rEC(1?1b!/4Y\dej?!I)Ymdb8;Vp\VZHZM:OC66EdH.ft!/KW'T7/O^$nJFZ@^W?:)0ClQjI;gAf
%JJJkS;M.I\JYElK8qb/\DGPm#H76YRY#mdRMSS6_3tVh?]iL2"'Q7g"ZS73%?/^(a'qWGfG![O9H`\>j(5:=f'DY.7"!KMD$(E!Z
%1&fh17F+p$R8*9Vl9.aj,%^81;X^$dm!@q[-r2t3rXm:WPqjilK'Bp-lB*3VPoYi6!A=,R`5-^"1o%RbEX"m,qIL`Jq)EIoDQ+9X
%6=Jb<W8NW73*etO5].")*b@)-V*oVOHsi%J"0)q1gC`"cIDi+(2+&lh4a@h7V66>LA15%jAZf.9ed$.RU23`maX';m.jofpkOjf!
%i'keM8f*+,!K.;a<%\?P!*_qXc3t('&TQFn/g*g8o$)$R'j(*R(Gn<$C*[dU'O6eHob-NI7D1PS1.\0M"Wg,";M.<\dN!R03L"o'
%dRRkc:>%,[n+cDh@TV;"B^bebGZ2U$fP!gpA)#EA/>!Y4B^?.C'/O-u$kD;DnLI89@mUH!E`k1Qg:.h'?Vr;K;+s"aC/GJO2%]n)
%SVkh12PZpnjhP\>Xk0ckbQUU6V\MXY@+Fl/[gDjt!I8^mA[#1'33*L')`EDA<Jj:D23'2Z<B(#FP2#F0%h0Xn1&qZ?L*-U'.6`Z*
%m*MB$h:bP#&Kq0?Q3@7(2dRYTF0Khd9JpYd_4FKMXV<,3UD0kNrP^=AmSWX<N0eK>_H(C58@(spVP%NbgJbcl'pSI`aBt"=;cY.g
%MZ*7BQe<aq=*q@n/\S5H1>3k!4_SOPm0U1Sd[qO;Onh;)*!OD=!?X>91*)g+R,d,?aAiD5JWb#/-u%jm4,01A(^1'_U4A[p[Xu/W
%)+g&qcTkX5%?S]B2s8mM&L9Y<8>ua:enlUfARM'EYN'sQ!VCrFb"$bW2mBHg8\PR\7M<#n8LLMcO(\oAZ%*$J_aXBSb4XC0^5@uk
%:9ftM^Bem9YnF#I;Ef@OioH-PT]@ef>f)qU_KA,#BqLji=o!&7_&Qep&1r"p<cIU#=kq.RCDq:#=:ZGZ(6/X"NN*0i./DXAE]!=>
%2Cl%IUU%*SOJXdt^3;S[a`]]M5U2EJ,Lb--aQP\c:sMZPDbC6:*e9]E?Y"EDin\i[`0a69#/_/u0dQk[L'9ED;7q'3SqXqnE%O"+
%5`6bNem.RC$/"u.P4a7-//FI!@OTNNfUrf>i0s-b3_Dkl-MHCj_YQj7P&)J$p5YWjoSV_&b=NGo#F$.gkmHPoPu`ZGh5,OT+R(R.
%:ctg-,TTo5V;h>2%`h1!Q%DoCD>aW6,(SJE$'J3T6g/ZueOQ,Z+Y^=OCF$VPW=^=ibBF:0c8hIBb(OQ'32?h*V)\]SWt6VmZDb)B
%1kC\Y[e#R]C;M91:0C4,ORt#'kX;.*T=$Y/Jl%NH<'iJ8+-P(QOKGD[MG.sefd<[[[h!$a+HR?nrJ2O4Lc?^7dMR>$?ro@'00'rA
%c7_LYq+-0"P6K#e^gOrjEV31Nk`aj(85n,Uf)rgb#"Yd4;!u<rJ@>'o.\2B&%8^RnG[uA7Hnpp@p)Int`@,<oZ]r]7WP/GU-MB!f
%Jr`4=qiTBo`OeL%gCe0]HMb%Vp70jf8+hNd7>(kr"Au"&+hXL5b&9t0(!R&I$S\mcZX"oX.Le,t*eJ]hd3,/U'CVk76d*DYd++B8
%A0cFuI?*kW\ZBh]m=Za_g[^,(9ojF,2k-WQ2i0NX6o9#RV\Op(F;3QA1MT`tM+nt[SoS-'KBb5d_j.r'SD_[$7Dsep5mi/l'80.K
%jWTta4Hq$-!8d-S-T$qA_fSVkTS.%2PjHb]j96'H6Y-;G+LNkB;73)?Vb[upL5qS0BG\a3mH&UAF3[LdGhAQk\`224PDh.FOa]Xe
%R@X-1\8eGg:f2/o7$C^161@m3HM\JSb<"5ip%EG5%LPXsL/;^LZp^h$6Zb4DQSOk<m2$$qU-'2W>"::m#]B(`"dO=nDM\%!8a.59
%mc5AGJ`1*'0Q>Q`HE>VOe)Ns1F$dp#*Hn?#EMAr"rfY<pM.1@aApQ`4!I%Vm#$HgMqlqe$HHe+@b1ift,YQIoK)V)U.-NZ$"W\(M
%.d5;R>\DCD0'd7cLX&olkl$O!%eN.XGO_D^%\_EQmfJ]C)RVClZ@fNjl4o#\$OjKo*)m';YU3F).]fQb9?CX)<sBDY/01]/p,gFH
%ZSY^^(AM<4TM3PP\&@rFdOpV>1_=CTfQHb_<)C;$d"'0acQEo5__c5/CZKK&+>BXB:(Idd-r4%p\K&K''`\gH>:cH8(XF`#26sn"
%&:hcn4W2$I`Wh2V%^R+3FpOq:8>ZcX91he)"c=7ubu&+oVsL*A.GE*ikVY4Zb"g8>^f4U<U6mpKHlJk@9Y/Q0gGo\e*n@AaJG16n
%:_jC`9#-mHND"kg-<!0)l[p>DM7ids-M.N`(CDu3mrQmRf<UBQ=0qLCK/P/rs(KM;X#G("XSNODX?M]s[9*D2OmP\k*Sc@IP5L[(
%H05&Uo=)15qi"dEo35q9<AB*umLeHe=9_(4fsi%Sd%L9Y0eM$k%Mu#.j8nNqj-XC!rC/]n@k><$%em(tC#`e<$m('O.=Y_T5sO>7
%,@)<H^H>(M8-qiS#)ZO7bU(Pb,JtG&kt8>+H`<!E=4&upF!P.WnHC]K><*BZbe$V<!cd?jWRWn@^r<-gB5J:p<e?%'q=95iPb_eA
%5aoc_>CM@2?qR"o$Qb%>g:fFt2NHkie3,@Jm_0Nj!$jeb4PJ_/VtO5i"jKX&/X$E1k/og06qLfE^'9ZkfBMkNG.,a?O3p1Xs)>H0
%f0JtG?5DLX:sU8n"XR^'.HFV'L(M!?4GW:?+kIHD3+jXuC"[#Nnc1G*4A#&1`XmoHVJ4*73!:O@T(0]2CgXeb-_LIcKM(E?+1A5J
%q1Mr?(_aL?.e<k!AG0PA+g%Ir$Y_KFd"?FtHkM)V(HH;,fDSXF@)%7\LCkL(]eqR0-Tf^fZR\/AE0m`fYOKs\bnZbGrKou@%3l8h
%9NN3V)>m^Qs3?2XSgRY!XZh1;<b4H6(?S-6(Sf/9Mn(f6'$n,O`BCc@kMZIOAFomU,_R3]mqG)<I]dsYKeNpf-=""ii.6bd@2Lit
%\5aCU"#COZ(.=$*DPDCA!^^]od.H(400p4q14e'gc2gNL)@"r=iJ(#^TWm@\TLTZ@@2OG"gkclGopDic$gj=Yo=T$Jk;FPQ7GU4e
%n7+'1/sjn=*gn7hmNh(e#r<\l_hWEdWoh+j=m1Fa9dh-qe(#+1+*P*Mbm=6?%(%mG'f*j>?PYK^X+nJi'7kY('s+Nc$`5l(OFCnp
%YE)Ki*h&*/nDK@^gZ$90f6#IjJ@@B-<!^oS^IX>uRN;d4]Z=hL7$d_GWu6'\g)hd)@LuHZrAAT53R`cYj6h7(HN\do)5ZH?o<G%5
%Hr/Y[8NY0%%no@hBZp]V>3eW4]$A@ACL.I6]9[c\1]$?H<iIo[n"s5&6pl0e<Ou)=1RD8;bR(V$40.PJ\`kNN"FcthRfcY`bhlgV
%A'd,>,LAp%e!aCPTh,]l_Tm6E5>l9LmLJ?(>plljLGV,8Q3S!qR:^L=Q.CY<_H?NlmV@l3l%@`QZ$S2t&om4@ebfS$*k$5rd+%"#
%Wn#oE$qS<kd[uAt_ZE9AXi'(qF$i5\5ho_SP@C3]8$aSI:HPaD^,taG8F#Idp8Vf*?ZZWV#3g]%PE,YHJJS]A-\%P6enjPPg0a=r
%H*RSU@f.+V/5Eif%XiA@Ga(q;d)6s7Q$-5d02kqqH7,E!^)=<W:eoDR*:];7$5X)KM#_l`q_D\%8G(PQUi$HThok'W,CG_lOjGMT
%TYU<;aNb!tc8J$`.V!*iDqh^Ba//6b4gOI_:?EEDD8kG7i3OqkbMoDM_,nudKA2K`OI_Bu_bHjF:I8m&HYB"moC10O8'M-uZT.%M
%dI.G]B\qEi%T>ml/dUcRBJ(E3`9RifRu.WK>(%bF/m.Je]paO%N=7E0U(Ya4,Gq[RrrpX+5dJ/'B+sR:FG$k>D,)`=2C9:O_=t*W
%OEg50n=OFuPMi"1mLfg$1!@jc"F5lT68&TU*/X$]X%-I9_R\;8&3,arYICs4p1C#:JO-J%O.i'k"kcQt6]"g;/s,LmZ\s0:32cpZ
%bLkj!)$'9oq(aKBUM+;hoi#,5d^t:f1'j'!RDA!TltndRU>gBf4NfAjmY/&Uj<?t40b[;!LhdaAo:tZ'TR;q)VZ:YRiQ:M@mS2/p
%-A&H%\sH='@qus%oSKD$WqI6G@nY&S@0<Gt!_Bu;jH4B,4R@1dq4kjDG&C,_UcUHI+jX4AdtLIV]?f$ZSC+LE*TY]AbS/:'\\lU?
%pU"15/'OK:*9d0>:+&et=7C@*]S?J$Fkr#7"O,9=(nRY;NtI8pgtL$/a)\;&i`M8Q52WuK3P3Pp+qF5YlMW97!6EpM]-R+j$:+8D
%L38/3]cHG)=Ka,<qFU"/qIW^Cc9OQNp1rjJjJAVh@H49EO+TTR"M"@.kDKuVBCl6OkLV.E\+s%T8bN$;T@XT8S`sJm![[TA-:T#i
%B[47Q.O]F?.@=R?T8,Xuf+)m-o-1fKYr;*Ib;6Xb9:2!@ZWGp?nnX68D]5d:?98d+3+CoW#R1\@=oX-6$&(0[VhTjNH5p7%QYR`r
%k[B+l;%fng[$DI3HIRNuDY%)r=M;!YA=h%`"8+EU>oDrVp)bocO'<=rV+0da^LVG-B079Mhg>H(gIRYTm^Mjj%1McOYoN_o8/OUV
%.nmQ6,RjU[5Q('5VrMpq!q^#.V")$\1]V_)bh73)2":8>qbM]$ro]nL=6hMP%9t])raXjZ"g\E9pnG5h*P`CK:WCfsW*9&JSV'67
%IF&H[5KPW):&RbmG-aA@pT<XVDKEhcX=2l_/5!HF_&;OtZ:Cj8FGSN.(@<l%HHD8u;f;m4iM-,)4Y"1+^qF>CIq<npS#t<oZM8b>
%dJo^Qp-kCU06FDRVd$-IW=JZ(8CP.>ia+?:mUIX0)b\bnAlHA>>cgfqK%%n(f,9>/_\M#]g7IR#U-PE\3W4UP'e#k]2@GD3od0b9
%Ga=7sL8+Scr<iN,4`8ZoK>jaT5aRK(@I?jF5&>T&d:7BE'GYKNBOHPP359!YeirMpa"?##35;7b`6LJo\59cFA;#g"NkW$Ie'g&+
%M'\C*G;_GqpuRlTX>$#_GA1YraAu28@_(tL@7B-M@@m=8M^Ba1B/m_#k[>27.*:t/X3TdVg/)t>_i-3d5OA+.eXN7JBctbd$#3QI
%)(?&DaRWlGQuapRPZb7c[@<-g'JO'd[-^f>n?s=B4CWtSLRj'-^kEJ3GW"p=%so=CFhC8^Zc0F)/l^O3CeKG\ODt)MJ/+;qBTsCk
%#IA^uXD+;o`PLcVnu-F#EWS&aK,7EA$qglDDOAm*@&P&Dlt\1i.4SDn6Z&]Dd)1eh\/_T-o'W/ss*3,s:OPhmlcs*\<3I1L="g]O
%V+A3chV<;.TOi-I*)GKD0ej1Bb5uqme"?rQRC3:T:(U$/_c*n&SkRmh2^<96L"REq9rG++&YhmQc+<;KVOIK34>8+!D?.RPm'bQp
%Zb-odct$INXXLMhE)"C/(ROor)/U>C&#ol/g"1Zj6jIdI4#4^OAQ8cA.!Yf^]Ld;Ofl>iq.>b(XbSFZ$%LS\!#Z?n]lAn\RaK#0T
%eq3.YT$rYM>.JklP0'&Vc52(b-K+#K_[Bbi)99ZD%#_J5KM5*G%XU4Q3F/`%P/GA]>@nE[`CS_uHJY4X-,dAHXt4bmJ/iC($'erK
%^'Onu^n>]fDe['"2aO>T^S8Wj5j7IQgqWcEFelb-^Z+f!T/B^uqBS+n][m\3Llk!gcbJEZW5d)48Z*2s6s*MMjf!uhbaYH_CO;*N
%81YGZ&CJVEbFKUa;-rmS(a[a.OIhE;5gR%aF0$%=.R&[I*=%Isd`!-_;<?K\9.<J/6,<Ih<C&;]j5mq=YiN?cHC\0&/7uPK+PqC-
%I\uDBZed^#\8kI=:Ja/l_OGp0@'%1Tj>-.@+rG_`b2t+g(+#?Cp(?iqPoUAJS^J<_[.:Z7/g<f]M>9i*56Y2%7A^$?fgX:UITB,X
%dbp/^XP'r?W5"4c?$&rKgJCOfYjT`QD2%LSn)O"q-fI*qE#65lmD0BOk,WAlNuQU5<rP';J/B]e.7@ZH:/LiS?M/\hhXm/(Wf7Pm
%N([MW=H93K"E;1bR2h!XgkYAMDP3'&/\W,pF+'+MJd`@OgB68Q>O.uI?5ABn%nCKj/ngbRYfCb?b-HeK\'LLk[G(^NdFnZ5VY3Rj
%M2+Nh4]csoP>9\2N)_hoDd3tREA(NQ8JDop8uLIFp2[PT0K1_`Fb+eAU&LkZ'7-$C>QM0sl!a1TI<>,GVBu]=$;#!Y>A&U<iF:32
%I\5hn0o#]b[Ug:FHs#g!GP_8YEJuCdP<sr3A)'SP(2c/';?Jm@+=7P`Xk^k)gSM1@jJNii*8d*jJub-PAK;1ulEip!FBd?1jLm0/
%T.c4MIstG*^ZMcPTps>&^Uo.oKjtl9aUDR4B;_<-EXKmY%OF/:WmeYMDs%#iin1MY'&2V/bsO7mV5!aq$*Ba.n$kdu_q\4`K$\&J
%]Kr<%MKlsC4p*#GkQ@D>6]_(QM%k]nj*nqEXY3hNhA`o5TVL\j/a?mu9eSdJ#r3m+h@+)Pa+:P8AVf[4l_H*c3Le'Y*nF9eLhLb%
%c^@UAF6Ab5'YSPBV_Q+rV0O!GJ@8B1d-YIL+(+/UIE;hq1Y])iqRui"*oSBQc<gn31t_c(c4"C@`IVpAde``"A]m`lB(<Re[p*\V
%!EtAXC_jWlI:"l\Ef*=s8&:H'__P$8i(T]g_@5\]+"'ED6"Y:!VlGnY0ZQ_$b+5\f8bt9k&p('i;HPn8*N%'-&f\q"e:25s$l7'G
%>?.Dp,"$=p3YL[!(8FeTV]3ZTLQJKdkTG&,)Z#hcFm&pQhOV;fQNRuU.7<o6PToI_Gs]qmO:p(O!`ZEJ116le,C@lJegVgSFTL$8
%Aq;a:UJ9MHJ^>P&FjpOm-bVJj"/)WB!UfD:m.KQX7Tf1`ZmX(-.PR\Zcn%YV("ET2Rd?1+QM_/F,#*M(.T$?+71k;N.'HS(iASBF
%o&c[kh:e>![2(9ML_nXj)<bL]N]nM-a)eajHH^Qu2DsVG(2J&CL!guAZ/D,'#t;$!Ei!7.Xe@=nQs835k8%q_]:)i,GRsXT>JHZ0
%ne?[$cJ"TlX%]tUe<dRsI<9AcVI\$Ec,he:+@@cehPTNZk[s[r99V*pA>8hGWJ/rppWf+OrU_a]h+[k(QYH;o^.^-FUJhQ0lh?]:
%)eU*-;P;<J;uJVL_ZXZE%ucjqY?&]H41UcJG4BZ5[%b(6b+1hDD.+Ob4L[s^qqrHmb2J_a:IhlL#r1&gVir1iUJhQha6ceu-68u3
%\V^lOMMsL?k\0G(S6/&Z9e*235@$?fCK$4^XN*/NIe<q#^7qEjYS-!^j4,OkIX2;o!tZ$GSH1Z+Ae5DP4-Y>J*]E6GpgJ(t[rQWK
%8qfpKS>pOB&4q6R(%,5mpafk]YbJT]_`]9#21q[?i)'^UkR)=p_>J4aoJ!&(5'BdrS)\UoPU3B&H8/B*2X%C'G``QK;sj]J=ublW
%qq@WhJ+9fY''4j6>VIGggL=d.0+r0k-YCqA0R@#^.f8ea>9o3GjhX$9Qi/i%[XK5BgE.$]!hmm>IUn/J`.FY?aDEM;64[;MW7\pp
%gVQ.c[dX_43\TXB?P[bGc%7R`D#@<;>s%8D[+ki@?-p7m6.\[0hB(/>nK-3g\"Y,_U+/ZBZ]Z@b_FmIlOIEEoRe;7?jkMD>P/ob<
%lo5,JAR%HAru35,e(8U2%@T`*7cHQV<BP`[jlocgpOugdO96fXbl^EojoW,?dk`,9*RMjXk+L2\o--"9kq91M&886Z1&"cJ0IIJ9
%i[nOG3*q*,rJ89I46FdprPYTiDSMVT(hoo%(jIDFgAd)LZ$"^7S_Ibhn..I\7_Qbjd>CJ$Zl(.%YTc24^_ee'<=1s8+JP6Zp<]Xe
%_d9D$erb6!gAi:F[YWdhAt"YNDSF8]M+aRfZ%C>h5;[dR%'OqXflZsUo,V$?a90L$Z.ZeQERb5iK>aAAg]MBHb-Fg'Y/][-5rZtU
%[DKF2.CrE_#59m,*9S-rdE#b2mI+=3_Sc*pTnlgegshkg,SXJOEDuaPA0NL@^OBqQ-/r2SY5&uo3!uHs1\O5d"dJ),$9X\dg*Lu#
%EnG=-0'_l!mUi1'@5E^:\I6$]Y^;l9f7$IqoF0kG;CgD.Jk/"'176r.4<NQQ,D1;Es+"^KaM7m<(K%o?n;_\n_5PT4^uGjC-itho
%$YPcmMM]i#i?<cn:(2CMqTp:C<]>[^M?X.hs(@Sja-MCXb=blLF9X<LkgJq[#&OQj#dupu0*-c(#UM^:]icJb\Fb/7dGcq"p$lV5
%Q?SkDiE)f,q&%,,gYWi;;8'a+<,f@Q^cD7W;o-J^]^&"QnniXo/F.bR2\A9%%,K2dK:+k*<p]9n3?n*QM\JW>VLSA1BQlX%s2-]9
%p'[K/`J<Efm/2Ym'*sJ(euCs[+O]82Vc'2b3Z\8mD"J"j>`"So+H<OU"HJ`C*B_JaSc^E=4.$lc<9j+-#oXgMHOIFWq7&`,-0IXC
%=PlEa5kt')^+@V9Ksn#9$d&L2i@X7S>N6aeoCmZ+HI/dH)YktJSt,X7]WU$"8WWYcbJi1R/Ef6sbIBK:SUQNj^LA`u:GBs9]LC+Q
%nV4ZC^Qk2$@a`$$$O"E[1H!rZc;3p\l">6s@V\XX'V\l@2^m['2Jo7<c(2RrQM*0^&ZdQl"f8b[re;/UAGlSTU4*9$'OKO$7.o8p
%=jg)oSjiT7\cn\gCqOD!*q/\!Xn"[<.amXp]YDYe]=e06?6Bl6OTZU(e;!m>,)1ta(,JU^N,8qEorTA6QmlOWH[LBS?tt"c'3a@N
%cl>kW)$clE('6m0$)FX[8SM0oCrJrE0e0F]k[?s&WF)ZhDgc>/J^oDC[KW8C!/ZBWE-pXA^1F]F7;Uat;U.p5<UD`U@Id>FmRh3l
%YqC@lLRF&RqfFL8'k@%pE>i1j:u>RO?URGG>aLB`h5W"Nni]/bpBWcKlQ7Lk3g.,=<)tZHm]_BmWOO09cNW_--)j!unD8`6DRU*s
%50p,_>-dcEWtM.+9L[A'QOOjlM@pr=B[poEQI/WjTDX?be-E55H)iX6%`.B?$:nD"KXR"nPpf%,9T6G&G5HCV<?<i4NL.[:flTeq
%4`U(GF;2AgD`V6e7$oV3fAH4Jn]69/Rk=,@Y(-n;?$r4oi*SLLo65MbXE(9HH4f!D=W&X5;%4km[)gD2\u&2&Otr!%19d&bp]aS+
%Lp@Z8\UmZ2p-Y1(RI;<!KH\H0e9o3h8IBIimF,jVnp:;i.kD_W&cujnHEb*,k\Q]<dE/>Mlp*:@i3?pGlN,"/;43b`:2FQ<RLpX6
%,4]p3S?6Hqm<qH/8.u@,S.`[@M5XQ6D!<3YAY%XB+*L0GlHF].YDog?K0/e#1JS*/V[P'F*`fj.]U(4=RgE!F`HfhO4DP=F*]0mk
%[eJ%!ma1QKclG8SRYmYMj"`cehjpsT1S3e(P`X3Ph]X^)!I<7a\U]NO:S/VmX?%c"6'^\%9MH/LZ:15o=?b!`/;c0Gkk(P;$mk5[
%&6*<W\bpOYW"pDVQ4jO!")B:$X]C@S1Vhc0'iRWNS"6/NgMLR]VC$DP.2"a,*16:J*,5]'gqYrC@*-6l1OnKGjqY5e=ku(BREWaP
%"EPZ>CKM6n6?jqnV/.b4$>)$MSP5@qQAm/kj\1C%#>5%,#gW_,=\Yb8G,imnfr'eGGNU(.q5\lO8;\_u8\`cVSV391q"0:":Obo!
%UDsZFA(s*^<05/]QbhXbTRHd%hd]*;dVgX.h4\9s7mB@@29IT`$Q=F\P8<s$,+>F<09pQY*H\m*g+*`uj@1`t!BmLD79-V'5fD6e
%1Ru>hfg.DG$9*;n@i]$d3&a]')4!LQl3q_Gg^FN<*Q"d-5=eWmAtaWia.YeI1d#ZFXC7q1*D$ZV4Y!2JU([-V-@"hQ[dJ:n-ckt<
%m>R/GBL#jHeI\+`-LP#W3&N!?'pGP%->Wh(@1DG<mVkA5Bm*/#-_sE0Jt,O:OM\>ZbVbA*C*A^Eq7+g-p<e\JD4+SD::nPNcGeLd
%!#^s#C"mQ+n&p1ITlV$tej=>aDYq,SqeEkfHcP_8iWSR,EH>ZOUigMlci:+saE:=$=Rh1l=mF0M)7\?-Xs./VW2a9?F7B7=^f#U/
%'!G$,+H$kcB0@7hTsV:Od\b'c63O9GBQoS+Rc$b^KN#:12J/j_2rub8I[;CqT^lU(Eh^F*5U97*eD,61=N-Z)*'6GI+tX$=k_/N-
%MSsd0_9WqOZ(F0.e/M:cAH5\JanmhZPSe$]QV8,5i:K!4/rBlPn!Kd))4mQ13]_`FU7Ef`HHFNKVVV_pgW+kccsqape*E6XGF["=
%9j&gpp/14^<&jq+'SY;$$HpaD1)W\e^CmV20HR>`*QVjj"5J9ujk44&fCgSjG@^<!Q;/O2W,EW5hgB]>;eeG[/Pgd4d'e]3S\NPD
%oK$:<*To6RY,KldD1bY==oms"C;S80<S$M&ak0=Lji_=UiNV))=7]J,O%^:DR^=BR/M&o4NN^(d54$H<X0_s;lKPp#<'i6s^JM-&
%SuZo+;_BmB`HAK<:rrPU6t<KpAF4FnU=s$ah*l9FJ(SW24-t":muH]+DrP:uh>Vmg@a<u-k\WbKmrIhKkMDu(CW6CuXoru=H3)7s
%XUb2LPk;7UF+pg^!]jLEm'ce^90-*)H_[6L[R.<Rh\GqqML)+C`'&/XFE^#pV<McD@15s(f$ag5-GnRKG-6?FD$K[fU:?EmK3O^Y
%P-P:-UpDV&DE7CrV\M\#2O@0Ug=?2Y[rh@J^8YmnIP&2G.LS;2Q.Mj4?$&lI\oJB'/KArgrQ`BpH"rQ8`gd/#qgh66rJ:9,b'o\'
%J!]_M.KBCDr2gs/.C'$9<_VKS<d1g4,BF[fO!")Lr6@alYJRboWV9bPLW:f1r%98`6Lmb+B(Cg"htf5e8d`PKF^sikj8$T1X5CIX
%]DFMTEpbRChM#l(3CNpbI@E5H4RU.G\VlI`%_M+WkE>9$gUmp*]:f&/pbl'"1-)jChe"dHK6k%8&b"GaHgQ87cR)2#lab.*<MaX"
%_q[aP$]!P]^N1QJpMA\tr*@<lX.E%$/;iIAGGLYi3$_h=.!Pqr)EI!1'O5tsm*?bs>Q)jDU^IsViGW3Da3C96jZQUUo18e(:Dr<Z
%an^k-0R#O&Q]kW63CtJML\OhEjID4ho\52/IBYqcfPU:6kIu@)GA0CXJt.`bi=gDqGF*AhO`UPZHK\L#9:JcK92NrfL8_HM!48j]
%A(!efZuFZ7pGOAqhu7fq#tP$Mj3PL?h7rm[kPt=TIi,rrkDR*k-Tk7`R7c+Rh5>KQ#p#JT$5U"o)7YUM1N:e%9g'6qM.F$*P9-pk
%gc^b>T(R@0k:WC9HJ;b-,c'PNH!\n/K,#HXln>)S^X(ZJXaeF&-W=.PDX-tL:-G\e55CZ,7<IhR::n"&2prIeaft%(MU"@q\op%R
%c&0gF5&^2(rQa@N<76oRrEdm^LUlX\eXqk67H],l[sQSQ.kB9kK=i0>"IQbb_fJUh*_Ze8kg\(pQ>\$Ks8L#9oj7r\JF+T`9Z-kc
%&&1]2p8rW8mk!XcP@Z`rP:\r@Z+=>)lX"s(AXU*!:GoSX'fi0A5S`%<D9pNc2M`qo6'92]*pho&9ld%@=2nB$Ll\hDR1.^Dbk&D=
%VR4[qZaMR:]WSGAd(/bLB"Tpgn!i8N6M,+RKMXm*GoQW%.U65=&,iBH?*>*fS_NgT3IE<cCX]irR.Qc$b%b`D?#LM,UZ=2Q$AeDs
%"GJ4cF=1V"''0dqSk=k8+e'qk^31crp/;5-)<%/YX@4/`YbWl77LDYLSnu/ZSDLT5N]u8u,9X6NS3j_?c/;kB,?B@+*i*X8l25M3
%LJc\eO>>p.ejdD]/rjp7Ik'=(CUc#Lm%\V0[iG3DCLd1S+;sM3\*H'li&$Z(Dbs%^PaZcNWcZQ'a1OW$/)"?Of^$msckLbPDDU`e
%>Y#UQ`.dJ;"(<sT]f)_nm3eg[L;Z;q2m^kBJQ[7uJ6K_$Oi#t7MjFn,Q?ao/of&X?Rqu$Zp6g9-mF>YT1+m#$fdEiCfH#PBdm2rN
%T?q*J@'U0+V[]r"`:l1H0gWK/BQ6I2a,aF=>6oAYesDcpKKl?ZFJSY-h<l*b]Sp`RFIfS^rqQtOhb$sr$MKI1p7C?tQRfmhe?3E*
%qodUg\#k/^'g01O;u8:Qf+fNu['&J#ik7eH]&F1nqBrc#]WRXo0--=ha=)^5"k/l.<jY8VI#"hg-Tdf5`pYA^_:IjJ)0QUY$aPoc
%$bDJkldLcZ?JdJ']e^TV^NBC`78\Xn:I6,]Ytu/^.DJ-SQs[XgS=cBZB<8l-Hk,Ucr`:9+04mIs,s`&bs*Cqd^g5=E"oUkUs0"Zb
%V@JCGiO99nqgXM'lQ:WV]>IEorV;M8Nt(lRJ,/?dJ,UO>r9=5<)=taarr#VWrT33tT76fe[.a+kD?&kZhuEKCTDnbD5Q:TMVuQP0
%rr[k.Q3[EODuT:As-FgVoD\jiA[OJ~>
%AI9_PrivateDataEnd
